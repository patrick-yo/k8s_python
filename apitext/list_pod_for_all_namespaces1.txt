
cattle-system:::::::::::cattle-cluster-agent-56d68b4d9f-fvlfx
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 19, 10, 48, 29, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'cattle-cluster-agent-56d68b4d9f-',
              'generation': None,
              'labels': {'app': 'cattle-cluster-agent',
                         'pod-template-hash': '56d68b4d9f'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"1371a3de-8dcb-466f-ad6e-0550da447ca3"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:preferredDuringSchedulingIgnoredDuringExecution': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"cluster-register"}': {'.': {},
                                                                                                              'f:env': {'.': {},
                                                                                                                        'k:{"name":"CATTLE_CA_CHECKSUM"}': {'.': {},
                                                                                                                                                            'f:name': {},
                                                                                                                                                            'f:value': {}},
                                                                                                                        'k:{"name":"CATTLE_CLUSTER"}': {'.': {},
                                                                                                                                                        'f:name': {},
                                                                                                                                                        'f:value': {}},
                                                                                                                        'k:{"name":"CATTLE_FEATURES"}': {'.': {},
                                                                                                                                                         'f:name': {},
                                                                                                                                                         'f:value': {}},
                                                                                                                        'k:{"name":"CATTLE_K8S_MANAGED"}': {'.': {},
                                                                                                                                                            'f:name': {},
                                                                                                                                                            'f:value': {}},
                                                                                                                        'k:{"name":"CATTLE_SERVER"}': {'.': {},
                                                                                                                                                       'f:name': {},
                                                                                                                                                       'f:value': {}}},
                                                                                                              'f:image': {},
                                                                                                              'f:imagePullPolicy': {},
                                                                                                              'f:name': {},
                                                                                                              'f:resources': {},
                                                                                                              'f:terminationMessagePath': {},
                                                                                                              'f:terminationMessagePolicy': {},
                                                                                                              'f:volumeMounts': {'.': {},
                                                                                                                                 'k:{"mountPath":"/cattle-credentials"}': {'.': {},
                                                                                                                                                                           'f:mountPath': {},
                                                                                                                                                                           'f:name': {},
                                                                                                                                                                           'f:readOnly': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"cattle-credentials"}': {'.': {},
                                                                                                             'f:name': {},
                                                                                                             'f:secret': {'.': {},
                                                                                                                          'f:defaultMode': {},
                                                                                                                          'f:secretName': {}}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 25, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.176"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 51, tzinfo=tzutc())}],
              'name': 'cattle-cluster-agent-56d68b4d9f-fvlfx',
              'namespace': 'cattle-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'cattle-cluster-agent-56d68b4d9f',
                                    'uid': '1371a3de-8dcb-466f-ad6e-0550da447ca3'}],
              'resource_version': '1814429',
              'self_link': '/api/v1/namespaces/cattle-system/pods/cattle-cluster-agent-56d68b4d9f-fvlfx',
              'uid': '60e863a6-033b-4d82-adff-0567d2655878'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': [{'preference': {'match_expressions': [{'key': 'node-role.kubernetes.io/controlplane',
                                                                                                                                         'operator': 'In',
                                                                                                                                         'values': ['true']}],
                                                                                                                  'match_fields': None},
                                                                                                   'weight': 100},
                                                                                                  {'preference': {'match_expressions': [{'key': 'node-role.kubernetes.io/etcd',
                                                                                                                                         'operator': 'In',
                                                                                                                                         'values': ['true']}],
                                                                                                                  'match_fields': None},
                                                                                                   'weight': 1}],
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': [{'key': 'beta.kubernetes.io/os',
                                                                                                                                                 'operator': 'NotIn',
                                                                                                                                                 'values': ['windows']}],
                                                                                                                          'match_fields': None}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': None,
                          'env': [{'name': 'CATTLE_FEATURES',
                                   'value': 'dashboard=true',
                                   'value_from': None},
                                  {'name': 'CATTLE_SERVER',
                                   'value': 'https://192.168.242.61',
                                   'value_from': None},
                                  {'name': 'CATTLE_CA_CHECKSUM',
                                   'value': '77b066f0c163cdc769da72b566fd1edd10d01dddda12e0d3f20e50750b052ef3',
                                   'value_from': None},
                                  {'name': 'CATTLE_CLUSTER',
                                   'value': 'true',
                                   'value_from': None},
                                  {'name': 'CATTLE_K8S_MANAGED',
                                   'value': 'true',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'rancher/rancher-agent:v2.4.8',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'cluster-register',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/cattle-credentials',
                                             'mount_propagation': None,
                                             'name': 'cattle-credentials',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'cattle-token-wzfx8',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'cattle',
          'service_account_name': 'cattle',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'cattle-credentials',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 320,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'cattle-credentials-f6a37b2'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'cattle-token-wzfx8',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'cattle-token-wzfx8'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 10, 48, 28, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 15, 3, 6, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 15, 3, 6, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 10, 48, 29, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://04af9a530717ae6ba0b0020ae08ca77fa212b8f45508b65dd7417f2a3e7b37ec',
                                    'image': 'rancher/rancher-agent:v2.4.8',
                                    'image_id': 'docker-pullable://rancher/rancher-agent@sha256:c8a111e6250a313f1dd5d34696ddbef9068f70ddf4b15ab4c9cefd0ea39b76c1',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://0173fdddbd4a45482301737fb4175ccd3e327aaa3d720286e749633cd624cb25',
                                                                  'exit_code': 1,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 12, 8, 13, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 12, 8, 10, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'cluster-register',
                                    'ready': True,
                                    'restart_count': 138,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 15, 3, 4, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.176'}],
            'pod_ip': '10.244.2.176',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 19, 10, 48, 28, tzinfo=tzutc())}}

cattle-system:::::::::::cattle-node-agent-8dn9d
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 19, 10, 48, 43, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'cattle-node-agent-',
              'generation': None,
              'labels': {'app': 'cattle-agent',
                         'controller-revision-hash': '6d85545f8c',
                         'pod-template-generation': '2'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"4859b2aa-c4ce-4b19-8d17-d1bae90b2756"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"agent"}': {'.': {},
                                                                                                   'f:env': {'.': {},
                                                                                                             'k:{"name":"CATTLE_AGENT_CONNECT"}': {'.': {},
                                                                                                                                                   'f:name': {},
                                                                                                                                                   'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_CA_CHECKSUM"}': {'.': {},
                                                                                                                                                 'f:name': {},
                                                                                                                                                 'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_CLUSTER"}': {'.': {},
                                                                                                                                             'f:name': {},
                                                                                                                                             'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_K8S_MANAGED"}': {'.': {},
                                                                                                                                                 'f:name': {},
                                                                                                                                                 'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_NODE_NAME"}': {'.': {},
                                                                                                                                               'f:name': {},
                                                                                                                                               'f:valueFrom': {'.': {},
                                                                                                                                                               'f:fieldRef': {'.': {},
                                                                                                                                                                              'f:apiVersion': {},
                                                                                                                                                                              'f:fieldPath': {}}}},
                                                                                                             'k:{"name":"CATTLE_SERVER"}': {'.': {},
                                                                                                                                            'f:name': {},
                                                                                                                                            'f:value': {}}},
                                                                                                   'f:image': {},
                                                                                                   'f:imagePullPolicy': {},
                                                                                                   'f:name': {},
                                                                                                   'f:resources': {},
                                                                                                   'f:securityContext': {'.': {},
                                                                                                                         'f:privileged': {}},
                                                                                                   'f:terminationMessagePath': {},
                                                                                                   'f:terminationMessagePolicy': {},
                                                                                                   'f:volumeMounts': {'.': {},
                                                                                                                      'k:{"mountPath":"/cattle-credentials"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {},
                                                                                                                                                                'f:readOnly': {}},
                                                                                                                      'k:{"mountPath":"/etc/docker/certs.d"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {}},
                                                                                                                      'k:{"mountPath":"/etc/kubernetes"}': {'.': {},
                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                            'f:name': {}},
                                                                                                                      'k:{"mountPath":"/run"}': {'.': {},
                                                                                                                                                 'f:mountPath': {},
                                                                                                                                                 'f:name': {}},
                                                                                                                      'k:{"mountPath":"/var/run"}': {'.': {},
                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                     'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"cattle-credentials"}': {'.': {},
                                                                                                             'f:name': {},
                                                                                                             'f:secret': {'.': {},
                                                                                                                          'f:defaultMode': {},
                                                                                                                          'f:secretName': {}}},
                                                                         'k:{"name":"docker-certs"}': {'.': {},
                                                                                                       'f:hostPath': {'.': {},
                                                                                                                      'f:path': {},
                                                                                                                      'f:type': {}},
                                                                                                       'f:name': {}},
                                                                         'k:{"name":"k8s-ssl"}': {'.': {},
                                                                                                  'f:hostPath': {'.': {},
                                                                                                                 'f:path': {},
                                                                                                                 'f:type': {}},
                                                                                                  'f:name': {}},
                                                                         'k:{"name":"run"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}},
                                                                         'k:{"name":"var-run"}': {'.': {},
                                                                                                  'f:hostPath': {'.': {},
                                                                                                                 'f:path': {},
                                                                                                                 'f:type': {}},
                                                                                                  'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 21, 0, 54, 33, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:message': {},
                                                                                                               'f:reason': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:message': {},
                                                                                                     'f:reason': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.101"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 1, 43, 38, tzinfo=tzutc())}],
              'name': 'cattle-node-agent-8dn9d',
              'namespace': 'cattle-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'cattle-node-agent',
                                    'uid': '4859b2aa-c4ce-4b19-8d17-d1bae90b2756'}],
              'resource_version': '1824325',
              'self_link': '/api/v1/namespaces/cattle-system/pods/cattle-node-agent-8dn9d',
              'uid': 'bf4536d0-a92b-4349-a996-77a4a8e35413'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node1']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': None,
                          'env': [{'name': 'CATTLE_NODE_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.nodeName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'CATTLE_SERVER',
                                   'value': 'https://192.168.242.61',
                                   'value_from': None},
                                  {'name': 'CATTLE_CA_CHECKSUM',
                                   'value': '77b066f0c163cdc769da72b566fd1edd10d01dddda12e0d3f20e50750b052ef3',
                                   'value_from': None},
                                  {'name': 'CATTLE_CLUSTER',
                                   'value': 'false',
                                   'value_from': None},
                                  {'name': 'CATTLE_K8S_MANAGED',
                                   'value': 'true',
                                   'value_from': None},
                                  {'name': 'CATTLE_AGENT_CONNECT',
                                   'value': 'true',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'rancher/rancher-agent:v2.4.8',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'agent',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/cattle-credentials',
                                             'mount_propagation': None,
                                             'name': 'cattle-credentials',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/kubernetes',
                                             'mount_propagation': None,
                                             'name': 'k8s-ssl',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run',
                                             'mount_propagation': None,
                                             'name': 'var-run',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/run',
                                             'mount_propagation': None,
                                             'name': 'run',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/docker/certs.d',
                                             'mount_propagation': None,
                                             'name': 'docker-certs',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'cattle-token-wzfx8',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'cattle',
          'service_account_name': 'cattle',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/kubernetes',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'k8s-ssl',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/run',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'var-run',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/run',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'run',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'cattle-credentials',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 320,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'cattle-credentials-f6a37b2'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/docker/certs.d',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'docker-certs',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'cattle-token-wzfx8',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'cattle-token-wzfx8'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 10, 48, 44, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 1, 43, 25, tzinfo=tzutc()),
                            'message': 'containers with unready status: '
                                       '[agent]',
                            'reason': 'ContainersNotReady',
                            'status': 'False',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 1, 43, 25, tzinfo=tzutc()),
                            'message': 'containers with unready status: '
                                       '[agent]',
                            'reason': 'ContainersNotReady',
                            'status': 'False',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 10, 48, 43, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://26f75d57844999f7eeff14838669954e464c0f6aa95e0336c999662afe91b3dc',
                                    'image': 'rancher/rancher-agent:v2.4.8',
                                    'image_id': 'docker-pullable://rancher/rancher-agent@sha256:c8a111e6250a313f1dd5d34696ddbef9068f70ddf4b15ab4c9cefd0ea39b76c1',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://26f75d57844999f7eeff14838669954e464c0f6aa95e0336c999662afe91b3dc',
                                                                  'exit_code': 1,
                                                                  'finished_at': datetime.datetime(2020, 10, 23, 1, 43, 24, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 23, 1, 43, 21, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'agent',
                                    'ready': False,
                                    'restart_count': 157,
                                    'started': False,
                                    'state': {'running': None,
                                              'terminated': None,
                                              'waiting': {'message': 'back-off '
                                                                     '5m0s '
                                                                     'restarting '
                                                                     'failed '
                                                                     'container=agent '
                                                                     'pod=cattle-node-agent-8dn9d_cattle-system(bf4536d0-a92b-4349-a996-77a4a8e35413)',
                                                          'reason': 'CrashLoopBackOff'}}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.101'}],
            'pod_ip': '192.168.242.101',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 19, 10, 48, 44, tzinfo=tzutc())}}

cattle-system:::::::::::cattle-node-agent-cfwfx
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 19, 10, 48, 41, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'cattle-node-agent-',
              'generation': None,
              'labels': {'app': 'cattle-agent',
                         'controller-revision-hash': '6d85545f8c',
                         'pod-template-generation': '2'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"4859b2aa-c4ce-4b19-8d17-d1bae90b2756"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"agent"}': {'.': {},
                                                                                                   'f:env': {'.': {},
                                                                                                             'k:{"name":"CATTLE_AGENT_CONNECT"}': {'.': {},
                                                                                                                                                   'f:name': {},
                                                                                                                                                   'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_CA_CHECKSUM"}': {'.': {},
                                                                                                                                                 'f:name': {},
                                                                                                                                                 'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_CLUSTER"}': {'.': {},
                                                                                                                                             'f:name': {},
                                                                                                                                             'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_K8S_MANAGED"}': {'.': {},
                                                                                                                                                 'f:name': {},
                                                                                                                                                 'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_NODE_NAME"}': {'.': {},
                                                                                                                                               'f:name': {},
                                                                                                                                               'f:valueFrom': {'.': {},
                                                                                                                                                               'f:fieldRef': {'.': {},
                                                                                                                                                                              'f:apiVersion': {},
                                                                                                                                                                              'f:fieldPath': {}}}},
                                                                                                             'k:{"name":"CATTLE_SERVER"}': {'.': {},
                                                                                                                                            'f:name': {},
                                                                                                                                            'f:value': {}}},
                                                                                                   'f:image': {},
                                                                                                   'f:imagePullPolicy': {},
                                                                                                   'f:name': {},
                                                                                                   'f:resources': {},
                                                                                                   'f:securityContext': {'.': {},
                                                                                                                         'f:privileged': {}},
                                                                                                   'f:terminationMessagePath': {},
                                                                                                   'f:terminationMessagePolicy': {},
                                                                                                   'f:volumeMounts': {'.': {},
                                                                                                                      'k:{"mountPath":"/cattle-credentials"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {},
                                                                                                                                                                'f:readOnly': {}},
                                                                                                                      'k:{"mountPath":"/etc/docker/certs.d"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {}},
                                                                                                                      'k:{"mountPath":"/etc/kubernetes"}': {'.': {},
                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                            'f:name': {}},
                                                                                                                      'k:{"mountPath":"/run"}': {'.': {},
                                                                                                                                                 'f:mountPath': {},
                                                                                                                                                 'f:name': {}},
                                                                                                                      'k:{"mountPath":"/var/run"}': {'.': {},
                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                     'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"cattle-credentials"}': {'.': {},
                                                                                                             'f:name': {},
                                                                                                             'f:secret': {'.': {},
                                                                                                                          'f:defaultMode': {},
                                                                                                                          'f:secretName': {}}},
                                                                         'k:{"name":"docker-certs"}': {'.': {},
                                                                                                       'f:hostPath': {'.': {},
                                                                                                                      'f:path': {},
                                                                                                                      'f:type': {}},
                                                                                                       'f:name': {}},
                                                                         'k:{"name":"k8s-ssl"}': {'.': {},
                                                                                                  'f:hostPath': {'.': {},
                                                                                                                 'f:path': {},
                                                                                                                 'f:type': {}},
                                                                                                  'f:name': {}},
                                                                         'k:{"name":"run"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}},
                                                                         'k:{"name":"var-run"}': {'.': {},
                                                                                                  'f:hostPath': {'.': {},
                                                                                                                 'f:path': {},
                                                                                                                 'f:type': {}},
                                                                                                  'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 15, 5, 48, 58, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:message': {},
                                                                                                               'f:reason': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:message': {},
                                                                                                     'f:reason': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.100"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 1, 40, 46, tzinfo=tzutc())}],
              'name': 'cattle-node-agent-cfwfx',
              'namespace': 'cattle-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'cattle-node-agent',
                                    'uid': '4859b2aa-c4ce-4b19-8d17-d1bae90b2756'}],
              'resource_version': '1823793',
              'self_link': '/api/v1/namespaces/cattle-system/pods/cattle-node-agent-cfwfx',
              'uid': 'f1219a01-0a8d-45cf-8121-7507d74cd7b8'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['master']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': None,
                          'env': [{'name': 'CATTLE_NODE_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.nodeName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'CATTLE_SERVER',
                                   'value': 'https://192.168.242.61',
                                   'value_from': None},
                                  {'name': 'CATTLE_CA_CHECKSUM',
                                   'value': '77b066f0c163cdc769da72b566fd1edd10d01dddda12e0d3f20e50750b052ef3',
                                   'value_from': None},
                                  {'name': 'CATTLE_CLUSTER',
                                   'value': 'false',
                                   'value_from': None},
                                  {'name': 'CATTLE_K8S_MANAGED',
                                   'value': 'true',
                                   'value_from': None},
                                  {'name': 'CATTLE_AGENT_CONNECT',
                                   'value': 'true',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'rancher/rancher-agent:v2.4.8',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'agent',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/cattle-credentials',
                                             'mount_propagation': None,
                                             'name': 'cattle-credentials',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/kubernetes',
                                             'mount_propagation': None,
                                             'name': 'k8s-ssl',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run',
                                             'mount_propagation': None,
                                             'name': 'var-run',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/run',
                                             'mount_propagation': None,
                                             'name': 'run',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/docker/certs.d',
                                             'mount_propagation': None,
                                             'name': 'docker-certs',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'cattle-token-wzfx8',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'master',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'cattle',
          'service_account_name': 'cattle',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/kubernetes',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'k8s-ssl',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/run',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'var-run',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/run',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'run',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'cattle-credentials',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 320,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'cattle-credentials-f6a37b2'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/docker/certs.d',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'docker-certs',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'cattle-token-wzfx8',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'cattle-token-wzfx8'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 10, 48, 41, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 1, 40, 32, tzinfo=tzutc()),
                            'message': 'containers with unready status: '
                                       '[agent]',
                            'reason': 'ContainersNotReady',
                            'status': 'False',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 1, 40, 32, tzinfo=tzutc()),
                            'message': 'containers with unready status: '
                                       '[agent]',
                            'reason': 'ContainersNotReady',
                            'status': 'False',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 10, 48, 41, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://c69bf65428a4b121be5138398bebf347641117c668221133dcc57956f25f01a8',
                                    'image': 'rancher/rancher-agent:v2.4.8',
                                    'image_id': 'docker-pullable://rancher/rancher-agent@sha256:c8a111e6250a313f1dd5d34696ddbef9068f70ddf4b15ab4c9cefd0ea39b76c1',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://c69bf65428a4b121be5138398bebf347641117c668221133dcc57956f25f01a8',
                                                                  'exit_code': 1,
                                                                  'finished_at': datetime.datetime(2020, 10, 23, 1, 40, 32, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 23, 1, 40, 29, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'agent',
                                    'ready': False,
                                    'restart_count': 155,
                                    'started': False,
                                    'state': {'running': None,
                                              'terminated': None,
                                              'waiting': {'message': 'back-off '
                                                                     '5m0s '
                                                                     'restarting '
                                                                     'failed '
                                                                     'container=agent '
                                                                     'pod=cattle-node-agent-cfwfx_cattle-system(f1219a01-0a8d-45cf-8121-7507d74cd7b8)',
                                                          'reason': 'CrashLoopBackOff'}}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.100',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.100'}],
            'pod_ip': '192.168.242.100',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 19, 10, 48, 41, tzinfo=tzutc())}}

cattle-system:::::::::::cattle-node-agent-kv7gl
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 19, 10, 48, 32, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'cattle-node-agent-',
              'generation': None,
              'labels': {'app': 'cattle-agent',
                         'controller-revision-hash': '6d85545f8c',
                         'pod-template-generation': '2'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"4859b2aa-c4ce-4b19-8d17-d1bae90b2756"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"agent"}': {'.': {},
                                                                                                   'f:env': {'.': {},
                                                                                                             'k:{"name":"CATTLE_AGENT_CONNECT"}': {'.': {},
                                                                                                                                                   'f:name': {},
                                                                                                                                                   'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_CA_CHECKSUM"}': {'.': {},
                                                                                                                                                 'f:name': {},
                                                                                                                                                 'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_CLUSTER"}': {'.': {},
                                                                                                                                             'f:name': {},
                                                                                                                                             'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_K8S_MANAGED"}': {'.': {},
                                                                                                                                                 'f:name': {},
                                                                                                                                                 'f:value': {}},
                                                                                                             'k:{"name":"CATTLE_NODE_NAME"}': {'.': {},
                                                                                                                                               'f:name': {},
                                                                                                                                               'f:valueFrom': {'.': {},
                                                                                                                                                               'f:fieldRef': {'.': {},
                                                                                                                                                                              'f:apiVersion': {},
                                                                                                                                                                              'f:fieldPath': {}}}},
                                                                                                             'k:{"name":"CATTLE_SERVER"}': {'.': {},
                                                                                                                                            'f:name': {},
                                                                                                                                            'f:value': {}}},
                                                                                                   'f:image': {},
                                                                                                   'f:imagePullPolicy': {},
                                                                                                   'f:name': {},
                                                                                                   'f:resources': {},
                                                                                                   'f:securityContext': {'.': {},
                                                                                                                         'f:privileged': {}},
                                                                                                   'f:terminationMessagePath': {},
                                                                                                   'f:terminationMessagePolicy': {},
                                                                                                   'f:volumeMounts': {'.': {},
                                                                                                                      'k:{"mountPath":"/cattle-credentials"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {},
                                                                                                                                                                'f:readOnly': {}},
                                                                                                                      'k:{"mountPath":"/etc/docker/certs.d"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {}},
                                                                                                                      'k:{"mountPath":"/etc/kubernetes"}': {'.': {},
                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                            'f:name': {}},
                                                                                                                      'k:{"mountPath":"/run"}': {'.': {},
                                                                                                                                                 'f:mountPath': {},
                                                                                                                                                 'f:name': {}},
                                                                                                                      'k:{"mountPath":"/var/run"}': {'.': {},
                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                     'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"cattle-credentials"}': {'.': {},
                                                                                                             'f:name': {},
                                                                                                             'f:secret': {'.': {},
                                                                                                                          'f:defaultMode': {},
                                                                                                                          'f:secretName': {}}},
                                                                         'k:{"name":"docker-certs"}': {'.': {},
                                                                                                       'f:hostPath': {'.': {},
                                                                                                                      'f:path': {},
                                                                                                                      'f:type': {}},
                                                                                                       'f:name': {}},
                                                                         'k:{"name":"k8s-ssl"}': {'.': {},
                                                                                                  'f:hostPath': {'.': {},
                                                                                                                 'f:path': {},
                                                                                                                 'f:type': {}},
                                                                                                  'f:name': {}},
                                                                         'k:{"name":"run"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}},
                                                                         'k:{"name":"var-run"}': {'.': {},
                                                                                                  'f:hostPath': {'.': {},
                                                                                                                 'f:path': {},
                                                                                                                 'f:type': {}},
                                                                                                  'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 26, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.102"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 9, tzinfo=tzutc())}],
              'name': 'cattle-node-agent-kv7gl',
              'namespace': 'cattle-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'cattle-node-agent',
                                    'uid': '4859b2aa-c4ce-4b19-8d17-d1bae90b2756'}],
              'resource_version': '1814538',
              'self_link': '/api/v1/namespaces/cattle-system/pods/cattle-node-agent-kv7gl',
              'uid': 'c5f8f120-c630-478b-9ce5-8a60fa7bda23'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node2']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': None,
                          'env': [{'name': 'CATTLE_NODE_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.nodeName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'CATTLE_SERVER',
                                   'value': 'https://192.168.242.61',
                                   'value_from': None},
                                  {'name': 'CATTLE_CA_CHECKSUM',
                                   'value': '77b066f0c163cdc769da72b566fd1edd10d01dddda12e0d3f20e50750b052ef3',
                                   'value_from': None},
                                  {'name': 'CATTLE_CLUSTER',
                                   'value': 'false',
                                   'value_from': None},
                                  {'name': 'CATTLE_K8S_MANAGED',
                                   'value': 'true',
                                   'value_from': None},
                                  {'name': 'CATTLE_AGENT_CONNECT',
                                   'value': 'true',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'rancher/rancher-agent:v2.4.8',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'agent',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/cattle-credentials',
                                             'mount_propagation': None,
                                             'name': 'cattle-credentials',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/kubernetes',
                                             'mount_propagation': None,
                                             'name': 'k8s-ssl',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run',
                                             'mount_propagation': None,
                                             'name': 'var-run',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/run',
                                             'mount_propagation': None,
                                             'name': 'run',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/docker/certs.d',
                                             'mount_propagation': None,
                                             'name': 'docker-certs',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'cattle-token-wzfx8',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'cattle',
          'service_account_name': 'cattle',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/kubernetes',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'k8s-ssl',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/run',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'var-run',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/run',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'run',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'cattle-credentials',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 320,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'cattle-credentials-f6a37b2'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/docker/certs.d',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'docker-certs',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'cattle-token-wzfx8',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'cattle-token-wzfx8'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 10, 48, 31, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 15, 3, 6, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 15, 3, 6, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 10, 48, 32, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://32ebac028a972e9f14a75fa1cb9bb5567f1053cebc4ed34886c945ab35bbafeb',
                                    'image': 'rancher/rancher-agent:v2.4.8',
                                    'image_id': 'docker-pullable://rancher/rancher-agent@sha256:c8a111e6250a313f1dd5d34696ddbef9068f70ddf4b15ab4c9cefd0ea39b76c1',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://70da42163f9354b1fc66b11abaaf14e5fe648f5e8ef42784e425a850661896a6',
                                                                  'exit_code': 1,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 12, 7, 42, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 12, 7, 39, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'agent',
                                    'ready': True,
                                    'restart_count': 138,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 15, 3, 4, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.102'}],
            'pod_ip': '192.168.242.102',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 19, 10, 48, 31, tzinfo=tzutc())}}

default:::::::::::nginx
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 19, 1, 37, 1, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': None,
              'generation': None,
              'labels': {'run': 'nginx'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:labels': {'.': {},
                                                                            'f:run': {}}},
                                                'f:spec': {'f:containers': {'k:{"name":"nginx"}': {'.': {},
                                                                                                   'f:image': {},
                                                                                                   'f:imagePullPolicy': {},
                                                                                                   'f:name': {},
                                                                                                   'f:resources': {},
                                                                                                   'f:terminationMessagePath': {},
                                                                                                   'f:terminationMessagePolicy': {}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:terminationGracePeriodSeconds': {}}},
                                  'manager': 'kubectl',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 19, 1, 37, 1, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.178"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 4, tzinfo=tzutc())}],
              'name': 'nginx',
              'namespace': 'default',
              'owner_references': None,
              'resource_version': '1814524',
              'self_link': '/api/v1/namespaces/default/pods/nginx',
              'uid': '2c138ac7-28e0-49cf-8748-e8d3791176e8'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'nginx',
                          'image_pull_policy': 'Always',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'nginx',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'default-token-mxb4z',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'default',
          'service_account_name': 'default',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'default-token-mxb4z',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'default-token-mxb4z'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 19, 1, 36, 59, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 14, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 14, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 19, 1, 37, 1, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://f0b9c218ad9951d06082ff9e789c342339748f680809d54d4ba70c3f3e1bfd7c',
                                    'image': 'nginx:latest',
                                    'image_id': 'docker-pullable://nginx@sha256:ed7f815851b5299f616220a63edac69a4cc200e7f536a56e421988da82e44ed8',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://fc3c676cb4541ac61b669ab2152748f2cdd5dd4dd42bad351f4cd599442ce9e2',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 1, 40, 36, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'nginx',
                                    'ready': True,
                                    'restart_count': 1,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 13, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.178'}],
            'pod_ip': '10.244.2.178',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 19, 1, 36, 59, tzinfo=tzutc())}}

default:::::::::::python-test-5cb7845979-qfn2c
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 28, 7, 3, 32, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'python-test-5cb7845979-',
              'generation': None,
              'labels': {'app': 'python-test',
                         'pod-template-hash': '5cb7845979'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"f318a90e-8ead-4506-8e5d-51816e31fc56"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"python-test"}': {'.': {},
                                                                                                         'f:image': {},
                                                                                                         'f:imagePullPolicy': {},
                                                                                                         'f:name': {},
                                                                                                         'f:resources': {},
                                                                                                         'f:terminationMessagePath': {},
                                                                                                         'f:terminationMessagePolicy': {}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:imagePullSecrets': {'.': {},
                                                                                  'k:{"name":"registry-key"}': {'.': {},
                                                                                                                'f:name': {}}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:terminationGracePeriodSeconds': {}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 54, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.151"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 43, tzinfo=tzutc())}],
              'name': 'python-test-5cb7845979-qfn2c',
              'namespace': 'default',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'python-test-5cb7845979',
                                    'uid': 'f318a90e-8ead-4506-8e5d-51816e31fc56'}],
              'resource_version': '1814308',
              'self_link': '/api/v1/namespaces/default/pods/python-test-5cb7845979-qfn2c',
              'uid': 'a3ded7fe-421c-4fa0-8584-f9a722b79f26'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': '192.168.242.31:80/library/python_test:v2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'python-test',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'default-token-mxb4z',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': [{'name': 'registry-key'}],
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'default',
          'service_account_name': 'default',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'default-token-mxb4z',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'default-token-mxb4z'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 28, 7, 3, 32, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 15, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 15, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 28, 7, 3, 32, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://48f26db495b2495462a4318f61e5eff7ffa569535415d881f8c65f5473f1f207',
                                    'image': '192.168.242.31:80/library/python_test:v2',
                                    'image_id': 'docker-pullable://192.168.242.31:80/library/python_test@sha256:5b4532b23e12db740e9575a6f0c00cbcf71108180827a19166d10ee91e155c76',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://233204b8304ac5c24d7f575c1eff6d1b8256a526c9056c8c0291e701c5819714',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 2, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'python-test',
                                    'ready': True,
                                    'restart_count': 5,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 14, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.151'}],
            'pod_ip': '10.244.1.151',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 28, 7, 3, 32, tzinfo=tzutc())}}

default:::::::::::python-test-5cb7845979-xf6mk
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 28, 7, 3, 32, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'python-test-5cb7845979-',
              'generation': None,
              'labels': {'app': 'python-test',
                         'pod-template-hash': '5cb7845979'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"f318a90e-8ead-4506-8e5d-51816e31fc56"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"python-test"}': {'.': {},
                                                                                                         'f:image': {},
                                                                                                         'f:imagePullPolicy': {},
                                                                                                         'f:name': {},
                                                                                                         'f:resources': {},
                                                                                                         'f:terminationMessagePath': {},
                                                                                                         'f:terminationMessagePolicy': {}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:imagePullSecrets': {'.': {},
                                                                                  'k:{"name":"registry-key"}': {'.': {},
                                                                                                                'f:name': {}}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:terminationGracePeriodSeconds': {}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 54, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.163"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 49, tzinfo=tzutc())}],
              'name': 'python-test-5cb7845979-xf6mk',
              'namespace': 'default',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'python-test-5cb7845979',
                                    'uid': 'f318a90e-8ead-4506-8e5d-51816e31fc56'}],
              'resource_version': '1814385',
              'self_link': '/api/v1/namespaces/default/pods/python-test-5cb7845979-xf6mk',
              'uid': 'ae8152fa-b896-43b4-bd9b-a5cb46c26823'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': '192.168.242.31:80/library/python_test:v2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'python-test',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'default-token-mxb4z',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': [{'name': 'registry-key'}],
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'default',
          'service_account_name': 'default',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'default-token-mxb4z',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'default-token-mxb4z'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 28, 7, 3, 32, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 28, 7, 3, 32, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://2817ff50d75aae198c985858793e97c24c397ae7efd9fdff98eeb5afb39d9d8d',
                                    'image': '192.168.242.31:80/library/python_test:v2',
                                    'image_id': 'docker-pullable://192.168.242.31:80/library/python_test@sha256:5b4532b23e12db740e9575a6f0c00cbcf71108180827a19166d10ee91e155c76',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://81aaeb03966123ccce1bce7650f8591f64c1ecbde3e3c567206f77a7a34882b9',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 7, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'python-test',
                                    'ready': True,
                                    'restart_count': 5,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 15, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.163'}],
            'pod_ip': '10.244.1.163',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 28, 7, 3, 32, tzinfo=tzutc())}}

default:::::::::::web-5dcb957ccc-9cnww
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 8, 28, 7, 57, 42, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'web-5dcb957ccc-',
              'generation': None,
              'labels': {'app': 'web', 'pod-template-hash': '5dcb957ccc'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"cc1755ed-a3f9-4b95-b133-98a88c619878"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"nginx"}': {'.': {},
                                                                                                   'f:image': {},
                                                                                                   'f:imagePullPolicy': {},
                                                                                                   'f:name': {},
                                                                                                   'f:resources': {},
                                                                                                   'f:terminationMessagePath': {},
                                                                                                   'f:terminationMessagePolicy': {}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:terminationGracePeriodSeconds': {}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.148"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 52, tzinfo=tzutc())}],
              'name': 'web-5dcb957ccc-9cnww',
              'namespace': 'default',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'web-5dcb957ccc',
                                    'uid': 'cc1755ed-a3f9-4b95-b133-98a88c619878'}],
              'resource_version': '1814447',
              'self_link': '/api/v1/namespaces/default/pods/web-5dcb957ccc-9cnww',
              'uid': 'c0b1a036-273e-4d92-bd3f-45026845f4b9'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'nginx',
                          'image_pull_policy': 'Always',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'nginx',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'default-token-mxb4z',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'default',
          'service_account_name': 'default',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'default-token-mxb4z',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'default-token-mxb4z'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 57, 42, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 23, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 23, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 57, 42, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://d9590124159e34d154925e82b1bb05ec5df9a7bd695c93afc04b5a19b68390c0',
                                    'image': 'nginx:latest',
                                    'image_id': 'docker-pullable://nginx@sha256:ed7f815851b5299f616220a63edac69a4cc200e7f536a56e421988da82e44ed8',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://42dbde6caae476bc1f9c7c8759b571fbe653a4808e12fc06bec7ac71ade11d0f',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 51, 24, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'nginx',
                                    'ready': True,
                                    'restart_count': 11,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 19, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.148'}],
            'pod_ip': '10.244.1.148',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 8, 28, 7, 57, 42, tzinfo=tzutc())}}

default:::::::::::web-5dcb957ccc-shjhf
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 19, 8, 48, 46, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'web-5dcb957ccc-',
              'generation': None,
              'labels': {'app': 'web', 'pod-template-hash': '5dcb957ccc'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"cc1755ed-a3f9-4b95-b133-98a88c619878"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"nginx"}': {'.': {},
                                                                                                   'f:image': {},
                                                                                                   'f:imagePullPolicy': {},
                                                                                                   'f:name': {},
                                                                                                   'f:resources': {},
                                                                                                   'f:terminationMessagePath': {},
                                                                                                   'f:terminationMessagePolicy': {}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:terminationGracePeriodSeconds': {}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.158"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 47, tzinfo=tzutc())}],
              'name': 'web-5dcb957ccc-shjhf',
              'namespace': 'default',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'web-5dcb957ccc',
                                    'uid': 'cc1755ed-a3f9-4b95-b133-98a88c619878'}],
              'resource_version': '1814360',
              'self_link': '/api/v1/namespaces/default/pods/web-5dcb957ccc-shjhf',
              'uid': '2e6692e6-ab7c-4544-aeac-38f78d2c30cf'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'nginx',
                          'image_pull_policy': 'Always',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'nginx',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'default-token-mxb4z',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'default',
          'service_account_name': 'default',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'default-token-mxb4z',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'default-token-mxb4z'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 8, 48, 46, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 26, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 26, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 8, 48, 46, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://df6961e98d78f8c900c782ed72fa7a1a14410ef13748f782f98a9c4510b4f95c',
                                    'image': 'nginx:latest',
                                    'image_id': 'docker-pullable://nginx@sha256:ed7f815851b5299f616220a63edac69a4cc200e7f536a56e421988da82e44ed8',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://7928f661f9cca9c904ebc1ab0a74cf9c4416cd00ec1dcc811f344d1f11711c45',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 50, 1, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'nginx',
                                    'ready': True,
                                    'restart_count': 8,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 25, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.158'}],
            'pod_ip': '10.244.1.158',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 19, 8, 48, 46, tzinfo=tzutc())}}

kube-system:::::::::::coredns-546565776c-29cmv
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 19, 8, 48, 46, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'coredns-546565776c-',
              'generation': None,
              'labels': {'k8s-app': 'kube-dns',
                         'pod-template-hash': '546565776c'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:k8s-app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"d6d1cc15-79ce-40df-9839-a0ab927cdda2"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"coredns"}': {'.': {},
                                                                                                     'f:args': {},
                                                                                                     'f:image': {},
                                                                                                     'f:imagePullPolicy': {},
                                                                                                     'f:livenessProbe': {'.': {},
                                                                                                                         'f:failureThreshold': {},
                                                                                                                         'f:httpGet': {'.': {},
                                                                                                                                       'f:path': {},
                                                                                                                                       'f:port': {},
                                                                                                                                       'f:scheme': {}},
                                                                                                                         'f:initialDelaySeconds': {},
                                                                                                                         'f:periodSeconds': {},
                                                                                                                         'f:successThreshold': {},
                                                                                                                         'f:timeoutSeconds': {}},
                                                                                                     'f:name': {},
                                                                                                     'f:ports': {'.': {},
                                                                                                                 'k:{"containerPort":53,"protocol":"TCP"}': {'.': {},
                                                                                                                                                             'f:containerPort': {},
                                                                                                                                                             'f:name': {},
                                                                                                                                                             'f:protocol': {}},
                                                                                                                 'k:{"containerPort":53,"protocol":"UDP"}': {'.': {},
                                                                                                                                                             'f:containerPort': {},
                                                                                                                                                             'f:name': {},
                                                                                                                                                             'f:protocol': {}},
                                                                                                                 'k:{"containerPort":9153,"protocol":"TCP"}': {'.': {},
                                                                                                                                                               'f:containerPort': {},
                                                                                                                                                               'f:name': {},
                                                                                                                                                               'f:protocol': {}}},
                                                                                                     'f:readinessProbe': {'.': {},
                                                                                                                          'f:failureThreshold': {},
                                                                                                                          'f:httpGet': {'.': {},
                                                                                                                                        'f:path': {},
                                                                                                                                        'f:port': {},
                                                                                                                                        'f:scheme': {}},
                                                                                                                          'f:periodSeconds': {},
                                                                                                                          'f:successThreshold': {},
                                                                                                                          'f:timeoutSeconds': {}},
                                                                                                     'f:resources': {'.': {},
                                                                                                                     'f:limits': {'.': {},
                                                                                                                                  'f:memory': {}},
                                                                                                                     'f:requests': {'.': {},
                                                                                                                                    'f:cpu': {},
                                                                                                                                    'f:memory': {}}},
                                                                                                     'f:securityContext': {'.': {},
                                                                                                                           'f:allowPrivilegeEscalation': {},
                                                                                                                           'f:capabilities': {'.': {},
                                                                                                                                              'f:add': {},
                                                                                                                                              'f:drop': {}},
                                                                                                                           'f:readOnlyRootFilesystem': {}},
                                                                                                     'f:terminationMessagePath': {},
                                                                                                     'f:terminationMessagePolicy': {},
                                                                                                     'f:volumeMounts': {'.': {},
                                                                                                                        'k:{"mountPath":"/etc/coredns"}': {'.': {},
                                                                                                                                                           'f:mountPath': {},
                                                                                                                                                           'f:name': {},
                                                                                                                                                           'f:readOnly': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"config-volume"}': {'.': {},
                                                                                                        'f:configMap': {'.': {},
                                                                                                                        'f:defaultMode': {},
                                                                                                                        'f:items': {},
                                                                                                                        'f:name': {}},
                                                                                                        'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 15, 5, 48, 58, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.0.19"}': {'.': {},
                                                                                                     'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 13, tzinfo=tzutc())}],
              'name': 'coredns-546565776c-29cmv',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'coredns-546565776c',
                                    'uid': 'd6d1cc15-79ce-40df-9839-a0ab927cdda2'}],
              'resource_version': '1814038',
              'self_link': '/api/v1/namespaces/kube-system/pods/coredns-546565776c-29cmv',
              'uid': '1a081291-50d1-4b37-9e23-846dbcb4b5e5'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['-conf', '/etc/coredns/Corefile'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:1.6.7',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': None,
                                             'failure_threshold': 5,
                                             'http_get': {'host': None,
                                                          'http_headers': None,
                                                          'path': '/health',
                                                          'port': 8080,
                                                          'scheme': 'HTTP'},
                                             'initial_delay_seconds': 60,
                                             'period_seconds': 10,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 5},
                          'name': 'coredns',
                          'ports': [{'container_port': 53,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'dns',
                                     'protocol': 'UDP'},
                                    {'container_port': 53,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'dns-tcp',
                                     'protocol': 'TCP'},
                                    {'container_port': 9153,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'metrics',
                                     'protocol': 'TCP'}],
                          'readiness_probe': {'_exec': None,
                                              'failure_threshold': 3,
                                              'http_get': {'host': None,
                                                           'http_headers': None,
                                                           'path': '/ready',
                                                           'port': 8181,
                                                           'scheme': 'HTTP'},
                                              'initial_delay_seconds': None,
                                              'period_seconds': 10,
                                              'success_threshold': 1,
                                              'tcp_socket': None,
                                              'timeout_seconds': 1},
                          'resources': {'limits': {'memory': '170Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '70Mi'}},
                          'security_context': {'allow_privilege_escalation': False,
                                               'capabilities': {'add': ['NET_BIND_SERVICE'],
                                                                'drop': ['all']},
                                               'privileged': None,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': True,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/coredns',
                                             'mount_propagation': None,
                                             'name': 'config-volume',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'coredns-token-7h6bw',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'Default',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'master',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000000000,
          'priority_class_name': 'system-cluster-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'coredns',
          'service_account_name': 'coredns',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': 'CriticalAddonsOnly',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node-role.kubernetes.io/master',
                           'operator': None,
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': [{'key': 'Corefile',
                                                 'mode': None,
                                                 'path': 'Corefile'}],
                                      'name': 'coredns',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'config-volume',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'coredns-token-7h6bw',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'coredns-token-7h6bw'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 8, 48, 46, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 9, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 9, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 19, 8, 48, 46, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://766c720ddc4538e0cf418f5531098778a9fd074d6d52eaa7b18831163e848bfb',
                                    'image': 'k8s.gcr.io/coredns:1.6.7',
                                    'image_id': 'docker-pullable://registry.cn-hangzhou.aliyuncs.com/google_containers/coredns@sha256:695a5e109604331f843d2c435f488bf3f239a88aec49112d452c1cbf87e88405',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://ac5cc60d5ce468f7464a4f3ce914d29a25c8fc0e29893d7de40b9835e871d1e0',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 18, 47, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 49, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'coredns',
                                    'ready': True,
                                    'restart_count': 8,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 19, 49, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.100',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.0.19'}],
            'pod_ip': '10.244.0.19',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 19, 8, 48, 46, tzinfo=tzutc())}}

kube-system:::::::::::coredns-546565776c-h8r7q
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 15, 7, 20, 45, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'coredns-546565776c-',
              'generation': None,
              'labels': {'k8s-app': 'kube-dns',
                         'pod-template-hash': '546565776c'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:k8s-app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"d6d1cc15-79ce-40df-9839-a0ab927cdda2"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"coredns"}': {'.': {},
                                                                                                     'f:args': {},
                                                                                                     'f:image': {},
                                                                                                     'f:imagePullPolicy': {},
                                                                                                     'f:livenessProbe': {'.': {},
                                                                                                                         'f:failureThreshold': {},
                                                                                                                         'f:httpGet': {'.': {},
                                                                                                                                       'f:path': {},
                                                                                                                                       'f:port': {},
                                                                                                                                       'f:scheme': {}},
                                                                                                                         'f:initialDelaySeconds': {},
                                                                                                                         'f:periodSeconds': {},
                                                                                                                         'f:successThreshold': {},
                                                                                                                         'f:timeoutSeconds': {}},
                                                                                                     'f:name': {},
                                                                                                     'f:ports': {'.': {},
                                                                                                                 'k:{"containerPort":53,"protocol":"TCP"}': {'.': {},
                                                                                                                                                             'f:containerPort': {},
                                                                                                                                                             'f:name': {},
                                                                                                                                                             'f:protocol': {}},
                                                                                                                 'k:{"containerPort":53,"protocol":"UDP"}': {'.': {},
                                                                                                                                                             'f:containerPort': {},
                                                                                                                                                             'f:name': {},
                                                                                                                                                             'f:protocol': {}},
                                                                                                                 'k:{"containerPort":9153,"protocol":"TCP"}': {'.': {},
                                                                                                                                                               'f:containerPort': {},
                                                                                                                                                               'f:name': {},
                                                                                                                                                               'f:protocol': {}}},
                                                                                                     'f:readinessProbe': {'.': {},
                                                                                                                          'f:failureThreshold': {},
                                                                                                                          'f:httpGet': {'.': {},
                                                                                                                                        'f:path': {},
                                                                                                                                        'f:port': {},
                                                                                                                                        'f:scheme': {}},
                                                                                                                          'f:periodSeconds': {},
                                                                                                                          'f:successThreshold': {},
                                                                                                                          'f:timeoutSeconds': {}},
                                                                                                     'f:resources': {'.': {},
                                                                                                                     'f:limits': {'.': {},
                                                                                                                                  'f:memory': {}},
                                                                                                                     'f:requests': {'.': {},
                                                                                                                                    'f:cpu': {},
                                                                                                                                    'f:memory': {}}},
                                                                                                     'f:securityContext': {'.': {},
                                                                                                                           'f:allowPrivilegeEscalation': {},
                                                                                                                           'f:capabilities': {'.': {},
                                                                                                                                              'f:add': {},
                                                                                                                                              'f:drop': {}},
                                                                                                                           'f:readOnlyRootFilesystem': {}},
                                                                                                     'f:terminationMessagePath': {},
                                                                                                     'f:terminationMessagePolicy': {},
                                                                                                     'f:volumeMounts': {'.': {},
                                                                                                                        'k:{"mountPath":"/etc/coredns"}': {'.': {},
                                                                                                                                                           'f:mountPath': {},
                                                                                                                                                           'f:name': {},
                                                                                                                                                           'f:readOnly': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"config-volume"}': {'.': {},
                                                                                                        'f:configMap': {'.': {},
                                                                                                                        'f:defaultMode': {},
                                                                                                                        'f:items': {},
                                                                                                                        'f:name': {}},
                                                                                                        'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.149"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 47, tzinfo=tzutc())}],
              'name': 'coredns-546565776c-h8r7q',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'coredns-546565776c',
                                    'uid': 'd6d1cc15-79ce-40df-9839-a0ab927cdda2'}],
              'resource_version': '1814352',
              'self_link': '/api/v1/namespaces/kube-system/pods/coredns-546565776c-h8r7q',
              'uid': '8149e4e1-26ca-4fde-b453-43d165563c4d'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['-conf', '/etc/coredns/Corefile'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:1.6.7',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': None,
                                             'failure_threshold': 5,
                                             'http_get': {'host': None,
                                                          'http_headers': None,
                                                          'path': '/health',
                                                          'port': 8080,
                                                          'scheme': 'HTTP'},
                                             'initial_delay_seconds': 60,
                                             'period_seconds': 10,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 5},
                          'name': 'coredns',
                          'ports': [{'container_port': 53,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'dns',
                                     'protocol': 'UDP'},
                                    {'container_port': 53,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'dns-tcp',
                                     'protocol': 'TCP'},
                                    {'container_port': 9153,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'metrics',
                                     'protocol': 'TCP'}],
                          'readiness_probe': {'_exec': None,
                                              'failure_threshold': 3,
                                              'http_get': {'host': None,
                                                           'http_headers': None,
                                                           'path': '/ready',
                                                           'port': 8181,
                                                           'scheme': 'HTTP'},
                                              'initial_delay_seconds': None,
                                              'period_seconds': 10,
                                              'success_threshold': 1,
                                              'tcp_socket': None,
                                              'timeout_seconds': 1},
                          'resources': {'limits': {'memory': '170Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '70Mi'}},
                          'security_context': {'allow_privilege_escalation': False,
                                               'capabilities': {'add': ['NET_BIND_SERVICE'],
                                                                'drop': ['all']},
                                               'privileged': None,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': True,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/coredns',
                                             'mount_propagation': None,
                                             'name': 'config-volume',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'coredns-token-7h6bw',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'Default',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000000000,
          'priority_class_name': 'system-cluster-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'coredns',
          'service_account_name': 'coredns',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': 'CriticalAddonsOnly',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node-role.kubernetes.io/master',
                           'operator': None,
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': [{'key': 'Corefile',
                                                 'mode': None,
                                                 'path': 'Corefile'}],
                                      'name': 'coredns',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'config-volume',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'coredns-token-7h6bw',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'coredns-token-7h6bw'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 15, 7, 20, 47, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 15, 7, 20, 45, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://7f3bf442fa28683d56acb6d4bc3f4a4d752d725b63059f621cb9c87a9ea95db6',
                                    'image': 'k8s.gcr.io/coredns:1.6.7',
                                    'image_id': 'docker-pullable://registry.cn-hangzhou.aliyuncs.com/google_containers/coredns@sha256:695a5e109604331f843d2c435f488bf3f239a88aec49112d452c1cbf87e88405',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://89c308f0b1b8d4665bc08e57c9a63dae73ac69c6c13134d177fcf1714be682eb',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 8, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'coredns',
                                    'ready': True,
                                    'restart_count': 9,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 8, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.149'}],
            'pod_ip': '10.244.1.149',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 15, 7, 20, 47, tzinfo=tzutc())}}

kube-system:::::::::::etcd-master
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': {'kubeadm.kubernetes.io/etcd.advertise-client-urls': 'https://192.168.242.100:2379',
                              'kubernetes.io/config.hash': 'd10027083f770aa859e4cb4046ad7cd5',
                              'kubernetes.io/config.mirror': 'd10027083f770aa859e4cb4046ad7cd5',
                              'kubernetes.io/config.seen': '2020-08-28T15:39:01.443784737+08:00',
                              'kubernetes.io/config.source': 'file'},
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 8, 28, 7, 39, 2, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': None,
              'generation': None,
              'labels': {'component': 'etcd', 'tier': 'control-plane'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                 'f:kubeadm.kubernetes.io/etcd.advertise-client-urls': {},
                                                                                 'f:kubernetes.io/config.hash': {},
                                                                                 'f:kubernetes.io/config.mirror': {},
                                                                                 'f:kubernetes.io/config.seen': {},
                                                                                 'f:kubernetes.io/config.source': {}},
                                                               'f:labels': {'.': {},
                                                                            'f:component': {},
                                                                            'f:tier': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"218d331a-36c3-4a01-9b0b-32e7b0834211"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"etcd"}': {'.': {},
                                                                                                  'f:command': {},
                                                                                                  'f:image': {},
                                                                                                  'f:imagePullPolicy': {},
                                                                                                  'f:livenessProbe': {'.': {},
                                                                                                                      'f:failureThreshold': {},
                                                                                                                      'f:httpGet': {'.': {},
                                                                                                                                    'f:host': {},
                                                                                                                                    'f:path': {},
                                                                                                                                    'f:port': {},
                                                                                                                                    'f:scheme': {}},
                                                                                                                      'f:initialDelaySeconds': {},
                                                                                                                      'f:periodSeconds': {},
                                                                                                                      'f:successThreshold': {},
                                                                                                                      'f:timeoutSeconds': {}},
                                                                                                  'f:name': {},
                                                                                                  'f:resources': {},
                                                                                                  'f:terminationMessagePath': {},
                                                                                                  'f:terminationMessagePolicy': {},
                                                                                                  'f:volumeMounts': {'.': {},
                                                                                                                     'k:{"mountPath":"/etc/kubernetes/pki/etcd"}': {'.': {},
                                                                                                                                                                    'f:mountPath': {},
                                                                                                                                                                    'f:name': {}},
                                                                                                                     'k:{"mountPath":"/var/lib/etcd"}': {'.': {},
                                                                                                                                                         'f:mountPath': {},
                                                                                                                                                         'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:nodeName': {},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"etcd-certs"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}},
                                                                         'k:{"name":"etcd-data"}': {'.': {},
                                                                                                    'f:hostPath': {'.': {},
                                                                                                                   'f:path': {},
                                                                                                                   'f:type': {}},
                                                                                                    'f:name': {}}}},
                                                'f:status': {'f:conditions': {'.': {},
                                                                              'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"PodScheduled"}': {'.': {},
                                                                                                            'f:lastProbeTime': {},
                                                                                                            'f:lastTransitionTime': {},
                                                                                                            'f:status': {},
                                                                                                            'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.100"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 22, 1, 19, 27, tzinfo=tzutc())}],
              'name': 'etcd-master',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'v1',
                                    'block_owner_deletion': None,
                                    'controller': True,
                                    'kind': 'Node',
                                    'name': 'master',
                                    'uid': '218d331a-36c3-4a01-9b0b-32e7b0834211'}],
              'resource_version': '1686026',
              'self_link': '/api/v1/namespaces/kube-system/pods/etcd-master',
              'uid': '5b5cd0d2-ea91-48a4-aaf4-3413769ea64f'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': ['etcd',
                                      '--advertise-client-urls=https://192.168.242.100:2379',
                                      '--cert-file=/etc/kubernetes/pki/etcd/server.crt',
                                      '--client-cert-auth=true',
                                      '--data-dir=/var/lib/etcd',
                                      '--initial-advertise-peer-urls=https://192.168.242.100:2380',
                                      '--initial-cluster=master=https://192.168.242.100:2380',
                                      '--key-file=/etc/kubernetes/pki/etcd/server.key',
                                      '--listen-client-urls=https://127.0.0.1:2379,https://192.168.242.100:2379',
                                      '--listen-metrics-urls=http://127.0.0.1:2381',
                                      '--listen-peer-urls=https://192.168.242.100:2380',
                                      '--name=master',
                                      '--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt',
                                      '--peer-client-cert-auth=true',
                                      '--peer-key-file=/etc/kubernetes/pki/etcd/peer.key',
                                      '--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt',
                                      '--snapshot-count=10000',
                                      '--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt'],
                          'env': None,
                          'env_from': None,
                          'image': 'registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:3.4.3-0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': None,
                                             'failure_threshold': 8,
                                             'http_get': {'host': '127.0.0.1',
                                                          'http_headers': None,
                                                          'path': '/health',
                                                          'port': 2381,
                                                          'scheme': 'HTTP'},
                                             'initial_delay_seconds': 15,
                                             'period_seconds': 10,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 15},
                          'name': 'etcd',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/lib/etcd',
                                             'mount_propagation': None,
                                             'name': 'etcd-data',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/kubernetes/pki/etcd',
                                             'mount_propagation': None,
                                             'name': 'etcd-certs',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'master',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000000000,
          'priority_class_name': 'system-cluster-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': None,
          'service_account_name': None,
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/kubernetes/pki/etcd',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'etcd-certs',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/etcd',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'etcd-data',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 18, 58, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 4, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 4, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 18, 58, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://a3f659c7838430d7a15f23eb906b75e56d76fe77811ae22e8557440e6ad7f282',
                                    'image': 'k8s.gcr.io/etcd:3.4.3-0',
                                    'image_id': 'docker-pullable://registry.cn-hangzhou.aliyuncs.com/google_containers/etcd@sha256:4198ba6f82f642dfd18ecf840ee37afb9df4b596f06eef20e44d0aec4ea27216',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://9165c237ad9587ef280631b8131a98e07a7c1797c5d211abc4353a4ec7f255cb',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 18, 47, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 0, 54, 35, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'etcd',
                                    'ready': True,
                                    'restart_count': 15,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 19, 1, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.100',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.100'}],
            'pod_ip': '192.168.242.100',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 22, 1, 18, 58, tzinfo=tzutc())}}

kube-system:::::::::::kube-apiserver-master
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': {'kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint': '192.168.242.100:6443',
                              'kubernetes.io/config.hash': '144d54c4c94f2979b0b915f8713787d3',
                              'kubernetes.io/config.mirror': '144d54c4c94f2979b0b915f8713787d3',
                              'kubernetes.io/config.seen': '2020-08-28T15:39:01.443786255+08:00',
                              'kubernetes.io/config.source': 'file'},
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 8, 28, 7, 39, 2, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': None,
              'generation': None,
              'labels': {'component': 'kube-apiserver',
                         'tier': 'control-plane'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                 'f:kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint': {},
                                                                                 'f:kubernetes.io/config.hash': {},
                                                                                 'f:kubernetes.io/config.mirror': {},
                                                                                 'f:kubernetes.io/config.seen': {},
                                                                                 'f:kubernetes.io/config.source': {}},
                                                               'f:labels': {'.': {},
                                                                            'f:component': {},
                                                                            'f:tier': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"218d331a-36c3-4a01-9b0b-32e7b0834211"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"kube-apiserver"}': {'.': {},
                                                                                                            'f:command': {},
                                                                                                            'f:image': {},
                                                                                                            'f:imagePullPolicy': {},
                                                                                                            'f:livenessProbe': {'.': {},
                                                                                                                                'f:failureThreshold': {},
                                                                                                                                'f:httpGet': {'.': {},
                                                                                                                                              'f:host': {},
                                                                                                                                              'f:path': {},
                                                                                                                                              'f:port': {},
                                                                                                                                              'f:scheme': {}},
                                                                                                                                'f:initialDelaySeconds': {},
                                                                                                                                'f:periodSeconds': {},
                                                                                                                                'f:successThreshold': {},
                                                                                                                                'f:timeoutSeconds': {}},
                                                                                                            'f:name': {},
                                                                                                            'f:resources': {'.': {},
                                                                                                                            'f:requests': {'.': {},
                                                                                                                                           'f:cpu': {}}},
                                                                                                            'f:terminationMessagePath': {},
                                                                                                            'f:terminationMessagePolicy': {},
                                                                                                            'f:volumeMounts': {'.': {},
                                                                                                                               'k:{"mountPath":"/etc/kubernetes/pki"}': {'.': {},
                                                                                                                                                                         'f:mountPath': {},
                                                                                                                                                                         'f:name': {},
                                                                                                                                                                         'f:readOnly': {}},
                                                                                                                               'k:{"mountPath":"/etc/pki"}': {'.': {},
                                                                                                                                                              'f:mountPath': {},
                                                                                                                                                              'f:name': {},
                                                                                                                                                              'f:readOnly': {}},
                                                                                                                               'k:{"mountPath":"/etc/ssl/certs"}': {'.': {},
                                                                                                                                                                    'f:mountPath': {},
                                                                                                                                                                    'f:name': {},
                                                                                                                                                                    'f:readOnly': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:nodeName': {},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"ca-certs"}': {'.': {},
                                                                                                   'f:hostPath': {'.': {},
                                                                                                                  'f:path': {},
                                                                                                                  'f:type': {}},
                                                                                                   'f:name': {}},
                                                                         'k:{"name":"etc-pki"}': {'.': {},
                                                                                                  'f:hostPath': {'.': {},
                                                                                                                 'f:path': {},
                                                                                                                 'f:type': {}},
                                                                                                  'f:name': {}},
                                                                         'k:{"name":"k8s-certs"}': {'.': {},
                                                                                                    'f:hostPath': {'.': {},
                                                                                                                   'f:path': {},
                                                                                                                   'f:type': {}},
                                                                                                    'f:name': {}}}},
                                                'f:status': {'f:conditions': {'.': {},
                                                                              'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"PodScheduled"}': {'.': {},
                                                                                                            'f:lastProbeTime': {},
                                                                                                            'f:lastTransitionTime': {},
                                                                                                            'f:status': {},
                                                                                                            'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.100"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 22, 1, 19, 27, tzinfo=tzutc())}],
              'name': 'kube-apiserver-master',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'v1',
                                    'block_owner_deletion': None,
                                    'controller': True,
                                    'kind': 'Node',
                                    'name': 'master',
                                    'uid': '218d331a-36c3-4a01-9b0b-32e7b0834211'}],
              'resource_version': '1686023',
              'self_link': '/api/v1/namespaces/kube-system/pods/kube-apiserver-master',
              'uid': '8a89cd27-7950-45a4-86b6-0c6a82b18582'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': ['kube-apiserver',
                                      '--advertise-address=192.168.242.100',
                                      '--allow-privileged=true',
                                      '--authorization-mode=Node,RBAC',
                                      '--client-ca-file=/etc/kubernetes/pki/ca.crt',
                                      '--enable-admission-plugins=NodeRestriction',
                                      '--enable-bootstrap-token-auth=true',
                                      '--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt',
                                      '--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt',
                                      '--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key',
                                      '--etcd-servers=https://127.0.0.1:2379',
                                      '--insecure-port=0',
                                      '--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt',
                                      '--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key',
                                      '--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname',
                                      '--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt',
                                      '--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key',
                                      '--requestheader-allowed-names=front-proxy-client',
                                      '--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt',
                                      '--requestheader-extra-headers-prefix=X-Remote-Extra-',
                                      '--requestheader-group-headers=X-Remote-Group',
                                      '--requestheader-username-headers=X-Remote-User',
                                      '--secure-port=6443',
                                      '--service-account-key-file=/etc/kubernetes/pki/sa.pub',
                                      '--service-cluster-ip-range=10.1.0.0/16',
                                      '--tls-cert-file=/etc/kubernetes/pki/apiserver.crt',
                                      '--tls-private-key-file=/etc/kubernetes/pki/apiserver.key'],
                          'env': None,
                          'env_from': None,
                          'image': 'registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver:v1.18.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': None,
                                             'failure_threshold': 8,
                                             'http_get': {'host': '192.168.242.100',
                                                          'http_headers': None,
                                                          'path': '/healthz',
                                                          'port': 6443,
                                                          'scheme': 'HTTPS'},
                                             'initial_delay_seconds': 15,
                                             'period_seconds': 10,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 15},
                          'name': 'kube-apiserver',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None,
                                        'requests': {'cpu': '250m'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/ssl/certs',
                                             'mount_propagation': None,
                                             'name': 'ca-certs',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/pki',
                                             'mount_propagation': None,
                                             'name': 'etc-pki',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/kubernetes/pki',
                                             'mount_propagation': None,
                                             'name': 'k8s-certs',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'master',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000000000,
          'priority_class_name': 'system-cluster-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': None,
          'service_account_name': None,
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/ssl/certs',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'ca-certs',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/pki',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'etc-pki',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/kubernetes/pki',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'k8s-certs',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 18, 57, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 4, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 4, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 18, 57, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://2e9d5b422394b0bf13a0a81e38f428764b11961e6d79361258912904b5d64423',
                                    'image': 'k8s.gcr.io/kube-apiserver:v1.18.2',
                                    'image_id': 'docker-pullable://registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver@sha256:7944dd5c67df9581ff5b1218f4d30c348b704a75cd0297ffc167f3b6113746b5',
                                    'last_state': {'running': None,
                                                   'terminated': None,
                                                   'waiting': None},
                                    'name': 'kube-apiserver',
                                    'ready': True,
                                    'restart_count': 24,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 19, 1, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.100',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.100'}],
            'pod_ip': '192.168.242.100',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 22, 1, 18, 57, tzinfo=tzutc())}}

kube-system:::::::::::kube-controller-manager-master
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': {'kubernetes.io/config.hash': 'a6fc03d005a7203dc9cee5521e238f74',
                              'kubernetes.io/config.mirror': 'a6fc03d005a7203dc9cee5521e238f74',
                              'kubernetes.io/config.seen': '2020-08-28T15:39:01.443787417+08:00',
                              'kubernetes.io/config.source': 'file'},
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 8, 28, 7, 39, 2, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': None,
              'generation': None,
              'labels': {'component': 'kube-controller-manager',
                         'tier': 'control-plane'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                 'f:kubernetes.io/config.hash': {},
                                                                                 'f:kubernetes.io/config.mirror': {},
                                                                                 'f:kubernetes.io/config.seen': {},
                                                                                 'f:kubernetes.io/config.source': {}},
                                                               'f:labels': {'.': {},
                                                                            'f:component': {},
                                                                            'f:tier': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"218d331a-36c3-4a01-9b0b-32e7b0834211"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"kube-controller-manager"}': {'.': {},
                                                                                                                     'f:command': {},
                                                                                                                     'f:image': {},
                                                                                                                     'f:imagePullPolicy': {},
                                                                                                                     'f:livenessProbe': {'.': {},
                                                                                                                                         'f:failureThreshold': {},
                                                                                                                                         'f:httpGet': {'.': {},
                                                                                                                                                       'f:host': {},
                                                                                                                                                       'f:path': {},
                                                                                                                                                       'f:port': {},
                                                                                                                                                       'f:scheme': {}},
                                                                                                                                         'f:initialDelaySeconds': {},
                                                                                                                                         'f:periodSeconds': {},
                                                                                                                                         'f:successThreshold': {},
                                                                                                                                         'f:timeoutSeconds': {}},
                                                                                                                     'f:name': {},
                                                                                                                     'f:resources': {'.': {},
                                                                                                                                     'f:requests': {'.': {},
                                                                                                                                                    'f:cpu': {}}},
                                                                                                                     'f:terminationMessagePath': {},
                                                                                                                     'f:terminationMessagePolicy': {},
                                                                                                                     'f:volumeMounts': {'.': {},
                                                                                                                                        'k:{"mountPath":"/etc/kubernetes/controller-manager.conf"}': {'.': {},
                                                                                                                                                                                                      'f:mountPath': {},
                                                                                                                                                                                                      'f:name': {},
                                                                                                                                                                                                      'f:readOnly': {}},
                                                                                                                                        'k:{"mountPath":"/etc/kubernetes/pki"}': {'.': {},
                                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                                  'f:name': {},
                                                                                                                                                                                  'f:readOnly': {}},
                                                                                                                                        'k:{"mountPath":"/etc/pki"}': {'.': {},
                                                                                                                                                                       'f:mountPath': {},
                                                                                                                                                                       'f:name': {},
                                                                                                                                                                       'f:readOnly': {}},
                                                                                                                                        'k:{"mountPath":"/etc/ssl/certs"}': {'.': {},
                                                                                                                                                                             'f:mountPath': {},
                                                                                                                                                                             'f:name': {},
                                                                                                                                                                             'f:readOnly': {}},
                                                                                                                                        'k:{"mountPath":"/usr/libexec/kubernetes/kubelet-plugins/volume/exec"}': {'.': {},
                                                                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                                                                  'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:nodeName': {},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"ca-certs"}': {'.': {},
                                                                                                   'f:hostPath': {'.': {},
                                                                                                                  'f:path': {},
                                                                                                                  'f:type': {}},
                                                                                                   'f:name': {}},
                                                                         'k:{"name":"etc-pki"}': {'.': {},
                                                                                                  'f:hostPath': {'.': {},
                                                                                                                 'f:path': {},
                                                                                                                 'f:type': {}},
                                                                                                  'f:name': {}},
                                                                         'k:{"name":"flexvolume-dir"}': {'.': {},
                                                                                                         'f:hostPath': {'.': {},
                                                                                                                        'f:path': {},
                                                                                                                        'f:type': {}},
                                                                                                         'f:name': {}},
                                                                         'k:{"name":"k8s-certs"}': {'.': {},
                                                                                                    'f:hostPath': {'.': {},
                                                                                                                   'f:path': {},
                                                                                                                   'f:type': {}},
                                                                                                    'f:name': {}},
                                                                         'k:{"name":"kubeconfig"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}},
                                                'f:status': {'f:conditions': {'.': {},
                                                                              'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"PodScheduled"}': {'.': {},
                                                                                                            'f:lastProbeTime': {},
                                                                                                            'f:lastTransitionTime': {},
                                                                                                            'f:status': {},
                                                                                                            'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.100"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 18, tzinfo=tzutc())}],
              'name': 'kube-controller-manager-master',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'v1',
                                    'block_owner_deletion': None,
                                    'controller': True,
                                    'kind': 'Node',
                                    'name': 'master',
                                    'uid': '218d331a-36c3-4a01-9b0b-32e7b0834211'}],
              'resource_version': '1814094',
              'self_link': '/api/v1/namespaces/kube-system/pods/kube-controller-manager-master',
              'uid': 'c1596676-3534-4e77-913f-755f59c08b99'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': ['kube-controller-manager',
                                      '--allocate-node-cidrs=true',
                                      '--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf',
                                      '--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf',
                                      '--bind-address=127.0.0.1',
                                      '--client-ca-file=/etc/kubernetes/pki/ca.crt',
                                      '--cluster-cidr=10.244.0.0/16',
                                      '--cluster-name=kubernetes',
                                      '--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt',
                                      '--cluster-signing-key-file=/etc/kubernetes/pki/ca.key',
                                      '--controllers=*,bootstrapsigner,tokencleaner',
                                      '--kubeconfig=/etc/kubernetes/controller-manager.conf',
                                      '--leader-elect=true',
                                      '--node-cidr-mask-size=24',
                                      '--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt',
                                      '--root-ca-file=/etc/kubernetes/pki/ca.crt',
                                      '--service-account-private-key-file=/etc/kubernetes/pki/sa.key',
                                      '--service-cluster-ip-range=10.1.0.0/16',
                                      '--use-service-account-credentials=true'],
                          'env': None,
                          'env_from': None,
                          'image': 'registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager:v1.18.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': None,
                                             'failure_threshold': 8,
                                             'http_get': {'host': '127.0.0.1',
                                                          'http_headers': None,
                                                          'path': '/healthz',
                                                          'port': 10257,
                                                          'scheme': 'HTTPS'},
                                             'initial_delay_seconds': 15,
                                             'period_seconds': 10,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 15},
                          'name': 'kube-controller-manager',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None,
                                        'requests': {'cpu': '200m'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/ssl/certs',
                                             'mount_propagation': None,
                                             'name': 'ca-certs',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/pki',
                                             'mount_propagation': None,
                                             'name': 'etc-pki',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/usr/libexec/kubernetes/kubelet-plugins/volume/exec',
                                             'mount_propagation': None,
                                             'name': 'flexvolume-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/kubernetes/pki',
                                             'mount_propagation': None,
                                             'name': 'k8s-certs',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/kubernetes/controller-manager.conf',
                                             'mount_propagation': None,
                                             'name': 'kubeconfig',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'master',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000000000,
          'priority_class_name': 'system-cluster-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': None,
          'service_account_name': None,
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/ssl/certs',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'ca-certs',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/pki',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'etc-pki',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/usr/libexec/kubernetes/kubelet-plugins/volume/exec',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'flexvolume-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/kubernetes/pki',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'k8s-certs',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/kubernetes/controller-manager.conf',
                                     'type': 'FileOrCreate'},
                       'iscsi': None,
                       'name': 'kubeconfig',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 18, 59, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 18, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 18, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 18, 59, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://fe5e404d90338c295a597ff3494924dd0e7ea28d76db84d5cf254b86388b3862',
                                    'image': 'k8s.gcr.io/kube-controller-manager:v1.18.2',
                                    'image_id': 'docker-pullable://registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager@sha256:0f57654686ddf834e8a7147ec8291efb9c64d6dd611f14410bb81438add0d077',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://c30da38590d19d981ea3cf74ee43997f518a5beadbf19754dd08bbfa12e4a23d',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 23, 0, 51, 1, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 19, 1, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-controller-manager',
                                    'ready': True,
                                    'restart_count': 64,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 51, 16, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.100',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.100'}],
            'pod_ip': '192.168.242.100',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 22, 1, 18, 59, tzinfo=tzutc())}}

kube-system:::::::::::kube-flannel-ds-amd64-7p9tb
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 8, 28, 7, 46, 7, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'kube-flannel-ds-amd64-',
              'generation': None,
              'labels': {'app': 'flannel',
                         'controller-revision-hash': '56c6bd8cc5',
                         'pod-template-generation': '1',
                         'tier': 'node'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:pod-template-generation': {},
                                                                            'f:tier': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"f91e9d6a-9557-455f-b99e-620c8e8dfe93"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"kube-flannel"}': {'.': {},
                                                                                                          'f:args': {},
                                                                                                          'f:command': {},
                                                                                                          'f:env': {'.': {},
                                                                                                                    'k:{"name":"POD_NAME"}': {'.': {},
                                                                                                                                              'f:name': {},
                                                                                                                                              'f:valueFrom': {'.': {},
                                                                                                                                                              'f:fieldRef': {'.': {},
                                                                                                                                                                             'f:apiVersion': {},
                                                                                                                                                                             'f:fieldPath': {}}}},
                                                                                                                    'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                   'f:name': {},
                                                                                                                                                   'f:valueFrom': {'.': {},
                                                                                                                                                                   'f:fieldRef': {'.': {},
                                                                                                                                                                                  'f:apiVersion': {},
                                                                                                                                                                                  'f:fieldPath': {}}}}},
                                                                                                          'f:image': {},
                                                                                                          'f:imagePullPolicy': {},
                                                                                                          'f:name': {},
                                                                                                          'f:resources': {'.': {},
                                                                                                                          'f:limits': {'.': {},
                                                                                                                                       'f:cpu': {},
                                                                                                                                       'f:memory': {}},
                                                                                                                          'f:requests': {'.': {},
                                                                                                                                         'f:cpu': {},
                                                                                                                                         'f:memory': {}}},
                                                                                                          'f:securityContext': {'.': {},
                                                                                                                                'f:capabilities': {'.': {},
                                                                                                                                                   'f:add': {}},
                                                                                                                                'f:privileged': {}},
                                                                                                          'f:terminationMessagePath': {},
                                                                                                          'f:terminationMessagePolicy': {},
                                                                                                          'f:volumeMounts': {'.': {},
                                                                                                                             'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {},
                                                                                                                                                                      'f:mountPath': {},
                                                                                                                                                                      'f:name': {}},
                                                                                                                             'k:{"mountPath":"/run/flannel"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:initContainers': {'.': {},
                                                                                'k:{"name":"install-cni"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:command': {},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:resources': {},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {},
                                                                                                             'f:volumeMounts': {'.': {},
                                                                                                                                'k:{"mountPath":"/etc/cni/net.d"}': {'.': {},
                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                     'f:name': {}},
                                                                                                                                'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {},
                                                                                                                                                                         'f:mountPath': {},
                                                                                                                                                                         'f:name': {}}}}},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"cni"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}},
                                                                         'k:{"name":"flannel-cfg"}': {'.': {},
                                                                                                      'f:configMap': {'.': {},
                                                                                                                      'f:defaultMode': {},
                                                                                                                      'f:name': {}},
                                                                                                      'f:name': {}},
                                                                         'k:{"name":"run"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:initContainerStatuses': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.101"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 45, tzinfo=tzutc())}],
              'name': 'kube-flannel-ds-amd64-7p9tb',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'kube-flannel-ds-amd64',
                                    'uid': 'f91e9d6a-9557-455f-b99e-620c8e8dfe93'}],
              'resource_version': '1814318',
              'self_link': '/api/v1/namespaces/kube-system/pods/kube-flannel-ds-amd64-7p9tb',
              'uid': 'e54c04b7-29e0-459c-b0ac-7bde6d04eff0'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node1']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': ['--ip-masq', '--kube-subnet-mgr'],
                          'command': ['/opt/bin/flanneld'],
                          'env': [{'name': 'POD_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.name'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-flannel',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '100m',
                                                   'memory': '50Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '50Mi'}},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': {'add': ['NET_ADMIN',
                                                                        'NET_RAW'],
                                                                'drop': None},
                                               'privileged': False,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/run/flannel',
                                             'mount_propagation': None,
                                             'name': 'run',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/kube-flannel/',
                                             'mount_propagation': None,
                                             'name': 'flannel-cfg',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'flannel-token-fpfl6',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': [{'args': ['-f',
                                        '/etc/kube-flannel/cni-conf.json',
                                        '/etc/cni/net.d/10-flannel.conflist'],
                               'command': ['cp'],
                               'env': None,
                               'env_from': None,
                               'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                               'image_pull_policy': 'IfNotPresent',
                               'lifecycle': None,
                               'liveness_probe': None,
                               'name': 'install-cni',
                               'ports': None,
                               'readiness_probe': None,
                               'resources': {'limits': None, 'requests': None},
                               'security_context': None,
                               'startup_probe': None,
                               'stdin': None,
                               'stdin_once': None,
                               'termination_message_path': '/dev/termination-log',
                               'termination_message_policy': 'File',
                               'tty': None,
                               'volume_devices': None,
                               'volume_mounts': [{'mount_path': '/etc/cni/net.d',
                                                  'mount_propagation': None,
                                                  'name': 'cni',
                                                  'read_only': None,
                                                  'sub_path': None,
                                                  'sub_path_expr': None},
                                                 {'mount_path': '/etc/kube-flannel/',
                                                  'mount_propagation': None,
                                                  'name': 'flannel-cfg',
                                                  'read_only': None,
                                                  'sub_path': None,
                                                  'sub_path_expr': None},
                                                 {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                                  'mount_propagation': None,
                                                  'name': 'flannel-token-fpfl6',
                                                  'read_only': True,
                                                  'sub_path': None,
                                                  'sub_path_expr': None}],
                               'working_dir': None}],
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000001000,
          'priority_class_name': 'system-node-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'flannel',
          'service_account_name': 'flannel',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoSchedule',
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/run/flannel', 'type': ''},
                       'iscsi': None,
                       'name': 'run',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/cni/net.d', 'type': ''},
                       'iscsi': None,
                       'name': 'cni',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'kube-flannel-cfg',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'flannel-cfg',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'flannel-token-fpfl6',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'flannel-token-fpfl6'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 46, 6, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 5, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 5, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 46, 7, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://36c0e374160c98513edafaeed8d0c43b5f1f7787157f54cb10c9d22d2b1462c9',
                                    'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                                    'image_id': 'docker-pullable://quay.io/coreos/flannel@sha256:6d451d92c921f14bfb38196aacb6e506d4593c5b3c9d40a8b8a2506010dc3e10',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://1d58eee9696df5b4faf7a9d99f75f95364958a3f86864863391f2922814b0dc8',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 44, 42, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-flannel',
                                    'ready': True,
                                    'restart_count': 16,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 3, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': [{'container_id': 'docker://6058d9c83a44e8e2aa5913084d77e0705eff9b1f17f9eeb8e9bdfaff2f6b8157',
                                         'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                                         'image_id': 'docker-pullable://quay.io/coreos/flannel@sha256:6d451d92c921f14bfb38196aacb6e506d4593c5b3c9d40a8b8a2506010dc3e10',
                                         'last_state': {'running': None,
                                                        'terminated': None,
                                                        'waiting': None},
                                         'name': 'install-cni',
                                         'ready': True,
                                         'restart_count': 9,
                                         'started': None,
                                         'state': {'running': None,
                                                   'terminated': {'container_id': 'docker://6058d9c83a44e8e2aa5913084d77e0705eff9b1f17f9eeb8e9bdfaff2f6b8157',
                                                                  'exit_code': 0,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 55, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Completed',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 19, 55, tzinfo=tzutc())},
                                                   'waiting': None}}],
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.101'}],
            'pod_ip': '192.168.242.101',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 8, 28, 7, 46, 6, tzinfo=tzutc())}}

kube-system:::::::::::kube-flannel-ds-amd64-clgjb
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 8, 28, 7, 46, 12, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'kube-flannel-ds-amd64-',
              'generation': None,
              'labels': {'app': 'flannel',
                         'controller-revision-hash': '56c6bd8cc5',
                         'pod-template-generation': '1',
                         'tier': 'node'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:pod-template-generation': {},
                                                                            'f:tier': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"f91e9d6a-9557-455f-b99e-620c8e8dfe93"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"kube-flannel"}': {'.': {},
                                                                                                          'f:args': {},
                                                                                                          'f:command': {},
                                                                                                          'f:env': {'.': {},
                                                                                                                    'k:{"name":"POD_NAME"}': {'.': {},
                                                                                                                                              'f:name': {},
                                                                                                                                              'f:valueFrom': {'.': {},
                                                                                                                                                              'f:fieldRef': {'.': {},
                                                                                                                                                                             'f:apiVersion': {},
                                                                                                                                                                             'f:fieldPath': {}}}},
                                                                                                                    'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                   'f:name': {},
                                                                                                                                                   'f:valueFrom': {'.': {},
                                                                                                                                                                   'f:fieldRef': {'.': {},
                                                                                                                                                                                  'f:apiVersion': {},
                                                                                                                                                                                  'f:fieldPath': {}}}}},
                                                                                                          'f:image': {},
                                                                                                          'f:imagePullPolicy': {},
                                                                                                          'f:name': {},
                                                                                                          'f:resources': {'.': {},
                                                                                                                          'f:limits': {'.': {},
                                                                                                                                       'f:cpu': {},
                                                                                                                                       'f:memory': {}},
                                                                                                                          'f:requests': {'.': {},
                                                                                                                                         'f:cpu': {},
                                                                                                                                         'f:memory': {}}},
                                                                                                          'f:securityContext': {'.': {},
                                                                                                                                'f:capabilities': {'.': {},
                                                                                                                                                   'f:add': {}},
                                                                                                                                'f:privileged': {}},
                                                                                                          'f:terminationMessagePath': {},
                                                                                                          'f:terminationMessagePolicy': {},
                                                                                                          'f:volumeMounts': {'.': {},
                                                                                                                             'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {},
                                                                                                                                                                      'f:mountPath': {},
                                                                                                                                                                      'f:name': {}},
                                                                                                                             'k:{"mountPath":"/run/flannel"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:initContainers': {'.': {},
                                                                                'k:{"name":"install-cni"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:command': {},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:resources': {},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {},
                                                                                                             'f:volumeMounts': {'.': {},
                                                                                                                                'k:{"mountPath":"/etc/cni/net.d"}': {'.': {},
                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                     'f:name': {}},
                                                                                                                                'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {},
                                                                                                                                                                         'f:mountPath': {},
                                                                                                                                                                         'f:name': {}}}}},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"cni"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}},
                                                                         'k:{"name":"flannel-cfg"}': {'.': {},
                                                                                                      'f:configMap': {'.': {},
                                                                                                                      'f:defaultMode': {},
                                                                                                                      'f:name': {}},
                                                                                                      'f:name': {}},
                                                                         'k:{"name":"run"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 26, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:initContainerStatuses': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.102"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, tzinfo=tzutc())}],
              'name': 'kube-flannel-ds-amd64-clgjb',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'kube-flannel-ds-amd64',
                                    'uid': 'f91e9d6a-9557-455f-b99e-620c8e8dfe93'}],
              'resource_version': '1814509',
              'self_link': '/api/v1/namespaces/kube-system/pods/kube-flannel-ds-amd64-clgjb',
              'uid': 'a21d70db-dadd-43f9-ba2a-468ca96a294e'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node2']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': ['--ip-masq', '--kube-subnet-mgr'],
                          'command': ['/opt/bin/flanneld'],
                          'env': [{'name': 'POD_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.name'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-flannel',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '100m',
                                                   'memory': '50Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '50Mi'}},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': {'add': ['NET_ADMIN',
                                                                        'NET_RAW'],
                                                                'drop': None},
                                               'privileged': False,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/run/flannel',
                                             'mount_propagation': None,
                                             'name': 'run',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/kube-flannel/',
                                             'mount_propagation': None,
                                             'name': 'flannel-cfg',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'flannel-token-fpfl6',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': [{'args': ['-f',
                                        '/etc/kube-flannel/cni-conf.json',
                                        '/etc/cni/net.d/10-flannel.conflist'],
                               'command': ['cp'],
                               'env': None,
                               'env_from': None,
                               'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                               'image_pull_policy': 'IfNotPresent',
                               'lifecycle': None,
                               'liveness_probe': None,
                               'name': 'install-cni',
                               'ports': None,
                               'readiness_probe': None,
                               'resources': {'limits': None, 'requests': None},
                               'security_context': None,
                               'startup_probe': None,
                               'stdin': None,
                               'stdin_once': None,
                               'termination_message_path': '/dev/termination-log',
                               'termination_message_policy': 'File',
                               'tty': None,
                               'volume_devices': None,
                               'volume_mounts': [{'mount_path': '/etc/cni/net.d',
                                                  'mount_propagation': None,
                                                  'name': 'cni',
                                                  'read_only': None,
                                                  'sub_path': None,
                                                  'sub_path_expr': None},
                                                 {'mount_path': '/etc/kube-flannel/',
                                                  'mount_propagation': None,
                                                  'name': 'flannel-cfg',
                                                  'read_only': None,
                                                  'sub_path': None,
                                                  'sub_path_expr': None},
                                                 {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                                  'mount_propagation': None,
                                                  'name': 'flannel-token-fpfl6',
                                                  'read_only': True,
                                                  'sub_path': None,
                                                  'sub_path_expr': None}],
                               'working_dir': None}],
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000001000,
          'priority_class_name': 'system-node-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'flannel',
          'service_account_name': 'flannel',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoSchedule',
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/run/flannel', 'type': ''},
                       'iscsi': None,
                       'name': 'run',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/cni/net.d', 'type': ''},
                       'iscsi': None,
                       'name': 'cni',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'kube-flannel-cfg',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'flannel-cfg',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'flannel-token-fpfl6',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'flannel-token-fpfl6'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 46, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 46, 12, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://c82acfaa25b5a5887b7fd91aecc51e10a62fe7ccd13998b0263969b74b7611f0',
                                    'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                                    'image_id': 'docker-pullable://quay.io/coreos/flannel@sha256:6d451d92c921f14bfb38196aacb6e506d4593c5b3c9d40a8b8a2506010dc3e10',
                                    'last_state': {'running': None,
                                                   'terminated': None,
                                                   'waiting': None},
                                    'name': 'kube-flannel',
                                    'ready': True,
                                    'restart_count': 15,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 52, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': [{'container_id': 'docker://a311fc7eeafc8b7b69d3eddbe0abe4704f40837d2201a06c49a97e8a1b99f65d',
                                         'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                                         'image_id': 'docker-pullable://quay.io/coreos/flannel@sha256:6d451d92c921f14bfb38196aacb6e506d4593c5b3c9d40a8b8a2506010dc3e10',
                                         'last_state': {'running': None,
                                                        'terminated': None,
                                                        'waiting': None},
                                         'name': 'install-cni',
                                         'ready': True,
                                         'restart_count': 11,
                                         'started': None,
                                         'state': {'running': None,
                                                   'terminated': {'container_id': 'docker://a311fc7eeafc8b7b69d3eddbe0abe4704f40837d2201a06c49a97e8a1b99f65d',
                                                                  'exit_code': 0,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 47, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Completed',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 20, 47, tzinfo=tzutc())},
                                                   'waiting': None}}],
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.102'}],
            'pod_ip': '192.168.242.102',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 8, 28, 7, 46, 12, tzinfo=tzutc())}}

kube-system:::::::::::kube-flannel-ds-amd64-p8nzz
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 8, 28, 7, 45, 20, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'kube-flannel-ds-amd64-',
              'generation': None,
              'labels': {'app': 'flannel',
                         'controller-revision-hash': '56c6bd8cc5',
                         'pod-template-generation': '1',
                         'tier': 'node'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:pod-template-generation': {},
                                                                            'f:tier': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"f91e9d6a-9557-455f-b99e-620c8e8dfe93"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"kube-flannel"}': {'.': {},
                                                                                                          'f:args': {},
                                                                                                          'f:command': {},
                                                                                                          'f:env': {'.': {},
                                                                                                                    'k:{"name":"POD_NAME"}': {'.': {},
                                                                                                                                              'f:name': {},
                                                                                                                                              'f:valueFrom': {'.': {},
                                                                                                                                                              'f:fieldRef': {'.': {},
                                                                                                                                                                             'f:apiVersion': {},
                                                                                                                                                                             'f:fieldPath': {}}}},
                                                                                                                    'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                   'f:name': {},
                                                                                                                                                   'f:valueFrom': {'.': {},
                                                                                                                                                                   'f:fieldRef': {'.': {},
                                                                                                                                                                                  'f:apiVersion': {},
                                                                                                                                                                                  'f:fieldPath': {}}}}},
                                                                                                          'f:image': {},
                                                                                                          'f:imagePullPolicy': {},
                                                                                                          'f:name': {},
                                                                                                          'f:resources': {'.': {},
                                                                                                                          'f:limits': {'.': {},
                                                                                                                                       'f:cpu': {},
                                                                                                                                       'f:memory': {}},
                                                                                                                          'f:requests': {'.': {},
                                                                                                                                         'f:cpu': {},
                                                                                                                                         'f:memory': {}}},
                                                                                                          'f:securityContext': {'.': {},
                                                                                                                                'f:capabilities': {'.': {},
                                                                                                                                                   'f:add': {}},
                                                                                                                                'f:privileged': {}},
                                                                                                          'f:terminationMessagePath': {},
                                                                                                          'f:terminationMessagePolicy': {},
                                                                                                          'f:volumeMounts': {'.': {},
                                                                                                                             'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {},
                                                                                                                                                                      'f:mountPath': {},
                                                                                                                                                                      'f:name': {}},
                                                                                                                             'k:{"mountPath":"/run/flannel"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:initContainers': {'.': {},
                                                                                'k:{"name":"install-cni"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:command': {},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:resources': {},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {},
                                                                                                             'f:volumeMounts': {'.': {},
                                                                                                                                'k:{"mountPath":"/etc/cni/net.d"}': {'.': {},
                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                     'f:name': {}},
                                                                                                                                'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {},
                                                                                                                                                                         'f:mountPath': {},
                                                                                                                                                                         'f:name': {}}}}},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"cni"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}},
                                                                         'k:{"name":"flannel-cfg"}': {'.': {},
                                                                                                      'f:configMap': {'.': {},
                                                                                                                      'f:defaultMode': {},
                                                                                                                      'f:name': {}},
                                                                                                      'f:name': {}},
                                                                         'k:{"name":"run"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 15, 5, 48, 58, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:initContainerStatuses': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.100"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 22, 1, 19, 45, tzinfo=tzutc())}],
              'name': 'kube-flannel-ds-amd64-p8nzz',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'kube-flannel-ds-amd64',
                                    'uid': 'f91e9d6a-9557-455f-b99e-620c8e8dfe93'}],
              'resource_version': '1686096',
              'self_link': '/api/v1/namespaces/kube-system/pods/kube-flannel-ds-amd64-p8nzz',
              'uid': 'b0dc26e8-2e96-48b5-b0ff-b7ca5215d960'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['master']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': ['--ip-masq', '--kube-subnet-mgr'],
                          'command': ['/opt/bin/flanneld'],
                          'env': [{'name': 'POD_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.name'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-flannel',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '100m',
                                                   'memory': '50Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '50Mi'}},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': {'add': ['NET_ADMIN',
                                                                        'NET_RAW'],
                                                                'drop': None},
                                               'privileged': False,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/run/flannel',
                                             'mount_propagation': None,
                                             'name': 'run',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/kube-flannel/',
                                             'mount_propagation': None,
                                             'name': 'flannel-cfg',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'flannel-token-fpfl6',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': [{'args': ['-f',
                                        '/etc/kube-flannel/cni-conf.json',
                                        '/etc/cni/net.d/10-flannel.conflist'],
                               'command': ['cp'],
                               'env': None,
                               'env_from': None,
                               'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                               'image_pull_policy': 'IfNotPresent',
                               'lifecycle': None,
                               'liveness_probe': None,
                               'name': 'install-cni',
                               'ports': None,
                               'readiness_probe': None,
                               'resources': {'limits': None, 'requests': None},
                               'security_context': None,
                               'startup_probe': None,
                               'stdin': None,
                               'stdin_once': None,
                               'termination_message_path': '/dev/termination-log',
                               'termination_message_policy': 'File',
                               'tty': None,
                               'volume_devices': None,
                               'volume_mounts': [{'mount_path': '/etc/cni/net.d',
                                                  'mount_propagation': None,
                                                  'name': 'cni',
                                                  'read_only': None,
                                                  'sub_path': None,
                                                  'sub_path_expr': None},
                                                 {'mount_path': '/etc/kube-flannel/',
                                                  'mount_propagation': None,
                                                  'name': 'flannel-cfg',
                                                  'read_only': None,
                                                  'sub_path': None,
                                                  'sub_path_expr': None},
                                                 {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                                  'mount_propagation': None,
                                                  'name': 'flannel-token-fpfl6',
                                                  'read_only': True,
                                                  'sub_path': None,
                                                  'sub_path_expr': None}],
                               'working_dir': None}],
          'node_name': 'master',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000001000,
          'priority_class_name': 'system-node-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'flannel',
          'service_account_name': 'flannel',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoSchedule',
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/run/flannel', 'type': ''},
                       'iscsi': None,
                       'name': 'run',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/cni/net.d', 'type': ''},
                       'iscsi': None,
                       'name': 'cni',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'kube-flannel-cfg',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'flannel-cfg',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'flannel-token-fpfl6',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'flannel-token-fpfl6'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 45, 22, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 45, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 45, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 45, 20, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://6a6d506a2b2b37af84b0091af666316949383e7c857a1aad6e6df123211f4eb8',
                                    'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                                    'image_id': 'docker-pullable://quay.io/coreos/flannel@sha256:6d451d92c921f14bfb38196aacb6e506d4593c5b3c9d40a8b8a2506010dc3e10',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://b46df747d3a6b9b1fa135c2e79787940240880d3643f1392bfabbe2ebafe9ba8',
                                                                  'exit_code': 1,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 28, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 19, 25, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-flannel',
                                    'ready': True,
                                    'restart_count': 19,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 19, 44, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.100',
            'init_container_statuses': [{'container_id': 'docker://87ce7c985a251f5a6f61f5e44488bb5203f5cf2da7b26001144da279af29ea92',
                                         'image': 'quay.io/coreos/flannel:v0.12.0-amd64',
                                         'image_id': 'docker-pullable://quay.io/coreos/flannel@sha256:6d451d92c921f14bfb38196aacb6e506d4593c5b3c9d40a8b8a2506010dc3e10',
                                         'last_state': {'running': None,
                                                        'terminated': None,
                                                        'waiting': None},
                                         'name': 'install-cni',
                                         'ready': True,
                                         'restart_count': 12,
                                         'started': None,
                                         'state': {'running': None,
                                                   'terminated': {'container_id': 'docker://87ce7c985a251f5a6f61f5e44488bb5203f5cf2da7b26001144da279af29ea92',
                                                                  'exit_code': 0,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 23, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Completed',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 19, 23, tzinfo=tzutc())},
                                                   'waiting': None}}],
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.100'}],
            'pod_ip': '192.168.242.100',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 8, 28, 7, 45, 20, tzinfo=tzutc())}}

kube-system:::::::::::kube-proxy-9hzfs
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 8, 28, 7, 46, 12, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'kube-proxy-',
              'generation': None,
              'labels': {'controller-revision-hash': 'f8ddb97c8',
                         'k8s-app': 'kube-proxy',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:k8s-app': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"703a2ecc-f37d-45d0-9f81-53e19c325fda"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"kube-proxy"}': {'.': {},
                                                                                                        'f:command': {},
                                                                                                        'f:env': {'.': {},
                                                                                                                  'k:{"name":"NODE_NAME"}': {'.': {},
                                                                                                                                             'f:name': {},
                                                                                                                                             'f:valueFrom': {'.': {},
                                                                                                                                                             'f:fieldRef': {'.': {},
                                                                                                                                                                            'f:apiVersion': {},
                                                                                                                                                                            'f:fieldPath': {}}}}},
                                                                                                        'f:image': {},
                                                                                                        'f:imagePullPolicy': {},
                                                                                                        'f:name': {},
                                                                                                        'f:resources': {},
                                                                                                        'f:securityContext': {'.': {},
                                                                                                                              'f:privileged': {}},
                                                                                                        'f:terminationMessagePath': {},
                                                                                                        'f:terminationMessagePolicy': {},
                                                                                                        'f:volumeMounts': {'.': {},
                                                                                                                           'k:{"mountPath":"/lib/modules"}': {'.': {},
                                                                                                                                                              'f:mountPath': {},
                                                                                                                                                              'f:name': {},
                                                                                                                                                              'f:readOnly': {}},
                                                                                                                           'k:{"mountPath":"/run/xtables.lock"}': {'.': {},
                                                                                                                                                                   'f:mountPath': {},
                                                                                                                                                                   'f:name': {}},
                                                                                                                           'k:{"mountPath":"/var/lib/kube-proxy"}': {'.': {},
                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                     'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"kube-proxy"}': {'.': {},
                                                                                                     'f:configMap': {'.': {},
                                                                                                                     'f:defaultMode': {},
                                                                                                                     'f:name': {}},
                                                                                                     'f:name': {}},
                                                                         'k:{"name":"lib-modules"}': {'.': {},
                                                                                                      'f:hostPath': {'.': {},
                                                                                                                     'f:path': {},
                                                                                                                     'f:type': {}},
                                                                                                      'f:name': {}},
                                                                         'k:{"name":"xtables-lock"}': {'.': {},
                                                                                                       'f:hostPath': {'.': {},
                                                                                                                      'f:path': {},
                                                                                                                      'f:type': {}},
                                                                                                       'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 26, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.102"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 8, tzinfo=tzutc())}],
              'name': 'kube-proxy-9hzfs',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'kube-proxy',
                                    'uid': '703a2ecc-f37d-45d0-9f81-53e19c325fda'}],
              'resource_version': '1814532',
              'self_link': '/api/v1/namespaces/kube-system/pods/kube-proxy-9hzfs',
              'uid': '06ed2d44-bd06-4238-9904-f9c9d5435386'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node2']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': ['/usr/local/bin/kube-proxy',
                                      '--config=/var/lib/kube-proxy/config.conf',
                                      '--hostname-override=$(NODE_NAME)'],
                          'env': [{'name': 'NODE_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.nodeName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.18.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-proxy',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/lib/kube-proxy',
                                             'mount_propagation': None,
                                             'name': 'kube-proxy',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/run/xtables.lock',
                                             'mount_propagation': None,
                                             'name': 'xtables-lock',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/lib/modules',
                                             'mount_propagation': None,
                                             'name': 'lib-modules',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'kube-proxy-token-cgwtd',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000001000,
          'priority_class_name': 'system-node-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'kube-proxy',
          'service_account_name': 'kube-proxy',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': 'CriticalAddonsOnly',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': None,
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'kube-proxy',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'kube-proxy',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/run/xtables.lock',
                                     'type': 'FileOrCreate'},
                       'iscsi': None,
                       'name': 'xtables-lock',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/lib/modules', 'type': ''},
                       'iscsi': None,
                       'name': 'lib-modules',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'kube-proxy-token-cgwtd',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'kube-proxy-token-cgwtd'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 46, 12, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 47, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 47, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 46, 12, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://520c54c8601b59e3a2bd32c1814d77a27f4d7ab2a7a4379c774ad44897442310',
                                    'image': 'k8s.gcr.io/kube-proxy:v1.18.2',
                                    'image_id': 'docker-pullable://registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy@sha256:340978f547e525df039e25afa4da0aefd0d25f4d5464ad482412ea9ea7e29a25',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://c33ff3b94a00d001b52c3261710903114be187e02fe0e7670eeef55292d2b13e',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 1, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-proxy',
                                    'ready': True,
                                    'restart_count': 11,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 47, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.102'}],
            'pod_ip': '192.168.242.102',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 8, 28, 7, 46, 12, tzinfo=tzutc())}}

kube-system:::::::::::kube-proxy-lztdc
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 8, 28, 7, 46, 7, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'kube-proxy-',
              'generation': None,
              'labels': {'controller-revision-hash': 'f8ddb97c8',
                         'k8s-app': 'kube-proxy',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:k8s-app': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"703a2ecc-f37d-45d0-9f81-53e19c325fda"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"kube-proxy"}': {'.': {},
                                                                                                        'f:command': {},
                                                                                                        'f:env': {'.': {},
                                                                                                                  'k:{"name":"NODE_NAME"}': {'.': {},
                                                                                                                                             'f:name': {},
                                                                                                                                             'f:valueFrom': {'.': {},
                                                                                                                                                             'f:fieldRef': {'.': {},
                                                                                                                                                                            'f:apiVersion': {},
                                                                                                                                                                            'f:fieldPath': {}}}}},
                                                                                                        'f:image': {},
                                                                                                        'f:imagePullPolicy': {},
                                                                                                        'f:name': {},
                                                                                                        'f:resources': {},
                                                                                                        'f:securityContext': {'.': {},
                                                                                                                              'f:privileged': {}},
                                                                                                        'f:terminationMessagePath': {},
                                                                                                        'f:terminationMessagePolicy': {},
                                                                                                        'f:volumeMounts': {'.': {},
                                                                                                                           'k:{"mountPath":"/lib/modules"}': {'.': {},
                                                                                                                                                              'f:mountPath': {},
                                                                                                                                                              'f:name': {},
                                                                                                                                                              'f:readOnly': {}},
                                                                                                                           'k:{"mountPath":"/run/xtables.lock"}': {'.': {},
                                                                                                                                                                   'f:mountPath': {},
                                                                                                                                                                   'f:name': {}},
                                                                                                                           'k:{"mountPath":"/var/lib/kube-proxy"}': {'.': {},
                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                     'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"kube-proxy"}': {'.': {},
                                                                                                     'f:configMap': {'.': {},
                                                                                                                     'f:defaultMode': {},
                                                                                                                     'f:name': {}},
                                                                                                     'f:name': {}},
                                                                         'k:{"name":"lib-modules"}': {'.': {},
                                                                                                      'f:hostPath': {'.': {},
                                                                                                                     'f:path': {},
                                                                                                                     'f:type': {}},
                                                                                                      'f:name': {}},
                                                                         'k:{"name":"xtables-lock"}': {'.': {},
                                                                                                       'f:hostPath': {'.': {},
                                                                                                                      'f:path': {},
                                                                                                                      'f:type': {}},
                                                                                                       'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.101"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 52, tzinfo=tzutc())}],
              'name': 'kube-proxy-lztdc',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'kube-proxy',
                                    'uid': '703a2ecc-f37d-45d0-9f81-53e19c325fda'}],
              'resource_version': '1814456',
              'self_link': '/api/v1/namespaces/kube-system/pods/kube-proxy-lztdc',
              'uid': '130e1540-658a-45c9-9436-3f1543feaf52'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node1']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': ['/usr/local/bin/kube-proxy',
                                      '--config=/var/lib/kube-proxy/config.conf',
                                      '--hostname-override=$(NODE_NAME)'],
                          'env': [{'name': 'NODE_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.nodeName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.18.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-proxy',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/lib/kube-proxy',
                                             'mount_propagation': None,
                                             'name': 'kube-proxy',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/run/xtables.lock',
                                             'mount_propagation': None,
                                             'name': 'xtables-lock',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/lib/modules',
                                             'mount_propagation': None,
                                             'name': 'lib-modules',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'kube-proxy-token-cgwtd',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000001000,
          'priority_class_name': 'system-node-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'kube-proxy',
          'service_account_name': 'kube-proxy',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': 'CriticalAddonsOnly',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': None,
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'kube-proxy',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'kube-proxy',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/run/xtables.lock',
                                     'type': 'FileOrCreate'},
                       'iscsi': None,
                       'name': 'xtables-lock',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/lib/modules', 'type': ''},
                       'iscsi': None,
                       'name': 'lib-modules',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'kube-proxy-token-cgwtd',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'kube-proxy-token-cgwtd'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 46, 6, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 56, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 56, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 46, 7, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://f67c60e6fc340d7759fc67fb97c5dc1a4c7ca96df2bb08ee3b9977f53ee5ae95',
                                    'image': 'k8s.gcr.io/kube-proxy:v1.18.2',
                                    'image_id': 'docker-pullable://registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy@sha256:340978f547e525df039e25afa4da0aefd0d25f4d5464ad482412ea9ea7e29a25',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://d6915851a1cf7e14454f2be1d1c05893e3b1791ab2ba9f780af66eaa58f2cd2e',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 44, 5, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-proxy',
                                    'ready': True,
                                    'restart_count': 11,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 19, 55, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.101'}],
            'pod_ip': '192.168.242.101',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 8, 28, 7, 46, 6, tzinfo=tzutc())}}

kube-system:::::::::::kube-proxy-wvkj4
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 8, 28, 7, 39, 17, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'kube-proxy-',
              'generation': None,
              'labels': {'controller-revision-hash': 'f8ddb97c8',
                         'k8s-app': 'kube-proxy',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:k8s-app': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"703a2ecc-f37d-45d0-9f81-53e19c325fda"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"kube-proxy"}': {'.': {},
                                                                                                        'f:command': {},
                                                                                                        'f:env': {'.': {},
                                                                                                                  'k:{"name":"NODE_NAME"}': {'.': {},
                                                                                                                                             'f:name': {},
                                                                                                                                             'f:valueFrom': {'.': {},
                                                                                                                                                             'f:fieldRef': {'.': {},
                                                                                                                                                                            'f:apiVersion': {},
                                                                                                                                                                            'f:fieldPath': {}}}}},
                                                                                                        'f:image': {},
                                                                                                        'f:imagePullPolicy': {},
                                                                                                        'f:name': {},
                                                                                                        'f:resources': {},
                                                                                                        'f:securityContext': {'.': {},
                                                                                                                              'f:privileged': {}},
                                                                                                        'f:terminationMessagePath': {},
                                                                                                        'f:terminationMessagePolicy': {},
                                                                                                        'f:volumeMounts': {'.': {},
                                                                                                                           'k:{"mountPath":"/lib/modules"}': {'.': {},
                                                                                                                                                              'f:mountPath': {},
                                                                                                                                                              'f:name': {},
                                                                                                                                                              'f:readOnly': {}},
                                                                                                                           'k:{"mountPath":"/run/xtables.lock"}': {'.': {},
                                                                                                                                                                   'f:mountPath': {},
                                                                                                                                                                   'f:name': {}},
                                                                                                                           'k:{"mountPath":"/var/lib/kube-proxy"}': {'.': {},
                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                     'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"kube-proxy"}': {'.': {},
                                                                                                     'f:configMap': {'.': {},
                                                                                                                     'f:defaultMode': {},
                                                                                                                     'f:name': {}},
                                                                                                     'f:name': {}},
                                                                         'k:{"name":"lib-modules"}': {'.': {},
                                                                                                      'f:hostPath': {'.': {},
                                                                                                                     'f:path': {},
                                                                                                                     'f:type': {}},
                                                                                                      'f:name': {}},
                                                                         'k:{"name":"xtables-lock"}': {'.': {},
                                                                                                       'f:hostPath': {'.': {},
                                                                                                                      'f:path': {},
                                                                                                                      'f:type': {}},
                                                                                                       'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 15, 5, 48, 58, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.100"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 22, 1, 19, 24, tzinfo=tzutc())}],
              'name': 'kube-proxy-wvkj4',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'kube-proxy',
                                    'uid': '703a2ecc-f37d-45d0-9f81-53e19c325fda'}],
              'resource_version': '1686001',
              'self_link': '/api/v1/namespaces/kube-system/pods/kube-proxy-wvkj4',
              'uid': 'e3b956ab-2d28-4e1a-9c3e-da8411cf16e8'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['master']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': ['/usr/local/bin/kube-proxy',
                                      '--config=/var/lib/kube-proxy/config.conf',
                                      '--hostname-override=$(NODE_NAME)'],
                          'env': [{'name': 'NODE_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.nodeName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.18.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-proxy',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/lib/kube-proxy',
                                             'mount_propagation': None,
                                             'name': 'kube-proxy',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/run/xtables.lock',
                                             'mount_propagation': None,
                                             'name': 'xtables-lock',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/lib/modules',
                                             'mount_propagation': None,
                                             'name': 'lib-modules',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'kube-proxy-token-cgwtd',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'master',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000001000,
          'priority_class_name': 'system-node-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'kube-proxy',
          'service_account_name': 'kube-proxy',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': 'CriticalAddonsOnly',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': None,
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'kube-proxy',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'kube-proxy',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/run/xtables.lock',
                                     'type': 'FileOrCreate'},
                       'iscsi': None,
                       'name': 'xtables-lock',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/lib/modules', 'type': ''},
                       'iscsi': None,
                       'name': 'lib-modules',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'kube-proxy-token-cgwtd',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'kube-proxy-token-cgwtd'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 39, 17, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 24, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 24, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 8, 28, 7, 39, 17, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://e20338d1aba9c37dacb6b398ad7d5a67ccda5905050ceb188b77d55779ebf98d',
                                    'image': 'k8s.gcr.io/kube-proxy:v1.18.2',
                                    'image_id': 'docker-pullable://registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy@sha256:340978f547e525df039e25afa4da0aefd0d25f4d5464ad482412ea9ea7e29a25',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://441ea98aecdfbfa4060df1ffb5a5347cbee41e41c34849e7169fa898b4ce979d',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 18, 47, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 4, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-proxy',
                                    'ready': True,
                                    'restart_count': 13,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 19, 23, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.100',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.100'}],
            'pod_ip': '192.168.242.100',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 8, 28, 7, 39, 17, tzinfo=tzutc())}}

kube-system:::::::::::kube-scheduler-master
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': {'kubernetes.io/config.hash': '8766e320dfbb4970036698ddfcabf699',
                              'kubernetes.io/config.mirror': '8766e320dfbb4970036698ddfcabf699',
                              'kubernetes.io/config.seen': '2020-08-28T15:39:01.443778433+08:00',
                              'kubernetes.io/config.source': 'file'},
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 8, 28, 7, 39, 2, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': None,
              'generation': None,
              'labels': {'component': 'kube-scheduler',
                         'tier': 'control-plane'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                 'f:kubernetes.io/config.hash': {},
                                                                                 'f:kubernetes.io/config.mirror': {},
                                                                                 'f:kubernetes.io/config.seen': {},
                                                                                 'f:kubernetes.io/config.source': {}},
                                                               'f:labels': {'.': {},
                                                                            'f:component': {},
                                                                            'f:tier': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"218d331a-36c3-4a01-9b0b-32e7b0834211"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"kube-scheduler"}': {'.': {},
                                                                                                            'f:command': {},
                                                                                                            'f:image': {},
                                                                                                            'f:imagePullPolicy': {},
                                                                                                            'f:livenessProbe': {'.': {},
                                                                                                                                'f:failureThreshold': {},
                                                                                                                                'f:httpGet': {'.': {},
                                                                                                                                              'f:host': {},
                                                                                                                                              'f:path': {},
                                                                                                                                              'f:port': {},
                                                                                                                                              'f:scheme': {}},
                                                                                                                                'f:initialDelaySeconds': {},
                                                                                                                                'f:periodSeconds': {},
                                                                                                                                'f:successThreshold': {},
                                                                                                                                'f:timeoutSeconds': {}},
                                                                                                            'f:name': {},
                                                                                                            'f:resources': {'.': {},
                                                                                                                            'f:requests': {'.': {},
                                                                                                                                           'f:cpu': {}}},
                                                                                                            'f:terminationMessagePath': {},
                                                                                                            'f:terminationMessagePolicy': {},
                                                                                                            'f:volumeMounts': {'.': {},
                                                                                                                               'k:{"mountPath":"/etc/kubernetes/scheduler.conf"}': {'.': {},
                                                                                                                                                                                    'f:mountPath': {},
                                                                                                                                                                                    'f:name': {},
                                                                                                                                                                                    'f:readOnly': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:nodeName': {},
                                                           'f:priorityClassName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"kubeconfig"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}},
                                                'f:status': {'f:conditions': {'.': {},
                                                                              'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"PodScheduled"}': {'.': {},
                                                                                                            'f:lastProbeTime': {},
                                                                                                            'f:lastTransitionTime': {},
                                                                                                            'f:status': {},
                                                                                                            'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.100"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 18, tzinfo=tzutc())}],
              'name': 'kube-scheduler-master',
              'namespace': 'kube-system',
              'owner_references': [{'api_version': 'v1',
                                    'block_owner_deletion': None,
                                    'controller': True,
                                    'kind': 'Node',
                                    'name': 'master',
                                    'uid': '218d331a-36c3-4a01-9b0b-32e7b0834211'}],
              'resource_version': '1814090',
              'self_link': '/api/v1/namespaces/kube-system/pods/kube-scheduler-master',
              'uid': '9228db9c-e335-49b3-9b2a-0438684d74fa'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': ['kube-scheduler',
                                      '--authentication-kubeconfig=/etc/kubernetes/scheduler.conf',
                                      '--authorization-kubeconfig=/etc/kubernetes/scheduler.conf',
                                      '--bind-address=127.0.0.1',
                                      '--kubeconfig=/etc/kubernetes/scheduler.conf',
                                      '--leader-elect=true'],
                          'env': None,
                          'env_from': None,
                          'image': 'registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.18.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': None,
                                             'failure_threshold': 8,
                                             'http_get': {'host': '127.0.0.1',
                                                          'http_headers': None,
                                                          'path': '/healthz',
                                                          'port': 10259,
                                                          'scheme': 'HTTPS'},
                                             'initial_delay_seconds': 15,
                                             'period_seconds': 10,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 15},
                          'name': 'kube-scheduler',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None,
                                        'requests': {'cpu': '100m'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/kubernetes/scheduler.conf',
                                             'mount_propagation': None,
                                             'name': 'kubeconfig',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'master',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 2000000000,
          'priority_class_name': 'system-cluster-critical',
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': None,
          'service_account_name': None,
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/etc/kubernetes/scheduler.conf',
                                     'type': 'FileOrCreate'},
                       'iscsi': None,
                       'name': 'kubeconfig',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 18, 59, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 18, 59, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://3da8eef58906c9884aa8a707fa60748ef7ab781e2f6985486714696a317ca620',
                                    'image': 'k8s.gcr.io/kube-scheduler:v1.18.2',
                                    'image_id': 'docker-pullable://registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler@sha256:9f5a733905ff574f648e87d21f0879e1b6597b8f1cfd7381b2b808f7b60ddfa7',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://fc1aaa5fd1a33514701f7a652e8a2cb15e1f04a7f6e6fd7efc00fe2514bc4517',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 23, 0, 51, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 19, 1, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-scheduler',
                                    'ready': True,
                                    'restart_count': 57,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 51, 16, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.100',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.100'}],
            'pod_ip': '192.168.242.100',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 22, 1, 18, 59, tzinfo=tzutc())}}

longhorn-system:::::::::::csi-attacher-5b4745c5f7-8vsvs
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 35, 53, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'csi-attacher-5b4745c5f7-',
              'generation': None,
              'labels': {'app': 'csi-attacher',
                         'pod-template-hash': '5b4745c5f7'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"a7c6709b-2b2a-4887-a8b9-724a8df4897c"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"csi-attacher"}': {'.': {},
                                                                                                          'f:args': {},
                                                                                                          'f:env': {'.': {},
                                                                                                                    'k:{"name":"ADDRESS"}': {'.': {},
                                                                                                                                             'f:name': {},
                                                                                                                                             'f:value': {}},
                                                                                                                    'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                   'f:name': {},
                                                                                                                                                   'f:valueFrom': {'.': {},
                                                                                                                                                                   'f:fieldRef': {'.': {},
                                                                                                                                                                                  'f:apiVersion': {},
                                                                                                                                                                                  'f:fieldPath': {}}}}},
                                                                                                          'f:image': {},
                                                                                                          'f:imagePullPolicy': {},
                                                                                                          'f:name': {},
                                                                                                          'f:resources': {},
                                                                                                          'f:terminationMessagePath': {},
                                                                                                          'f:terminationMessagePolicy': {},
                                                                                                          'f:volumeMounts': {'.': {},
                                                                                                                             'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                         'f:mountPath': {},
                                                                                                                                                         'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"socket-dir"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.162"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 48, tzinfo=tzutc())}],
              'name': 'csi-attacher-5b4745c5f7-8vsvs',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'csi-attacher-5b4745c5f7',
                                    'uid': 'a7c6709b-2b2a-4887-a8b9-724a8df4897c'}],
              'resource_version': '1814368',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/csi-attacher-5b4745c5f7-8vsvs',
              'uid': '4f2fe91f-306b-4b48-a4d9-1823b4c51b41'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--v=5',
                                   '--csi-address=$(ADDRESS)',
                                   '--leader-election',
                                   '--leader-election-namespace=$(POD_NAMESPACE)'],
                          'command': None,
                          'env': [{'name': 'ADDRESS',
                                   'value': '/csi/csi.sock',
                                   'value_from': None},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'longhornio/csi-attacher:v2.0.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'csi-attacher',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'socket-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 53, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 34, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 34, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 53, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://b7bf6bda98229be46a6c91e688819210bceeaf8c09162dac39904c05b30f3d50',
                                    'image': 'longhornio/csi-attacher:v2.0.0',
                                    'image_id': 'docker-pullable://longhornio/csi-attacher@sha256:71e2b9b5b8c52d789ef89ba901c8fba270fa623789a988c77c52ebb0257bf723',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://811859a32a494d54904c731b4fb3d0d81fef5a6a8b94d9cb860f00682b56926f',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 23, 0, 49, 2, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 20, 14, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'csi-attacher',
                                    'ready': True,
                                    'restart_count': 22,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 51, 29, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.162'}],
            'pod_ip': '10.244.1.162',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 35, 53, tzinfo=tzutc())}}

longhorn-system:::::::::::csi-attacher-5b4745c5f7-bbq2s
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 35, 53, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'csi-attacher-5b4745c5f7-',
              'generation': None,
              'labels': {'app': 'csi-attacher',
                         'pod-template-hash': '5b4745c5f7'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"a7c6709b-2b2a-4887-a8b9-724a8df4897c"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"csi-attacher"}': {'.': {},
                                                                                                          'f:args': {},
                                                                                                          'f:env': {'.': {},
                                                                                                                    'k:{"name":"ADDRESS"}': {'.': {},
                                                                                                                                             'f:name': {},
                                                                                                                                             'f:value': {}},
                                                                                                                    'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                   'f:name': {},
                                                                                                                                                   'f:valueFrom': {'.': {},
                                                                                                                                                                   'f:fieldRef': {'.': {},
                                                                                                                                                                                  'f:apiVersion': {},
                                                                                                                                                                                  'f:fieldPath': {}}}}},
                                                                                                          'f:image': {},
                                                                                                          'f:imagePullPolicy': {},
                                                                                                          'f:name': {},
                                                                                                          'f:resources': {},
                                                                                                          'f:terminationMessagePath': {},
                                                                                                          'f:terminationMessagePolicy': {},
                                                                                                          'f:volumeMounts': {'.': {},
                                                                                                                             'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                         'f:mountPath': {},
                                                                                                                                                         'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"socket-dir"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 54, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.160"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 55, tzinfo=tzutc())}],
              'name': 'csi-attacher-5b4745c5f7-bbq2s',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'csi-attacher-5b4745c5f7',
                                    'uid': 'a7c6709b-2b2a-4887-a8b9-724a8df4897c'}],
              'resource_version': '1814491',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/csi-attacher-5b4745c5f7-bbq2s',
              'uid': '0586a810-5117-4363-9cce-228976ab7175'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--v=5',
                                   '--csi-address=$(ADDRESS)',
                                   '--leader-election',
                                   '--leader-election-namespace=$(POD_NAMESPACE)'],
                          'command': None,
                          'env': [{'name': 'ADDRESS',
                                   'value': '/csi/csi.sock',
                                   'value_from': None},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'longhornio/csi-attacher:v2.0.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'csi-attacher',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'socket-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 53, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 48, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 48, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 53, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://1e09eec0dacbbd1ccfb286a6097d766d9e54f4620dc4ccc20019740b65bd5533',
                                    'image': 'longhornio/csi-attacher:v2.0.0',
                                    'image_id': 'docker-pullable://longhornio/csi-attacher@sha256:71e2b9b5b8c52d789ef89ba901c8fba270fa623789a988c77c52ebb0257bf723',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://bf4efc3850f879f3cba0bf780a7a16a80240245baec337d9d18eaac8bd74af31',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 23, 0, 49, 20, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 15, 4, 2, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'csi-attacher',
                                    'ready': True,
                                    'restart_count': 29,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 51, 35, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.160'}],
            'pod_ip': '10.244.1.160',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 35, 53, tzinfo=tzutc())}}

longhorn-system:::::::::::csi-attacher-5b4745c5f7-d7l8r
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 35, 53, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'csi-attacher-5b4745c5f7-',
              'generation': None,
              'labels': {'app': 'csi-attacher',
                         'pod-template-hash': '5b4745c5f7'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"a7c6709b-2b2a-4887-a8b9-724a8df4897c"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"csi-attacher"}': {'.': {},
                                                                                                          'f:args': {},
                                                                                                          'f:env': {'.': {},
                                                                                                                    'k:{"name":"ADDRESS"}': {'.': {},
                                                                                                                                             'f:name': {},
                                                                                                                                             'f:value': {}},
                                                                                                                    'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                   'f:name': {},
                                                                                                                                                   'f:valueFrom': {'.': {},
                                                                                                                                                                   'f:fieldRef': {'.': {},
                                                                                                                                                                                  'f:apiVersion': {},
                                                                                                                                                                                  'f:fieldPath': {}}}}},
                                                                                                          'f:image': {},
                                                                                                          'f:imagePullPolicy': {},
                                                                                                          'f:name': {},
                                                                                                          'f:resources': {},
                                                                                                          'f:terminationMessagePath': {},
                                                                                                          'f:terminationMessagePolicy': {},
                                                                                                          'f:volumeMounts': {'.': {},
                                                                                                                             'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                         'f:mountPath': {},
                                                                                                                                                         'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"socket-dir"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 25, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.172"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 50, tzinfo=tzutc())}],
              'name': 'csi-attacher-5b4745c5f7-d7l8r',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'csi-attacher-5b4745c5f7',
                                    'uid': 'a7c6709b-2b2a-4887-a8b9-724a8df4897c'}],
              'resource_version': '1814403',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/csi-attacher-5b4745c5f7-d7l8r',
              'uid': 'b8989594-b321-4b77-9fe1-11ef360068fd'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--v=5',
                                   '--csi-address=$(ADDRESS)',
                                   '--leader-election',
                                   '--leader-election-namespace=$(POD_NAMESPACE)'],
                          'command': None,
                          'env': [{'name': 'ADDRESS',
                                   'value': '/csi/csi.sock',
                                   'value_from': None},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'longhornio/csi-attacher:v2.0.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'csi-attacher',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'socket-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 15, 4, 26, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 15, 4, 26, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 53, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://bed5757cf78eac91ed66e36c67722012cf57c561843f9f5d2d5fd89889239fa9',
                                    'image': 'longhornio/csi-attacher:v2.0.0',
                                    'image_id': 'docker-pullable://longhornio/csi-attacher@sha256:71e2b9b5b8c52d789ef89ba901c8fba270fa623789a988c77c52ebb0257bf723',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://e2405e0761b3e8776224957275bdfccafcac0b0010a6eac5acce93c508504e2a',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 15, 3, 48, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 20, 57, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'csi-attacher',
                                    'ready': True,
                                    'restart_count': 19,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 15, 4, 23, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.172'}],
            'pod_ip': '10.244.2.172',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc())}}

longhorn-system:::::::::::csi-provisioner-57d6dbf5f4-sqg47
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'csi-provisioner-57d6dbf5f4-',
              'generation': None,
              'labels': {'app': 'csi-provisioner',
                         'pod-template-hash': '57d6dbf5f4'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"d1d4d188-b9c7-4895-8026-0ba7156e14b5"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"csi-provisioner"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:env': {'.': {},
                                                                                                                       'k:{"name":"ADDRESS"}': {'.': {},
                                                                                                                                                'f:name': {},
                                                                                                                                                'f:value': {}},
                                                                                                                       'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                      'f:name': {},
                                                                                                                                                      'f:valueFrom': {'.': {},
                                                                                                                                                                      'f:fieldRef': {'.': {},
                                                                                                                                                                                     'f:apiVersion': {},
                                                                                                                                                                                     'f:fieldPath': {}}}}},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:resources': {},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {},
                                                                                                             'f:volumeMounts': {'.': {},
                                                                                                                                'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                            'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"socket-dir"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 26, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.184"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 56, tzinfo=tzutc())}],
              'name': 'csi-provisioner-57d6dbf5f4-sqg47',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'csi-provisioner-57d6dbf5f4',
                                    'uid': 'd1d4d188-b9c7-4895-8026-0ba7156e14b5'}],
              'resource_version': '1814494',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/csi-provisioner-57d6dbf5f4-sqg47',
              'uid': '171249d8-b246-4803-9fd8-572e61547f73'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--v=5',
                                   '--csi-address=$(ADDRESS)',
                                   '--enable-leader-election',
                                   '--leader-election-type=leases',
                                   '--leader-election-namespace=$(POD_NAMESPACE)'],
                          'command': None,
                          'env': [{'name': 'ADDRESS',
                                   'value': '/csi/csi.sock',
                                   'value_from': None},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'longhornio/csi-provisioner:v1.4.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'csi-provisioner',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'socket-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 56, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 56, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://7100e17251202e2d8a649d3e1dece2e46277e77170147da6da287438aafae0f3',
                                    'image': 'longhornio/csi-provisioner:v1.4.0',
                                    'image_id': 'docker-pullable://longhornio/csi-provisioner@sha256:438c04395d03fa671f8656d6f951332516754e330d1ac4f9588df1ba2870a366',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://928ce4d9475b946799bba5442b304a3e7f542ce66a1ed8cde49990dd780d5ee7',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 23, 0, 50, 19, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 21, 3, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'csi-provisioner',
                                    'ready': True,
                                    'restart_count': 28,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 51, 55, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.184'}],
            'pod_ip': '10.244.2.184',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc())}}

longhorn-system:::::::::::csi-provisioner-57d6dbf5f4-sskj6
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'csi-provisioner-57d6dbf5f4-',
              'generation': None,
              'labels': {'app': 'csi-provisioner',
                         'pod-template-hash': '57d6dbf5f4'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"d1d4d188-b9c7-4895-8026-0ba7156e14b5"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"csi-provisioner"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:env': {'.': {},
                                                                                                                       'k:{"name":"ADDRESS"}': {'.': {},
                                                                                                                                                'f:name': {},
                                                                                                                                                'f:value': {}},
                                                                                                                       'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                      'f:name': {},
                                                                                                                                                      'f:valueFrom': {'.': {},
                                                                                                                                                                      'f:fieldRef': {'.': {},
                                                                                                                                                                                     'f:apiVersion': {},
                                                                                                                                                                                     'f:fieldPath': {}}}}},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:resources': {},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {},
                                                                                                             'f:volumeMounts': {'.': {},
                                                                                                                                'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                            'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"socket-dir"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.159"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 53, tzinfo=tzutc())}],
              'name': 'csi-provisioner-57d6dbf5f4-sskj6',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'csi-provisioner-57d6dbf5f4',
                                    'uid': 'd1d4d188-b9c7-4895-8026-0ba7156e14b5'}],
              'resource_version': '1814460',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/csi-provisioner-57d6dbf5f4-sskj6',
              'uid': 'c9ba6aa6-6c31-4758-98aa-6daa294a0a91'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--v=5',
                                   '--csi-address=$(ADDRESS)',
                                   '--enable-leader-election',
                                   '--leader-election-type=leases',
                                   '--leader-election-namespace=$(POD_NAMESPACE)'],
                          'command': None,
                          'env': [{'name': 'ADDRESS',
                                   'value': '/csi/csi.sock',
                                   'value_from': None},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'longhornio/csi-provisioner:v1.4.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'csi-provisioner',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'socket-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 51, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 51, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://3052be3a35154bcf3b81e28f14da0f18f3fe091ac315cf70956b60fdd25ae8f4',
                                    'image': 'longhornio/csi-provisioner:v1.4.0',
                                    'image_id': 'docker-pullable://longhornio/csi-provisioner@sha256:438c04395d03fa671f8656d6f951332516754e330d1ac4f9588df1ba2870a366',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://e83c240c84de2cf2ed176320bef1aa05b9a2d6db12cde205600c6e1d8ffe7601',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 23, 0, 51, 37, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 15, 4, 2, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'csi-provisioner',
                                    'ready': True,
                                    'restart_count': 40,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 51, 50, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.159'}],
            'pod_ip': '10.244.1.159',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc())}}

longhorn-system:::::::::::csi-provisioner-57d6dbf5f4-vxqjr
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'csi-provisioner-57d6dbf5f4-',
              'generation': None,
              'labels': {'app': 'csi-provisioner',
                         'pod-template-hash': '57d6dbf5f4'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"d1d4d188-b9c7-4895-8026-0ba7156e14b5"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"csi-provisioner"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:env': {'.': {},
                                                                                                                       'k:{"name":"ADDRESS"}': {'.': {},
                                                                                                                                                'f:name': {},
                                                                                                                                                'f:value': {}},
                                                                                                                       'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                      'f:name': {},
                                                                                                                                                      'f:valueFrom': {'.': {},
                                                                                                                                                                      'f:fieldRef': {'.': {},
                                                                                                                                                                                     'f:apiVersion': {},
                                                                                                                                                                                     'f:fieldPath': {}}}}},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:resources': {},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {},
                                                                                                             'f:volumeMounts': {'.': {},
                                                                                                                                'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                            'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"socket-dir"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.154"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 47, tzinfo=tzutc())}],
              'name': 'csi-provisioner-57d6dbf5f4-vxqjr',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'csi-provisioner-57d6dbf5f4',
                                    'uid': 'd1d4d188-b9c7-4895-8026-0ba7156e14b5'}],
              'resource_version': '1814358',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/csi-provisioner-57d6dbf5f4-vxqjr',
              'uid': 'fe6547fb-ffc6-49a4-987d-acaf301287c1'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--v=5',
                                   '--csi-address=$(ADDRESS)',
                                   '--enable-leader-election',
                                   '--leader-election-type=leases',
                                   '--leader-election-namespace=$(POD_NAMESPACE)'],
                          'command': None,
                          'env': [{'name': 'ADDRESS',
                                   'value': '/csi/csi.sock',
                                   'value_from': None},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'longhornio/csi-provisioner:v1.4.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'csi-provisioner',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'socket-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 28, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 28, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://a34e5fcc5d5c460d113dd7bdb3b98e982d5140e68cc43eb3441db24ea40a4e32',
                                    'image': 'longhornio/csi-provisioner:v1.4.0',
                                    'image_id': 'docker-pullable://longhornio/csi-provisioner@sha256:438c04395d03fa671f8656d6f951332516754e330d1ac4f9588df1ba2870a366',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://a3412ababccda6295c359dd91a10e244e113fdd667200367719be61808ac6a60',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 23, 0, 50, 33, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 20, 9, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'csi-provisioner',
                                    'ready': True,
                                    'restart_count': 48,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 51, 28, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.154'}],
            'pod_ip': '10.244.1.154',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc())}}

longhorn-system:::::::::::csi-resizer-75ff56bc48-6mvhx
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'csi-resizer-75ff56bc48-',
              'generation': None,
              'labels': {'app': 'csi-resizer',
                         'pod-template-hash': '75ff56bc48'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"85b624e8-9e62-40a1-9adb-0ee84e0c7e90"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"csi-resizer"}': {'.': {},
                                                                                                         'f:args': {},
                                                                                                         'f:env': {'.': {},
                                                                                                                   'k:{"name":"ADDRESS"}': {'.': {},
                                                                                                                                            'f:name': {},
                                                                                                                                            'f:value': {}},
                                                                                                                   'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                  'f:name': {},
                                                                                                                                                  'f:valueFrom': {'.': {},
                                                                                                                                                                  'f:fieldRef': {'.': {},
                                                                                                                                                                                 'f:apiVersion': {},
                                                                                                                                                                                 'f:fieldPath': {}}}}},
                                                                                                         'f:image': {},
                                                                                                         'f:imagePullPolicy': {},
                                                                                                         'f:name': {},
                                                                                                         'f:resources': {},
                                                                                                         'f:terminationMessagePath': {},
                                                                                                         'f:terminationMessagePolicy': {},
                                                                                                         'f:volumeMounts': {'.': {},
                                                                                                                            'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                        'f:mountPath': {},
                                                                                                                                                        'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"socket-dir"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 25, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.177"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 51, tzinfo=tzutc())}],
              'name': 'csi-resizer-75ff56bc48-6mvhx',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'csi-resizer-75ff56bc48',
                                    'uid': '85b624e8-9e62-40a1-9adb-0ee84e0c7e90'}],
              'resource_version': '1814424',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/csi-resizer-75ff56bc48-6mvhx',
              'uid': 'dce8c42e-ff58-48b4-8798-18e1142ad9f3'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--v=5',
                                   '--csi-address=$(ADDRESS)',
                                   '--leader-election',
                                   '--leader-election-namespace=$(POD_NAMESPACE)'],
                          'command': None,
                          'env': [{'name': 'ADDRESS',
                                   'value': '/csi/csi.sock',
                                   'value_from': None},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'longhornio/csi-resizer:v0.3.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'csi-resizer',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'socket-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 13, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 13, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://61f5f647ad668a1754789ba3d0fd49dea318b0433c2a687282b8f5c240cc4f78',
                                    'image': 'longhornio/csi-resizer:v0.3.0',
                                    'image_id': 'docker-pullable://longhornio/csi-resizer@sha256:60649634ae904c8dae39a0df0357c251ca51be6fe5258018cd86a379e8697f43',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://359fdfbdae3c1f88e1225e0f95ddb7ca6a0841d8657665e605d02de88ad67212',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 21, 0, 55, 45, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'csi-resizer',
                                    'ready': True,
                                    'restart_count': 20,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 1, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.177'}],
            'pod_ip': '10.244.2.177',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc())}}

longhorn-system:::::::::::csi-resizer-75ff56bc48-gdwgk
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'csi-resizer-75ff56bc48-',
              'generation': None,
              'labels': {'app': 'csi-resizer',
                         'pod-template-hash': '75ff56bc48'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"85b624e8-9e62-40a1-9adb-0ee84e0c7e90"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"csi-resizer"}': {'.': {},
                                                                                                         'f:args': {},
                                                                                                         'f:env': {'.': {},
                                                                                                                   'k:{"name":"ADDRESS"}': {'.': {},
                                                                                                                                            'f:name': {},
                                                                                                                                            'f:value': {}},
                                                                                                                   'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                  'f:name': {},
                                                                                                                                                  'f:valueFrom': {'.': {},
                                                                                                                                                                  'f:fieldRef': {'.': {},
                                                                                                                                                                                 'f:apiVersion': {},
                                                                                                                                                                                 'f:fieldPath': {}}}}},
                                                                                                         'f:image': {},
                                                                                                         'f:imagePullPolicy': {},
                                                                                                         'f:name': {},
                                                                                                         'f:resources': {},
                                                                                                         'f:terminationMessagePath': {},
                                                                                                         'f:terminationMessagePolicy': {},
                                                                                                         'f:volumeMounts': {'.': {},
                                                                                                                            'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                        'f:mountPath': {},
                                                                                                                                                        'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"socket-dir"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.152"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 51, tzinfo=tzutc())}],
              'name': 'csi-resizer-75ff56bc48-gdwgk',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'csi-resizer-75ff56bc48',
                                    'uid': '85b624e8-9e62-40a1-9adb-0ee84e0c7e90'}],
              'resource_version': '1814420',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/csi-resizer-75ff56bc48-gdwgk',
              'uid': 'b322d1e2-174d-4bd0-a6f9-7a33b9ae964b'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--v=5',
                                   '--csi-address=$(ADDRESS)',
                                   '--leader-election',
                                   '--leader-election-namespace=$(POD_NAMESPACE)'],
                          'command': None,
                          'env': [{'name': 'ADDRESS',
                                   'value': '/csi/csi.sock',
                                   'value_from': None},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'longhornio/csi-resizer:v0.3.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'csi-resizer',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'socket-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 34, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 34, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://0372dd70d2fbc20df100b11b1d889a795e77281701dc6f595f8f68f089005fa4',
                                    'image': 'longhornio/csi-resizer:v0.3.0',
                                    'image_id': 'docker-pullable://longhornio/csi-resizer@sha256:60649634ae904c8dae39a0df0357c251ca51be6fe5258018cd86a379e8697f43',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://9c359747fd8eb7b34f6806ed3240220957f26c8fe5cdbff21ed3d95c215e0cc3',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 23, 0, 50, 33, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 15, 4, 3, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'csi-resizer',
                                    'ready': True,
                                    'restart_count': 28,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 51, 28, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.152'}],
            'pod_ip': '10.244.1.152',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc())}}

longhorn-system:::::::::::csi-resizer-75ff56bc48-m2tsl
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'csi-resizer-75ff56bc48-',
              'generation': None,
              'labels': {'app': 'csi-resizer',
                         'pod-template-hash': '75ff56bc48'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"85b624e8-9e62-40a1-9adb-0ee84e0c7e90"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"csi-resizer"}': {'.': {},
                                                                                                         'f:args': {},
                                                                                                         'f:env': {'.': {},
                                                                                                                   'k:{"name":"ADDRESS"}': {'.': {},
                                                                                                                                            'f:name': {},
                                                                                                                                            'f:value': {}},
                                                                                                                   'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                  'f:name': {},
                                                                                                                                                  'f:valueFrom': {'.': {},
                                                                                                                                                                  'f:fieldRef': {'.': {},
                                                                                                                                                                                 'f:apiVersion': {},
                                                                                                                                                                                 'f:fieldPath': {}}}}},
                                                                                                         'f:image': {},
                                                                                                         'f:imagePullPolicy': {},
                                                                                                         'f:name': {},
                                                                                                         'f:resources': {},
                                                                                                         'f:terminationMessagePath': {},
                                                                                                         'f:terminationMessagePolicy': {},
                                                                                                         'f:volumeMounts': {'.': {},
                                                                                                                            'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                        'f:mountPath': {},
                                                                                                                                                        'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"socket-dir"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 26, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.185"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 58, tzinfo=tzutc())}],
              'name': 'csi-resizer-75ff56bc48-m2tsl',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'csi-resizer-75ff56bc48',
                                    'uid': '85b624e8-9e62-40a1-9adb-0ee84e0c7e90'}],
              'resource_version': '1814504',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/csi-resizer-75ff56bc48-m2tsl',
              'uid': 'd0c18299-6031-4486-b96c-d6a0fb432e31'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--v=5',
                                   '--csi-address=$(ADDRESS)',
                                   '--leader-election',
                                   '--leader-election-namespace=$(POD_NAMESPACE)'],
                          'command': None,
                          'env': [{'name': 'ADDRESS',
                                   'value': '/csi/csi.sock',
                                   'value_from': None},
                                  {'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'longhornio/csi-resizer:v0.3.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'csi-resizer',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'socket-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 58, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 58, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://661178812ce352221a6d9594d1894348420045baa5be09e369e59eb7fa8dc24f',
                                    'image': 'longhornio/csi-resizer:v0.3.0',
                                    'image_id': 'docker-pullable://longhornio/csi-resizer@sha256:60649634ae904c8dae39a0df0357c251ca51be6fe5258018cd86a379e8697f43',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://7f3455664d18c347d0dec6af03ae71b38ad6222f32205360cf47720f478b3b9a',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 23, 0, 48, 39, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 21, 4, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'csi-resizer',
                                    'ready': True,
                                    'restart_count': 18,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 51, 55, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.185'}],
            'pod_ip': '10.244.2.185',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc())}}

longhorn-system:::::::::::engine-image-ei-ee18f965-cszqs
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 9, 57, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'engine-image-ei-ee18f965-',
              'generation': None,
              'labels': {'controller-revision-hash': '77f48c8944',
                         'longhorn.io/component': 'engine-image',
                         'longhorn.io/engine-image': 'ei-ee18f965',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:longhorn.io/component': {},
                                                                            'f:longhorn.io/engine-image': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"58648ef5-960b-4d7c-ad0e-6da7971b7e79"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"engine-image-ei-ee18f965"}': {'.': {},
                                                                                                                      'f:args': {},
                                                                                                                      'f:command': {},
                                                                                                                      'f:image': {},
                                                                                                                      'f:imagePullPolicy': {},
                                                                                                                      'f:name': {},
                                                                                                                      'f:readinessProbe': {'.': {},
                                                                                                                                           'f:exec': {'.': {},
                                                                                                                                                      'f:command': {}},
                                                                                                                                           'f:failureThreshold': {},
                                                                                                                                           'f:initialDelaySeconds': {},
                                                                                                                                           'f:periodSeconds': {},
                                                                                                                                           'f:successThreshold': {},
                                                                                                                                           'f:timeoutSeconds': {}},
                                                                                                                      'f:resources': {},
                                                                                                                      'f:securityContext': {'.': {},
                                                                                                                                            'f:privileged': {}},
                                                                                                                      'f:terminationMessagePath': {},
                                                                                                                      'f:terminationMessagePolicy': {},
                                                                                                                      'f:volumeMounts': {'.': {},
                                                                                                                                         'k:{"mountPath":"/data/"}': {'.': {},
                                                                                                                                                                      'f:mountPath': {},
                                                                                                                                                                      'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"data"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.150"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 46, tzinfo=tzutc())}],
              'name': 'engine-image-ei-ee18f965-cszqs',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'engine-image-ei-ee18f965',
                                    'uid': '58648ef5-960b-4d7c-ad0e-6da7971b7e79'}],
              'resource_version': '1814342',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/engine-image-ei-ee18f965-cszqs',
              'uid': '94281014-bb70-4644-a66b-8c71b12cc075'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node1']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': ['-c',
                                   'diff /usr/local/bin/longhorn '
                                   '/data/longhorn > /dev/null 2>&1; if [ $? '
                                   '-ne 0 ]; then cp -p '
                                   '/usr/local/bin/longhorn /data/ && echo '
                                   "installed; fi && trap 'rm /data/longhorn* "
                                   "&& echo cleaned up' EXIT && sleep "
                                   'infinity'],
                          'command': ['/bin/bash'],
                          'env': None,
                          'env_from': None,
                          'image': 'longhornio/longhorn-engine:v1.0.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'engine-image-ei-ee18f965',
                          'ports': None,
                          'readiness_probe': {'_exec': {'command': ['sh',
                                                                    '-c',
                                                                    'ls '
                                                                    '/data/longhorn '
                                                                    '&& '
                                                                    '/data/longhorn '
                                                                    'version '
                                                                    '--client-only']},
                                              'failure_threshold': 3,
                                              'http_get': None,
                                              'initial_delay_seconds': 5,
                                              'period_seconds': 5,
                                              'success_threshold': 1,
                                              'tcp_socket': None,
                                              'timeout_seconds': 1},
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/data/',
                                             'mount_propagation': None,
                                             'name': 'data',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/longhorn/engine-binaries/longhornio-longhorn-engine-v1.0.2',
                                     'type': ''},
                       'iscsi': None,
                       'name': 'data',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 9, 57, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 22, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 22, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 9, 57, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://b4ce5e91bac7700158331e493b5141ea08f3dd553cc5a2f255266135e70ca8c5',
                                    'image': 'longhornio/longhorn-engine:v1.0.2',
                                    'image_id': 'docker-pullable://longhornio/longhorn-engine@sha256:45e5db0705df6b5ae60478392b233b9a130ca0cbb12010b8aa645a98b55f8832',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://0156e54c6516f2bc1ce65db9006edc2a040ece611643309516ab6620d3255f08',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 6, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'engine-image-ei-ee18f965',
                                    'ready': True,
                                    'restart_count': 4,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 14, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.150'}],
            'pod_ip': '10.244.1.150',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 9, 57, tzinfo=tzutc())}}

longhorn-system:::::::::::engine-image-ei-ee18f965-wwmp6
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 9, 57, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'engine-image-ei-ee18f965-',
              'generation': None,
              'labels': {'controller-revision-hash': '77f48c8944',
                         'longhorn.io/component': 'engine-image',
                         'longhorn.io/engine-image': 'ei-ee18f965',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:longhorn.io/component': {},
                                                                            'f:longhorn.io/engine-image': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"58648ef5-960b-4d7c-ad0e-6da7971b7e79"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"engine-image-ei-ee18f965"}': {'.': {},
                                                                                                                      'f:args': {},
                                                                                                                      'f:command': {},
                                                                                                                      'f:image': {},
                                                                                                                      'f:imagePullPolicy': {},
                                                                                                                      'f:name': {},
                                                                                                                      'f:readinessProbe': {'.': {},
                                                                                                                                           'f:exec': {'.': {},
                                                                                                                                                      'f:command': {}},
                                                                                                                                           'f:failureThreshold': {},
                                                                                                                                           'f:initialDelaySeconds': {},
                                                                                                                                           'f:periodSeconds': {},
                                                                                                                                           'f:successThreshold': {},
                                                                                                                                           'f:timeoutSeconds': {}},
                                                                                                                      'f:resources': {},
                                                                                                                      'f:securityContext': {'.': {},
                                                                                                                                            'f:privileged': {}},
                                                                                                                      'f:terminationMessagePath': {},
                                                                                                                      'f:terminationMessagePolicy': {},
                                                                                                                      'f:volumeMounts': {'.': {},
                                                                                                                                         'k:{"mountPath":"/data/"}': {'.': {},
                                                                                                                                                                      'f:mountPath': {},
                                                                                                                                                                      'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"data"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 25, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.173"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 4, tzinfo=tzutc())}],
              'name': 'engine-image-ei-ee18f965-wwmp6',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'engine-image-ei-ee18f965',
                                    'uid': '58648ef5-960b-4d7c-ad0e-6da7971b7e79'}],
              'resource_version': '1814521',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/engine-image-ei-ee18f965-wwmp6',
              'uid': 'f42da370-0e91-4296-95d4-534f4ee6fd2f'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node2']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': ['-c',
                                   'diff /usr/local/bin/longhorn '
                                   '/data/longhorn > /dev/null 2>&1; if [ $? '
                                   '-ne 0 ]; then cp -p '
                                   '/usr/local/bin/longhorn /data/ && echo '
                                   "installed; fi && trap 'rm /data/longhorn* "
                                   "&& echo cleaned up' EXIT && sleep "
                                   'infinity'],
                          'command': ['/bin/bash'],
                          'env': None,
                          'env_from': None,
                          'image': 'longhornio/longhorn-engine:v1.0.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'engine-image-ei-ee18f965',
                          'ports': None,
                          'readiness_probe': {'_exec': {'command': ['sh',
                                                                    '-c',
                                                                    'ls '
                                                                    '/data/longhorn '
                                                                    '&& '
                                                                    '/data/longhorn '
                                                                    'version '
                                                                    '--client-only']},
                                              'failure_threshold': 3,
                                              'http_get': None,
                                              'initial_delay_seconds': 5,
                                              'period_seconds': 5,
                                              'success_threshold': 1,
                                              'tcp_socket': None,
                                              'timeout_seconds': 1},
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/data/',
                                             'mount_propagation': None,
                                             'name': 'data',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/longhorn/engine-binaries/longhornio-longhorn-engine-v1.0.2',
                                     'type': ''},
                       'iscsi': None,
                       'name': 'data',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 9, 57, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 9, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 9, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 9, 57, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://aa1830c80676141410c1e461e9b43deadd68613d7e9837bce67453217d2d22ae',
                                    'image': 'longhornio/longhorn-engine:v1.0.2',
                                    'image_id': 'docker-pullable://longhornio/longhorn-engine@sha256:45e5db0705df6b5ae60478392b233b9a130ca0cbb12010b8aa645a98b55f8832',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://b8d7111cbb75fccaca5baa4e9dbe7a9f9689d765f7dd46f83f0acf4ce2f682b6',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 21, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'engine-image-ei-ee18f965',
                                    'ready': True,
                                    'restart_count': 4,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.173'}],
            'pod_ip': '10.244.2.173',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 9, 57, tzinfo=tzutc())}}

longhorn-system:::::::::::instance-manager-e-bab04ddd
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 23, 0, 52, 14, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': None,
              'generation': None,
              'labels': {'longhorn.io/component': 'instance-manager',
                         'longhorn.io/instance-manager-image': 'imi-4fa5a52f',
                         'longhorn.io/instance-manager-type': 'engine',
                         'longhorn.io/node': 'node2'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:labels': {'.': {},
                                                                            'f:longhorn.io/component': {},
                                                                            'f:longhorn.io/instance-manager-image': {},
                                                                            'f:longhorn.io/instance-manager-type': {},
                                                                            'f:longhorn.io/node': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"d552aa33-bce1-46c4-8fa8-cd4498d36e39"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"engine-manager"}': {'.': {},
                                                                                                            'f:args': {},
                                                                                                            'f:image': {},
                                                                                                            'f:imagePullPolicy': {},
                                                                                                            'f:livenessProbe': {'.': {},
                                                                                                                                'f:exec': {'.': {},
                                                                                                                                           'f:command': {}},
                                                                                                                                'f:failureThreshold': {},
                                                                                                                                'f:initialDelaySeconds': {},
                                                                                                                                'f:periodSeconds': {},
                                                                                                                                'f:successThreshold': {},
                                                                                                                                'f:timeoutSeconds': {}},
                                                                                                            'f:name': {},
                                                                                                            'f:resources': {'.': {},
                                                                                                                            'f:requests': {'.': {},
                                                                                                                                           'f:cpu': {}}},
                                                                                                            'f:securityContext': {'.': {},
                                                                                                                                  'f:privileged': {}},
                                                                                                            'f:terminationMessagePath': {},
                                                                                                            'f:terminationMessagePolicy': {},
                                                                                                            'f:volumeMounts': {'.': {},
                                                                                                                               'k:{"mountPath":"/engine-binaries/"}': {'.': {},
                                                                                                                                                                       'f:mountPath': {},
                                                                                                                                                                       'f:mountPropagation': {},
                                                                                                                                                                       'f:name': {}},
                                                                                                                               'k:{"mountPath":"/host/dev"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:name': {}},
                                                                                                                               'k:{"mountPath":"/host/proc"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:nodeName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"dev"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}},
                                                                         'k:{"name":"engine-binaries"}': {'.': {},
                                                                                                          'f:hostPath': {'.': {},
                                                                                                                         'f:path': {},
                                                                                                                         'f:type': {}},
                                                                                                          'f:name': {}},
                                                                         'k:{"name":"proc"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}}}}},
                                  'manager': 'longhorn-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 14, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'.': {},
                                                                              'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"PodScheduled"}': {'.': {},
                                                                                                            'f:lastProbeTime': {},
                                                                                                            'f:lastTransitionTime': {},
                                                                                                            'f:status': {},
                                                                                                            'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.191"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 31, tzinfo=tzutc())}],
              'name': 'instance-manager-e-bab04ddd',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'longhorn.io/v1beta1',
                                    'block_owner_deletion': None,
                                    'controller': None,
                                    'kind': 'InstanceManager',
                                    'name': 'instance-manager-e-bab04ddd',
                                    'uid': 'd552aa33-bce1-46c4-8fa8-cd4498d36e39'}],
              'resource_version': '1814703',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/instance-manager-e-bab04ddd',
              'uid': '40837996-9ad7-4b78-a4a9-aecc4e92011c'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['engine-manager',
                                   '--debug',
                                   'daemon',
                                   '--listen',
                                   '0.0.0.0:8500'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'longhornio/longhorn-instance-manager:v1_20200514',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': {'command': ['/usr/local/bin/grpc_health_probe',
                                                                   '-addr=:8500']},
                                             'failure_threshold': 3,
                                             'http_get': None,
                                             'initial_delay_seconds': 3,
                                             'period_seconds': 5,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 1},
                          'name': 'engine-manager',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None,
                                        'requests': {'cpu': '250m'}},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/host/dev',
                                             'mount_propagation': None,
                                             'name': 'dev',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/host/proc',
                                             'mount_propagation': None,
                                             'name': 'proc',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/engine-binaries/',
                                             'mount_propagation': 'HostToContainer',
                                             'name': 'engine-binaries',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Never',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/dev', 'type': ''},
                       'iscsi': None,
                       'name': 'dev',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/proc', 'type': ''},
                       'iscsi': None,
                       'name': 'proc',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/longhorn/engine-binaries/',
                                     'type': ''},
                       'iscsi': None,
                       'name': 'engine-binaries',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 31, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 31, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://873f3276d9ddbcaec2eb46ace34255c8e33022da3e1f144732c2f73f01f40793',
                                    'image': 'longhornio/longhorn-instance-manager:v1_20200514',
                                    'image_id': 'docker-pullable://longhornio/longhorn-instance-manager@sha256:54c2c5e751bfb800a94eb3757a8b19e0cfdec9d415230b850930786dfbb721f4',
                                    'last_state': {'running': None,
                                                   'terminated': None,
                                                   'waiting': None},
                                    'name': 'engine-manager',
                                    'ready': True,
                                    'restart_count': 0,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 52, 30, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.191'}],
            'pod_ip': '10.244.2.191',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 23, 0, 52, 16, tzinfo=tzutc())}}

longhorn-system:::::::::::instance-manager-e-cfe72192
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 23, 0, 51, 55, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': None,
              'generation': None,
              'labels': {'longhorn.io/component': 'instance-manager',
                         'longhorn.io/instance-manager-image': 'imi-4fa5a52f',
                         'longhorn.io/instance-manager-type': 'engine',
                         'longhorn.io/node': 'node1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:labels': {'.': {},
                                                                            'f:longhorn.io/component': {},
                                                                            'f:longhorn.io/instance-manager-image': {},
                                                                            'f:longhorn.io/instance-manager-type': {},
                                                                            'f:longhorn.io/node': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"1da14577-0b97-46d0-aa6c-4044dc73ec10"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"engine-manager"}': {'.': {},
                                                                                                            'f:args': {},
                                                                                                            'f:image': {},
                                                                                                            'f:imagePullPolicy': {},
                                                                                                            'f:livenessProbe': {'.': {},
                                                                                                                                'f:exec': {'.': {},
                                                                                                                                           'f:command': {}},
                                                                                                                                'f:failureThreshold': {},
                                                                                                                                'f:initialDelaySeconds': {},
                                                                                                                                'f:periodSeconds': {},
                                                                                                                                'f:successThreshold': {},
                                                                                                                                'f:timeoutSeconds': {}},
                                                                                                            'f:name': {},
                                                                                                            'f:resources': {'.': {},
                                                                                                                            'f:requests': {'.': {},
                                                                                                                                           'f:cpu': {}}},
                                                                                                            'f:securityContext': {'.': {},
                                                                                                                                  'f:privileged': {}},
                                                                                                            'f:terminationMessagePath': {},
                                                                                                            'f:terminationMessagePolicy': {},
                                                                                                            'f:volumeMounts': {'.': {},
                                                                                                                               'k:{"mountPath":"/engine-binaries/"}': {'.': {},
                                                                                                                                                                       'f:mountPath': {},
                                                                                                                                                                       'f:mountPropagation': {},
                                                                                                                                                                       'f:name': {}},
                                                                                                                               'k:{"mountPath":"/host/dev"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:name': {}},
                                                                                                                               'k:{"mountPath":"/host/proc"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:nodeName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"dev"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}},
                                                                         'k:{"name":"engine-binaries"}': {'.': {},
                                                                                                          'f:hostPath': {'.': {},
                                                                                                                         'f:path': {},
                                                                                                                         'f:type': {}},
                                                                                                          'f:name': {}},
                                                                         'k:{"name":"proc"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}}}}},
                                  'manager': 'longhorn-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'.': {},
                                                                              'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"PodScheduled"}': {'.': {},
                                                                                                            'f:lastProbeTime': {},
                                                                                                            'f:lastTransitionTime': {},
                                                                                                            'f:status': {},
                                                                                                            'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.169"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 14, tzinfo=tzutc())}],
              'name': 'instance-manager-e-cfe72192',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'longhorn.io/v1beta1',
                                    'block_owner_deletion': None,
                                    'controller': None,
                                    'kind': 'InstanceManager',
                                    'name': 'instance-manager-e-cfe72192',
                                    'uid': '1da14577-0b97-46d0-aa6c-4044dc73ec10'}],
              'resource_version': '1814615',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/instance-manager-e-cfe72192',
              'uid': '9e445edc-1209-4daa-b7f2-c8ee91f60a08'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['engine-manager',
                                   '--debug',
                                   'daemon',
                                   '--listen',
                                   '0.0.0.0:8500'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'longhornio/longhorn-instance-manager:v1_20200514',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': {'command': ['/usr/local/bin/grpc_health_probe',
                                                                   '-addr=:8500']},
                                             'failure_threshold': 3,
                                             'http_get': None,
                                             'initial_delay_seconds': 3,
                                             'period_seconds': 5,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 1},
                          'name': 'engine-manager',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None,
                                        'requests': {'cpu': '250m'}},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/host/dev',
                                             'mount_propagation': None,
                                             'name': 'dev',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/host/proc',
                                             'mount_propagation': None,
                                             'name': 'proc',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/engine-binaries/',
                                             'mount_propagation': 'HostToContainer',
                                             'name': 'engine-binaries',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Never',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/dev', 'type': ''},
                       'iscsi': None,
                       'name': 'dev',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/proc', 'type': ''},
                       'iscsi': None,
                       'name': 'proc',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/longhorn/engine-binaries/',
                                     'type': ''},
                       'iscsi': None,
                       'name': 'engine-binaries',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 55, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 9, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 9, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 55, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://eb36f4a5f77cc40061ac279d5893a5be813ec568557a7768e6b90b6599d7673e',
                                    'image': 'longhornio/longhorn-instance-manager:v1_20200514',
                                    'image_id': 'docker-pullable://longhornio/longhorn-instance-manager@sha256:54c2c5e751bfb800a94eb3757a8b19e0cfdec9d415230b850930786dfbb721f4',
                                    'last_state': {'running': None,
                                                   'terminated': None,
                                                   'waiting': None},
                                    'name': 'engine-manager',
                                    'ready': True,
                                    'restart_count': 0,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 52, 8, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.169'}],
            'pod_ip': '10.244.1.169',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 23, 0, 51, 55, tzinfo=tzutc())}}

longhorn-system:::::::::::instance-manager-r-5d320cd4
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 23, 0, 51, 54, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': None,
              'generation': None,
              'labels': {'longhorn.io/component': 'instance-manager',
                         'longhorn.io/instance-manager-image': 'imi-4fa5a52f',
                         'longhorn.io/instance-manager-type': 'replica',
                         'longhorn.io/node': 'node1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:labels': {'.': {},
                                                                            'f:longhorn.io/component': {},
                                                                            'f:longhorn.io/instance-manager-image': {},
                                                                            'f:longhorn.io/instance-manager-type': {},
                                                                            'f:longhorn.io/node': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"6a6bd323-c43b-439b-8e80-d673830f86ce"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"replica-manager"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:livenessProbe': {'.': {},
                                                                                                                                 'f:exec': {'.': {},
                                                                                                                                            'f:command': {}},
                                                                                                                                 'f:failureThreshold': {},
                                                                                                                                 'f:initialDelaySeconds': {},
                                                                                                                                 'f:periodSeconds': {},
                                                                                                                                 'f:successThreshold': {},
                                                                                                                                 'f:timeoutSeconds': {}},
                                                                                                             'f:name': {},
                                                                                                             'f:resources': {'.': {},
                                                                                                                             'f:requests': {'.': {},
                                                                                                                                            'f:cpu': {}}},
                                                                                                             'f:securityContext': {'.': {},
                                                                                                                                   'f:privileged': {}},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {},
                                                                                                             'f:volumeMounts': {'.': {},
                                                                                                                                'k:{"mountPath":"/host"}': {'.': {},
                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                            'f:mountPropagation': {},
                                                                                                                                                            'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:nodeName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"host"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}}}}},
                                  'manager': 'longhorn-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 54, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'.': {},
                                                                              'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"PodScheduled"}': {'.': {},
                                                                                                            'f:lastProbeTime': {},
                                                                                                            'f:lastTransitionTime': {},
                                                                                                            'f:status': {},
                                                                                                            'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.168"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 10, tzinfo=tzutc())}],
              'name': 'instance-manager-r-5d320cd4',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'longhorn.io/v1beta1',
                                    'block_owner_deletion': None,
                                    'controller': None,
                                    'kind': 'InstanceManager',
                                    'name': 'instance-manager-r-5d320cd4',
                                    'uid': '6a6bd323-c43b-439b-8e80-d673830f86ce'}],
              'resource_version': '1814563',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/instance-manager-r-5d320cd4',
              'uid': '87bf4f1b-aefa-4dce-bac0-d73fd2c040d2'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['longhorn-instance-manager',
                                   '--debug',
                                   'daemon',
                                   '--listen',
                                   '0.0.0.0:8500'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'longhornio/longhorn-instance-manager:v1_20200514',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': {'command': ['/usr/local/bin/grpc_health_probe',
                                                                   '-addr=:8500']},
                                             'failure_threshold': 3,
                                             'http_get': None,
                                             'initial_delay_seconds': 3,
                                             'period_seconds': 5,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 1},
                          'name': 'replica-manager',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None,
                                        'requests': {'cpu': '250m'}},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/host',
                                             'mount_propagation': 'HostToContainer',
                                             'name': 'host',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Never',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/', 'type': ''},
                       'iscsi': None,
                       'name': 'host',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 9, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 9, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://c718488f3ebc1fa9e63261cc02d152198e985641933f45bf1a5ecf536e6ecfc1',
                                    'image': 'longhornio/longhorn-instance-manager:v1_20200514',
                                    'image_id': 'docker-pullable://longhornio/longhorn-instance-manager@sha256:54c2c5e751bfb800a94eb3757a8b19e0cfdec9d415230b850930786dfbb721f4',
                                    'last_state': {'running': None,
                                                   'terminated': None,
                                                   'waiting': None},
                                    'name': 'replica-manager',
                                    'ready': True,
                                    'restart_count': 0,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 52, 8, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.168'}],
            'pod_ip': '10.244.1.168',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 23, 0, 51, 54, tzinfo=tzutc())}}

longhorn-system:::::::::::instance-manager-r-bb0a1b77
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 23, 0, 52, 14, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': None,
              'generation': None,
              'labels': {'longhorn.io/component': 'instance-manager',
                         'longhorn.io/instance-manager-image': 'imi-4fa5a52f',
                         'longhorn.io/instance-manager-type': 'replica',
                         'longhorn.io/node': 'node2'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:labels': {'.': {},
                                                                            'f:longhorn.io/component': {},
                                                                            'f:longhorn.io/instance-manager-image': {},
                                                                            'f:longhorn.io/instance-manager-type': {},
                                                                            'f:longhorn.io/node': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"c9dbdb00-8fcb-4863-9d8b-1de133de6628"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"replica-manager"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:livenessProbe': {'.': {},
                                                                                                                                 'f:exec': {'.': {},
                                                                                                                                            'f:command': {}},
                                                                                                                                 'f:failureThreshold': {},
                                                                                                                                 'f:initialDelaySeconds': {},
                                                                                                                                 'f:periodSeconds': {},
                                                                                                                                 'f:successThreshold': {},
                                                                                                                                 'f:timeoutSeconds': {}},
                                                                                                             'f:name': {},
                                                                                                             'f:resources': {'.': {},
                                                                                                                             'f:requests': {'.': {},
                                                                                                                                            'f:cpu': {}}},
                                                                                                             'f:securityContext': {'.': {},
                                                                                                                                   'f:privileged': {}},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {},
                                                                                                             'f:volumeMounts': {'.': {},
                                                                                                                                'k:{"mountPath":"/host"}': {'.': {},
                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                            'f:mountPropagation': {},
                                                                                                                                                            'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:nodeName': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"host"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}}}}},
                                  'manager': 'longhorn-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 14, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'.': {},
                                                                              'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"PodScheduled"}': {'.': {},
                                                                                                            'f:lastProbeTime': {},
                                                                                                            'f:lastTransitionTime': {},
                                                                                                            'f:status': {},
                                                                                                            'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.192"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 31, tzinfo=tzutc())}],
              'name': 'instance-manager-r-bb0a1b77',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'longhorn.io/v1beta1',
                                    'block_owner_deletion': None,
                                    'controller': None,
                                    'kind': 'InstanceManager',
                                    'name': 'instance-manager-r-bb0a1b77',
                                    'uid': 'c9dbdb00-8fcb-4863-9d8b-1de133de6628'}],
              'resource_version': '1814702',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/instance-manager-r-bb0a1b77',
              'uid': '26e88ddf-76b6-48e9-9e4a-10247413169f'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['longhorn-instance-manager',
                                   '--debug',
                                   'daemon',
                                   '--listen',
                                   '0.0.0.0:8500'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'longhornio/longhorn-instance-manager:v1_20200514',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': {'command': ['/usr/local/bin/grpc_health_probe',
                                                                   '-addr=:8500']},
                                             'failure_threshold': 3,
                                             'http_get': None,
                                             'initial_delay_seconds': 3,
                                             'period_seconds': 5,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 1},
                          'name': 'replica-manager',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None,
                                        'requests': {'cpu': '250m'}},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/host',
                                             'mount_propagation': 'HostToContainer',
                                             'name': 'host',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Never',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/', 'type': ''},
                       'iscsi': None,
                       'name': 'host',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 31, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 31, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 52, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://006d7e15a07735643243e5c44a532546c21bf2b5f725ed58a76f18f9c18fcdb8',
                                    'image': 'longhornio/longhorn-instance-manager:v1_20200514',
                                    'image_id': 'docker-pullable://longhornio/longhorn-instance-manager@sha256:54c2c5e751bfb800a94eb3757a8b19e0cfdec9d415230b850930786dfbb721f4',
                                    'last_state': {'running': None,
                                                   'terminated': None,
                                                   'waiting': None},
                                    'name': 'replica-manager',
                                    'ready': True,
                                    'restart_count': 0,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 23, 0, 52, 30, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.192'}],
            'pod_ip': '10.244.2.192',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 23, 0, 52, 16, tzinfo=tzutc())}}

longhorn-system:::::::::::longhorn-csi-plugin-k77tx
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'longhorn-csi-plugin-',
              'generation': None,
              'labels': {'app': 'longhorn-csi-plugin',
                         'controller-revision-hash': '6694789b49',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"f46c4ac6-6dc4-4c88-8e18-7afe5457c999"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"longhorn-csi-plugin"}': {'.': {},
                                                                                                                 'f:args': {},
                                                                                                                 'f:env': {'.': {},
                                                                                                                           'k:{"name":"CSI_ENDPOINT"}': {'.': {},
                                                                                                                                                         'f:name': {},
                                                                                                                                                         'f:value': {}},
                                                                                                                           'k:{"name":"NODE_ID"}': {'.': {},
                                                                                                                                                    'f:name': {},
                                                                                                                                                    'f:valueFrom': {'.': {},
                                                                                                                                                                    'f:fieldRef': {'.': {},
                                                                                                                                                                                   'f:apiVersion': {},
                                                                                                                                                                                   'f:fieldPath': {}}}}},
                                                                                                                 'f:image': {},
                                                                                                                 'f:imagePullPolicy': {},
                                                                                                                 'f:lifecycle': {'.': {},
                                                                                                                                 'f:preStop': {'.': {},
                                                                                                                                               'f:exec': {'.': {},
                                                                                                                                                          'f:command': {}}}},
                                                                                                                 'f:name': {},
                                                                                                                 'f:resources': {},
                                                                                                                 'f:securityContext': {'.': {},
                                                                                                                                       'f:allowPrivilegeEscalation': {},
                                                                                                                                       'f:capabilities': {'.': {},
                                                                                                                                                          'f:add': {}},
                                                                                                                                       'f:privileged': {}},
                                                                                                                 'f:terminationMessagePath': {},
                                                                                                                 'f:terminationMessagePolicy': {},
                                                                                                                 'f:volumeMounts': {'.': {},
                                                                                                                                    'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {}},
                                                                                                                                    'k:{"mountPath":"/dev"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:name': {}},
                                                                                                                                    'k:{"mountPath":"/lib/modules"}': {'.': {},
                                                                                                                                                                       'f:mountPath': {},
                                                                                                                                                                       'f:name': {},
                                                                                                                                                                       'f:readOnly': {}},
                                                                                                                                    'k:{"mountPath":"/sys"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:name': {}},
                                                                                                                                    'k:{"mountPath":"/var/lib/kubelet/plugins/kubernetes.io/csi"}': {'.': {},
                                                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                                                     'f:mountPropagation': {},
                                                                                                                                                                                                     'f:name': {}},
                                                                                                                                    'k:{"mountPath":"/var/lib/kubelet/pods"}': {'.': {},
                                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                                'f:mountPropagation': {},
                                                                                                                                                                                'f:name': {}}}},
                                                                            'k:{"name":"node-driver-registrar"}': {'.': {},
                                                                                                                   'f:args': {},
                                                                                                                   'f:env': {'.': {},
                                                                                                                             'k:{"name":"ADDRESS"}': {'.': {},
                                                                                                                                                      'f:name': {},
                                                                                                                                                      'f:value': {}}},
                                                                                                                   'f:image': {},
                                                                                                                   'f:imagePullPolicy': {},
                                                                                                                   'f:lifecycle': {'.': {},
                                                                                                                                   'f:preStop': {'.': {},
                                                                                                                                                 'f:exec': {'.': {},
                                                                                                                                                            'f:command': {}}}},
                                                                                                                   'f:name': {},
                                                                                                                   'f:resources': {},
                                                                                                                   'f:securityContext': {'.': {},
                                                                                                                                         'f:privileged': {}},
                                                                                                                   'f:terminationMessagePath': {},
                                                                                                                   'f:terminationMessagePolicy': {},
                                                                                                                   'f:volumeMounts': {'.': {},
                                                                                                                                      'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                  'f:name': {}},
                                                                                                                                      'k:{"mountPath":"/registration"}': {'.': {},
                                                                                                                                                                          'f:mountPath': {},
                                                                                                                                                                          'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"host-dev"}': {'.': {},
                                                                                                   'f:hostPath': {'.': {},
                                                                                                                  'f:path': {},
                                                                                                                  'f:type': {}},
                                                                                                   'f:name': {}},
                                                                         'k:{"name":"host-sys"}': {'.': {},
                                                                                                   'f:hostPath': {'.': {},
                                                                                                                  'f:path': {},
                                                                                                                  'f:type': {}},
                                                                                                   'f:name': {}},
                                                                         'k:{"name":"kubernetes-csi-dir"}': {'.': {},
                                                                                                             'f:hostPath': {'.': {},
                                                                                                                            'f:path': {},
                                                                                                                            'f:type': {}},
                                                                                                             'f:name': {}},
                                                                         'k:{"name":"lib-modules"}': {'.': {},
                                                                                                      'f:hostPath': {'.': {},
                                                                                                                     'f:path': {},
                                                                                                                     'f:type': {}},
                                                                                                      'f:name': {}},
                                                                         'k:{"name":"pods-mount-dir"}': {'.': {},
                                                                                                         'f:hostPath': {'.': {},
                                                                                                                        'f:path': {},
                                                                                                                        'f:type': {}},
                                                                                                         'f:name': {}},
                                                                         'k:{"name":"registration-dir"}': {'.': {},
                                                                                                           'f:hostPath': {'.': {},
                                                                                                                          'f:path': {},
                                                                                                                          'f:type': {}},
                                                                                                           'f:name': {}},
                                                                         'k:{"name":"socket-dir"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 26, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.182"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 8, tzinfo=tzutc())}],
              'name': 'longhorn-csi-plugin-k77tx',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'longhorn-csi-plugin',
                                    'uid': 'f46c4ac6-6dc4-4c88-8e18-7afe5457c999'}],
              'resource_version': '1814534',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/longhorn-csi-plugin-k77tx',
              'uid': '9111d290-0f5b-4bc4-8a56-10880afc2fb8'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node2']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': ['--v=5',
                                   '--csi-address=$(ADDRESS)',
                                   '--kubelet-registration-path=/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io/csi.sock'],
                          'command': None,
                          'env': [{'name': 'ADDRESS',
                                   'value': '/csi/csi.sock',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'longhornio/csi-node-driver-registrar:v1.2.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': {'post_start': None,
                                        'pre_stop': {'_exec': {'command': ['/bin/sh',
                                                                           '-c',
                                                                           'rm '
                                                                           '-rf '
                                                                           '/registration/driver.longhorn.io '
                                                                           '/registration/driver.longhorn.io-reg.sock '
                                                                           '/csi//*']},
                                                     'http_get': None,
                                                     'tcp_socket': None}},
                          'liveness_probe': None,
                          'name': 'node-driver-registrar',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/registration',
                                             'mount_propagation': None,
                                             'name': 'registration-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['longhorn-manager',
                                   '-d',
                                   'csi',
                                   '--nodeid=$(NODE_ID)',
                                   '--endpoint=$(CSI_ENDPOINT)',
                                   '--drivername=driver.longhorn.io',
                                   '--manager-url=http://longhorn-backend:9500/v1'],
                          'command': None,
                          'env': [{'name': 'NODE_ID',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.nodeName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'CSI_ENDPOINT',
                                   'value': 'unix:///csi/csi.sock',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'longhornio/longhorn-manager:v1.0.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': {'post_start': None,
                                        'pre_stop': {'_exec': {'command': ['/bin/sh',
                                                                           '-c',
                                                                           'rm '
                                                                           '-f '
                                                                           '/csi//*']},
                                                     'http_get': None,
                                                     'tcp_socket': None}},
                          'liveness_probe': None,
                          'name': 'longhorn-csi-plugin',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': True,
                                               'capabilities': {'add': ['SYS_ADMIN'],
                                                                'drop': None},
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/lib/kubelet/plugins/kubernetes.io/csi',
                                             'mount_propagation': 'Bidirectional',
                                             'name': 'kubernetes-csi-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/lib/kubelet/pods',
                                             'mount_propagation': 'Bidirectional',
                                             'name': 'pods-mount-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/dev',
                                             'mount_propagation': None,
                                             'name': 'host-dev',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/sys',
                                             'mount_propagation': None,
                                             'name': 'host-sys',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/lib/modules',
                                             'mount_propagation': None,
                                             'name': 'lib-modules',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/plugins/kubernetes.io/csi',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'kubernetes-csi-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/plugins_registry',
                                     'type': 'Directory'},
                       'iscsi': None,
                       'name': 'registration-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'socket-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/pods',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'pods-mount-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/dev', 'type': ''},
                       'iscsi': None,
                       'name': 'host-dev',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/sys', 'type': ''},
                       'iscsi': None,
                       'name': 'host-sys',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/lib/modules', 'type': ''},
                       'iscsi': None,
                       'name': 'lib-modules',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 6, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 6, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://4aabfd2ee03d8a29ba03e1cadecc5082fb1886905c7a8d018e076d5013112263',
                                    'image': 'longhornio/longhorn-manager:v1.0.2',
                                    'image_id': 'docker-pullable://longhornio/longhorn-manager@sha256:a0ef6144f543000ff7c6ca2a7aa095e788467fe5e1aafc3f774fbfde752a7042',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://8cff8195c38a0e1428149766381e45621c0709d1dc44ef30054b3a8deefb3f8a',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 45, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'longhorn-csi-plugin',
                                    'ready': True,
                                    'restart_count': 5,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 4, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://3c7cd605985f90ab0857c1eac3d7eb08e45f26d38f0fe06c3270f3758c8a8924',
                                    'image': 'longhornio/csi-node-driver-registrar:v1.2.0',
                                    'image_id': 'docker-pullable://longhornio/csi-node-driver-registrar@sha256:273175c272162d480d06849e09e6e3cdb0245239e3a82df6630df3bc059c6571',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://7e7939cd8129d531ff88b66f276a199d2e516eb2415801fe4170283a1cf5bd3d',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 15, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'node-driver-registrar',
                                    'ready': True,
                                    'restart_count': 3,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 3, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.182'}],
            'pod_ip': '10.244.2.182',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc())}}

longhorn-system:::::::::::longhorn-csi-plugin-lbbgk
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'longhorn-csi-plugin-',
              'generation': None,
              'labels': {'app': 'longhorn-csi-plugin',
                         'controller-revision-hash': '6694789b49',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"f46c4ac6-6dc4-4c88-8e18-7afe5457c999"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"longhorn-csi-plugin"}': {'.': {},
                                                                                                                 'f:args': {},
                                                                                                                 'f:env': {'.': {},
                                                                                                                           'k:{"name":"CSI_ENDPOINT"}': {'.': {},
                                                                                                                                                         'f:name': {},
                                                                                                                                                         'f:value': {}},
                                                                                                                           'k:{"name":"NODE_ID"}': {'.': {},
                                                                                                                                                    'f:name': {},
                                                                                                                                                    'f:valueFrom': {'.': {},
                                                                                                                                                                    'f:fieldRef': {'.': {},
                                                                                                                                                                                   'f:apiVersion': {},
                                                                                                                                                                                   'f:fieldPath': {}}}}},
                                                                                                                 'f:image': {},
                                                                                                                 'f:imagePullPolicy': {},
                                                                                                                 'f:lifecycle': {'.': {},
                                                                                                                                 'f:preStop': {'.': {},
                                                                                                                                               'f:exec': {'.': {},
                                                                                                                                                          'f:command': {}}}},
                                                                                                                 'f:name': {},
                                                                                                                 'f:resources': {},
                                                                                                                 'f:securityContext': {'.': {},
                                                                                                                                       'f:allowPrivilegeEscalation': {},
                                                                                                                                       'f:capabilities': {'.': {},
                                                                                                                                                          'f:add': {}},
                                                                                                                                       'f:privileged': {}},
                                                                                                                 'f:terminationMessagePath': {},
                                                                                                                 'f:terminationMessagePolicy': {},
                                                                                                                 'f:volumeMounts': {'.': {},
                                                                                                                                    'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                'f:name': {}},
                                                                                                                                    'k:{"mountPath":"/dev"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:name': {}},
                                                                                                                                    'k:{"mountPath":"/lib/modules"}': {'.': {},
                                                                                                                                                                       'f:mountPath': {},
                                                                                                                                                                       'f:name': {},
                                                                                                                                                                       'f:readOnly': {}},
                                                                                                                                    'k:{"mountPath":"/sys"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:name': {}},
                                                                                                                                    'k:{"mountPath":"/var/lib/kubelet/plugins/kubernetes.io/csi"}': {'.': {},
                                                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                                                     'f:mountPropagation': {},
                                                                                                                                                                                                     'f:name': {}},
                                                                                                                                    'k:{"mountPath":"/var/lib/kubelet/pods"}': {'.': {},
                                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                                'f:mountPropagation': {},
                                                                                                                                                                                'f:name': {}}}},
                                                                            'k:{"name":"node-driver-registrar"}': {'.': {},
                                                                                                                   'f:args': {},
                                                                                                                   'f:env': {'.': {},
                                                                                                                             'k:{"name":"ADDRESS"}': {'.': {},
                                                                                                                                                      'f:name': {},
                                                                                                                                                      'f:value': {}}},
                                                                                                                   'f:image': {},
                                                                                                                   'f:imagePullPolicy': {},
                                                                                                                   'f:lifecycle': {'.': {},
                                                                                                                                   'f:preStop': {'.': {},
                                                                                                                                                 'f:exec': {'.': {},
                                                                                                                                                            'f:command': {}}}},
                                                                                                                   'f:name': {},
                                                                                                                   'f:resources': {},
                                                                                                                   'f:securityContext': {'.': {},
                                                                                                                                         'f:privileged': {}},
                                                                                                                   'f:terminationMessagePath': {},
                                                                                                                   'f:terminationMessagePolicy': {},
                                                                                                                   'f:volumeMounts': {'.': {},
                                                                                                                                      'k:{"mountPath":"/csi/"}': {'.': {},
                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                  'f:name': {}},
                                                                                                                                      'k:{"mountPath":"/registration"}': {'.': {},
                                                                                                                                                                          'f:mountPath': {},
                                                                                                                                                                          'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"host-dev"}': {'.': {},
                                                                                                   'f:hostPath': {'.': {},
                                                                                                                  'f:path': {},
                                                                                                                  'f:type': {}},
                                                                                                   'f:name': {}},
                                                                         'k:{"name":"host-sys"}': {'.': {},
                                                                                                   'f:hostPath': {'.': {},
                                                                                                                  'f:path': {},
                                                                                                                  'f:type': {}},
                                                                                                   'f:name': {}},
                                                                         'k:{"name":"kubernetes-csi-dir"}': {'.': {},
                                                                                                             'f:hostPath': {'.': {},
                                                                                                                            'f:path': {},
                                                                                                                            'f:type': {}},
                                                                                                             'f:name': {}},
                                                                         'k:{"name":"lib-modules"}': {'.': {},
                                                                                                      'f:hostPath': {'.': {},
                                                                                                                     'f:path': {},
                                                                                                                     'f:type': {}},
                                                                                                      'f:name': {}},
                                                                         'k:{"name":"pods-mount-dir"}': {'.': {},
                                                                                                         'f:hostPath': {'.': {},
                                                                                                                        'f:path': {},
                                                                                                                        'f:type': {}},
                                                                                                         'f:name': {}},
                                                                         'k:{"name":"registration-dir"}': {'.': {},
                                                                                                           'f:hostPath': {'.': {},
                                                                                                                          'f:path': {},
                                                                                                                          'f:type': {}},
                                                                                                           'f:name': {}},
                                                                         'k:{"name":"socket-dir"}': {'.': {},
                                                                                                     'f:hostPath': {'.': {},
                                                                                                                    'f:path': {},
                                                                                                                    'f:type': {}},
                                                                                                     'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.147"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 50, tzinfo=tzutc())}],
              'name': 'longhorn-csi-plugin-lbbgk',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'longhorn-csi-plugin',
                                    'uid': 'f46c4ac6-6dc4-4c88-8e18-7afe5457c999'}],
              'resource_version': '1814400',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/longhorn-csi-plugin-lbbgk',
              'uid': '683cd1dd-ec61-4901-80a9-700302679fca'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node1']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': ['--v=5',
                                   '--csi-address=$(ADDRESS)',
                                   '--kubelet-registration-path=/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io/csi.sock'],
                          'command': None,
                          'env': [{'name': 'ADDRESS',
                                   'value': '/csi/csi.sock',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'longhornio/csi-node-driver-registrar:v1.2.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': {'post_start': None,
                                        'pre_stop': {'_exec': {'command': ['/bin/sh',
                                                                           '-c',
                                                                           'rm '
                                                                           '-rf '
                                                                           '/registration/driver.longhorn.io '
                                                                           '/registration/driver.longhorn.io-reg.sock '
                                                                           '/csi//*']},
                                                     'http_get': None,
                                                     'tcp_socket': None}},
                          'liveness_probe': None,
                          'name': 'node-driver-registrar',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/registration',
                                             'mount_propagation': None,
                                             'name': 'registration-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['longhorn-manager',
                                   '-d',
                                   'csi',
                                   '--nodeid=$(NODE_ID)',
                                   '--endpoint=$(CSI_ENDPOINT)',
                                   '--drivername=driver.longhorn.io',
                                   '--manager-url=http://longhorn-backend:9500/v1'],
                          'command': None,
                          'env': [{'name': 'NODE_ID',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.nodeName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'CSI_ENDPOINT',
                                   'value': 'unix:///csi/csi.sock',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'longhornio/longhorn-manager:v1.0.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': {'post_start': None,
                                        'pre_stop': {'_exec': {'command': ['/bin/sh',
                                                                           '-c',
                                                                           'rm '
                                                                           '-f '
                                                                           '/csi//*']},
                                                     'http_get': None,
                                                     'tcp_socket': None}},
                          'liveness_probe': None,
                          'name': 'longhorn-csi-plugin',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': True,
                                               'capabilities': {'add': ['SYS_ADMIN'],
                                                                'drop': None},
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/lib/kubelet/plugins/kubernetes.io/csi',
                                             'mount_propagation': 'Bidirectional',
                                             'name': 'kubernetes-csi-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/csi/',
                                             'mount_propagation': None,
                                             'name': 'socket-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/lib/kubelet/pods',
                                             'mount_propagation': 'Bidirectional',
                                             'name': 'pods-mount-dir',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/dev',
                                             'mount_propagation': None,
                                             'name': 'host-dev',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/sys',
                                             'mount_propagation': None,
                                             'name': 'host-sys',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/lib/modules',
                                             'mount_propagation': None,
                                             'name': 'lib-modules',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/plugins/kubernetes.io/csi',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'kubernetes-csi-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/plugins_registry',
                                     'type': 'Directory'},
                       'iscsi': None,
                       'name': 'registration-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/obsoleted-longhorn-plugins/driver.longhorn.io',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'socket-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/kubelet/pods',
                                     'type': 'DirectoryOrCreate'},
                       'iscsi': None,
                       'name': 'pods-mount-dir',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/dev', 'type': ''},
                       'iscsi': None,
                       'name': 'host-dev',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/sys', 'type': ''},
                       'iscsi': None,
                       'name': 'host-sys',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/lib/modules', 'type': ''},
                       'iscsi': None,
                       'name': 'lib-modules',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 32, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 32, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://5a6574adcda7e23c25f55cbf86fd23812b6bd7e4dcdec2d06441c65ca9d5bb61',
                                    'image': 'longhornio/longhorn-manager:v1.0.2',
                                    'image_id': 'docker-pullable://longhornio/longhorn-manager@sha256:a0ef6144f543000ff7c6ca2a7aa095e788467fe5e1aafc3f774fbfde752a7042',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://45497ae8f497fa7d98f487f7a62f544de9eb5c0bf7cb6c45f04b0d5a86c2c526',
                                                                  'exit_code': 1,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 14, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 20, 13, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'longhorn-csi-plugin',
                                    'ready': True,
                                    'restart_count': 8,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 32, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://b40b4881d1684199840709128156539774809c8ed8d11d8bddc999415883d9f4',
                                    'image': 'longhornio/csi-node-driver-registrar:v1.2.0',
                                    'image_id': 'docker-pullable://longhornio/csi-node-driver-registrar@sha256:273175c272162d480d06849e09e6e3cdb0245239e3a82df6630df3bc059c6571',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://211810f14f10239e89927eb558a0f0b8de7d3403a1187057cf27cf20ee2f9567',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 44, 56, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'node-driver-registrar',
                                    'ready': True,
                                    'restart_count': 4,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 8, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.147'}],
            'pod_ip': '10.244.1.147',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 35, 54, tzinfo=tzutc())}}

longhorn-system:::::::::::longhorn-driver-deployer-7fc4667b6-xs2n2
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 1, 4, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'longhorn-driver-deployer-7fc4667b6-',
              'generation': None,
              'labels': {'app': 'longhorn-driver-deployer',
                         'app.kubernetes.io/instance': 'longhorn-system',
                         'app.kubernetes.io/managed-by': 'Tiller',
                         'app.kubernetes.io/name': 'longhorn',
                         'app.kubernetes.io/version': 'v1.0.2',
                         'helm.sh/chart': 'longhorn-1.0.2',
                         'pod-template-hash': '7fc4667b6'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:app.kubernetes.io/instance': {},
                                                                            'f:app.kubernetes.io/managed-by': {},
                                                                            'f:app.kubernetes.io/name': {},
                                                                            'f:app.kubernetes.io/version': {},
                                                                            'f:helm.sh/chart': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"60350b0e-3757-4320-a139-8f165d79375f"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"longhorn-driver-deployer"}': {'.': {},
                                                                                                                      'f:command': {},
                                                                                                                      'f:env': {'.': {},
                                                                                                                                'k:{"name":"CSI_ATTACHER_IMAGE"}': {'.': {},
                                                                                                                                                                    'f:name': {},
                                                                                                                                                                    'f:value': {}},
                                                                                                                                'k:{"name":"CSI_NODE_DRIVER_REGISTRAR_IMAGE"}': {'.': {},
                                                                                                                                                                                 'f:name': {},
                                                                                                                                                                                 'f:value': {}},
                                                                                                                                'k:{"name":"CSI_PROVISIONER_IMAGE"}': {'.': {},
                                                                                                                                                                       'f:name': {},
                                                                                                                                                                       'f:value': {}},
                                                                                                                                'k:{"name":"CSI_RESIZER_IMAGE"}': {'.': {},
                                                                                                                                                                   'f:name': {},
                                                                                                                                                                   'f:value': {}},
                                                                                                                                'k:{"name":"NODE_NAME"}': {'.': {},
                                                                                                                                                           'f:name': {},
                                                                                                                                                           'f:valueFrom': {'.': {},
                                                                                                                                                                           'f:fieldRef': {'.': {},
                                                                                                                                                                                          'f:apiVersion': {},
                                                                                                                                                                                          'f:fieldPath': {}}}},
                                                                                                                                'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                               'f:name': {},
                                                                                                                                                               'f:valueFrom': {'.': {},
                                                                                                                                                                               'f:fieldRef': {'.': {},
                                                                                                                                                                                              'f:apiVersion': {},
                                                                                                                                                                                              'f:fieldPath': {}}}},
                                                                                                                                'k:{"name":"SERVICE_ACCOUNT"}': {'.': {},
                                                                                                                                                                 'f:name': {},
                                                                                                                                                                 'f:valueFrom': {'.': {},
                                                                                                                                                                                 'f:fieldRef': {'.': {},
                                                                                                                                                                                                'f:apiVersion': {},
                                                                                                                                                                                                'f:fieldPath': {}}}}},
                                                                                                                      'f:image': {},
                                                                                                                      'f:imagePullPolicy': {},
                                                                                                                      'f:name': {},
                                                                                                                      'f:resources': {},
                                                                                                                      'f:terminationMessagePath': {},
                                                                                                                      'f:terminationMessagePolicy': {}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:initContainers': {'.': {},
                                                                                'k:{"name":"wait-longhorn-manager"}': {'.': {},
                                                                                                                       'f:command': {},
                                                                                                                       'f:image': {},
                                                                                                                       'f:imagePullPolicy': {},
                                                                                                                       'f:name': {},
                                                                                                                       'f:resources': {},
                                                                                                                       'f:terminationMessagePath': {},
                                                                                                                       'f:terminationMessagePolicy': {}}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {'.': {},
                                                                                 'f:runAsUser': {}},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 25, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:initContainerStatuses': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.179"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 51, tzinfo=tzutc())}],
              'name': 'longhorn-driver-deployer-7fc4667b6-xs2n2',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'longhorn-driver-deployer-7fc4667b6',
                                    'uid': '60350b0e-3757-4320-a139-8f165d79375f'}],
              'resource_version': '1814422',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/longhorn-driver-deployer-7fc4667b6-xs2n2',
              'uid': 'a40ad2f4-6efd-48ef-a838-89e7e11eee50'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': ['longhorn-manager',
                                      '-d',
                                      'deploy-driver',
                                      '--manager-image',
                                      'longhornio/longhorn-manager:v1.0.2',
                                      '--manager-url',
                                      'http://longhorn-backend:9500/v1'],
                          'env': [{'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'NODE_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.nodeName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'SERVICE_ACCOUNT',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.serviceAccountName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'CSI_ATTACHER_IMAGE',
                                   'value': 'longhornio/csi-attacher:v2.0.0',
                                   'value_from': None},
                                  {'name': 'CSI_PROVISIONER_IMAGE',
                                   'value': 'longhornio/csi-provisioner:v1.4.0',
                                   'value_from': None},
                                  {'name': 'CSI_NODE_DRIVER_REGISTRAR_IMAGE',
                                   'value': 'longhornio/csi-node-driver-registrar:v1.2.0',
                                   'value_from': None},
                                  {'name': 'CSI_RESIZER_IMAGE',
                                   'value': 'longhornio/csi-resizer:v0.3.0',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'longhornio/longhorn-manager:v1.0.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'longhorn-driver-deployer',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': [{'args': None,
                               'command': ['sh',
                                           '-c',
                                           'while [ $(curl -m 1 -s -o '
                                           '/dev/null -w "%{http_code}" '
                                           'http://longhorn-backend:9500/v1) '
                                           '!= "200" ]; do echo waiting; sleep '
                                           '2; done'],
                               'env': None,
                               'env_from': None,
                               'image': 'longhornio/longhorn-manager:v1.0.2',
                               'image_pull_policy': 'IfNotPresent',
                               'lifecycle': None,
                               'liveness_probe': None,
                               'name': 'wait-longhorn-manager',
                               'ports': None,
                               'readiness_probe': None,
                               'resources': {'limits': None, 'requests': None},
                               'security_context': None,
                               'startup_probe': None,
                               'stdin': None,
                               'stdin_once': None,
                               'termination_message_path': '/dev/termination-log',
                               'termination_message_policy': 'File',
                               'tty': None,
                               'volume_devices': None,
                               'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                                  'mount_propagation': None,
                                                  'name': 'longhorn-service-account-token-dj78d',
                                                  'read_only': True,
                                                  'sub_path': None,
                                                  'sub_path_expr': None}],
                               'working_dir': None}],
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': 0,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 15, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 1, 5, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://97d4656a6f2970b11d3b25d12cce62ea5b5803d04efba97d58a28496ff30c710',
                                    'image': 'longhornio/longhorn-manager:v1.0.2',
                                    'image_id': 'docker-pullable://longhornio/longhorn-manager@sha256:a0ef6144f543000ff7c6ca2a7aa095e788467fe5e1aafc3f774fbfde752a7042',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://04bb6cced8a8bfd869a0bda9f3abf0ca25eda2f47fd0dbedcce46c1c1c716110',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 38, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'longhorn-driver-deployer',
                                    'ready': True,
                                    'restart_count': 4,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 16, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': [{'container_id': 'docker://1839ed4613b98904a19f714f9075bfa02bcafe05fbe9e79301fc5e38292fc5c8',
                                         'image': 'longhornio/longhorn-manager:v1.0.2',
                                         'image_id': 'docker-pullable://longhornio/longhorn-manager@sha256:a0ef6144f543000ff7c6ca2a7aa095e788467fe5e1aafc3f774fbfde752a7042',
                                         'last_state': {'running': None,
                                                        'terminated': None,
                                                        'waiting': None},
                                         'name': 'wait-longhorn-manager',
                                         'ready': True,
                                         'restart_count': 0,
                                         'started': None,
                                         'state': {'running': None,
                                                   'terminated': {'container_id': 'docker://1839ed4613b98904a19f714f9075bfa02bcafe05fbe9e79301fc5e38292fc5c8',
                                                                  'exit_code': 0,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 21, 14, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Completed',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 21, 4, tzinfo=tzutc())},
                                                   'waiting': None}}],
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.179'}],
            'pod_ip': '10.244.2.179',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 0, 59, tzinfo=tzutc())}}

longhorn-system:::::::::::longhorn-manager-k6lf6
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 1, 4, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'longhorn-manager-',
              'generation': None,
              'labels': {'app': 'longhorn-manager',
                         'app.kubernetes.io/instance': 'longhorn-system',
                         'app.kubernetes.io/managed-by': 'Tiller',
                         'app.kubernetes.io/name': 'longhorn',
                         'app.kubernetes.io/version': 'v1.0.2',
                         'controller-revision-hash': 'c5959f4d',
                         'helm.sh/chart': 'longhorn-1.0.2',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:app.kubernetes.io/instance': {},
                                                                            'f:app.kubernetes.io/managed-by': {},
                                                                            'f:app.kubernetes.io/name': {},
                                                                            'f:app.kubernetes.io/version': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:helm.sh/chart': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"fbd4bde2-4bf8-442c-8583-3bf6ce5dbf8b"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"longhorn-manager"}': {'.': {},
                                                                                                              'f:command': {},
                                                                                                              'f:env': {'.': {},
                                                                                                                        'k:{"name":"DEFAULT_SETTING_PATH"}': {'.': {},
                                                                                                                                                              'f:name': {},
                                                                                                                                                              'f:value': {}},
                                                                                                                        'k:{"name":"NODE_NAME"}': {'.': {},
                                                                                                                                                   'f:name': {},
                                                                                                                                                   'f:valueFrom': {'.': {},
                                                                                                                                                                   'f:fieldRef': {'.': {},
                                                                                                                                                                                  'f:apiVersion': {},
                                                                                                                                                                                  'f:fieldPath': {}}}},
                                                                                                                        'k:{"name":"POD_IP"}': {'.': {},
                                                                                                                                                'f:name': {},
                                                                                                                                                'f:valueFrom': {'.': {},
                                                                                                                                                                'f:fieldRef': {'.': {},
                                                                                                                                                                               'f:apiVersion': {},
                                                                                                                                                                               'f:fieldPath': {}}}},
                                                                                                                        'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                       'f:name': {},
                                                                                                                                                       'f:valueFrom': {'.': {},
                                                                                                                                                                       'f:fieldRef': {'.': {},
                                                                                                                                                                                      'f:apiVersion': {},
                                                                                                                                                                                      'f:fieldPath': {}}}}},
                                                                                                              'f:image': {},
                                                                                                              'f:imagePullPolicy': {},
                                                                                                              'f:name': {},
                                                                                                              'f:ports': {'.': {},
                                                                                                                          'k:{"containerPort":9500,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                        'f:containerPort': {},
                                                                                                                                                                        'f:name': {},
                                                                                                                                                                        'f:protocol': {}}},
                                                                                                              'f:readinessProbe': {'.': {},
                                                                                                                                   'f:failureThreshold': {},
                                                                                                                                   'f:periodSeconds': {},
                                                                                                                                   'f:successThreshold': {},
                                                                                                                                   'f:tcpSocket': {'.': {},
                                                                                                                                                   'f:port': {}},
                                                                                                                                   'f:timeoutSeconds': {}},
                                                                                                              'f:resources': {},
                                                                                                              'f:securityContext': {'.': {},
                                                                                                                                    'f:privileged': {}},
                                                                                                              'f:terminationMessagePath': {},
                                                                                                              'f:terminationMessagePolicy': {},
                                                                                                              'f:volumeMounts': {'.': {},
                                                                                                                                 'k:{"mountPath":"/host/dev/"}': {'.': {},
                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                  'f:name': {}},
                                                                                                                                 'k:{"mountPath":"/host/proc/"}': {'.': {},
                                                                                                                                                                   'f:mountPath': {},
                                                                                                                                                                   'f:name': {}},
                                                                                                                                 'k:{"mountPath":"/var/lib/longhorn-setting/"}': {'.': {},
                                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                                  'f:name': {}},
                                                                                                                                 'k:{"mountPath":"/var/lib/longhorn/"}': {'.': {},
                                                                                                                                                                          'f:mountPath': {},
                                                                                                                                                                          'f:mountPropagation': {},
                                                                                                                                                                          'f:name': {}},
                                                                                                                                 'k:{"mountPath":"/var/run/"}': {'.': {},
                                                                                                                                                                 'f:mountPath': {},
                                                                                                                                                                 'f:mountPropagation': {},
                                                                                                                                                                 'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"dev"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}},
                                                                         'k:{"name":"longhorn"}': {'.': {},
                                                                                                   'f:hostPath': {'.': {},
                                                                                                                  'f:path': {},
                                                                                                                  'f:type': {}},
                                                                                                   'f:name': {}},
                                                                         'k:{"name":"longhorn-default-setting"}': {'.': {},
                                                                                                                   'f:configMap': {'.': {},
                                                                                                                                   'f:defaultMode': {},
                                                                                                                                   'f:name': {}},
                                                                                                                   'f:name': {}},
                                                                         'k:{"name":"proc"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}},
                                                                         'k:{"name":"varrun"}': {'.': {},
                                                                                                 'f:hostPath': {'.': {},
                                                                                                                'f:path': {},
                                                                                                                'f:type': {}},
                                                                                                 'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.153"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 48, tzinfo=tzutc())}],
              'name': 'longhorn-manager-k6lf6',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'longhorn-manager',
                                    'uid': 'fbd4bde2-4bf8-442c-8583-3bf6ce5dbf8b'}],
              'resource_version': '1814364',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/longhorn-manager-k6lf6',
              'uid': 'c558d889-80d8-4d4c-911a-b97107657dd0'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node1']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': ['longhorn-manager',
                                      '-d',
                                      'daemon',
                                      '--engine-image',
                                      'longhornio/longhorn-engine:v1.0.2',
                                      '--instance-manager-image',
                                      'longhornio/longhorn-instance-manager:v1_20200514',
                                      '--manager-image',
                                      'longhornio/longhorn-manager:v1.0.2',
                                      '--service-account',
                                      'longhorn-service-account'],
                          'env': [{'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'POD_IP',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'status.podIP'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'NODE_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.nodeName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'DEFAULT_SETTING_PATH',
                                   'value': '/var/lib/longhorn-setting/default-setting.yaml',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'longhornio/longhorn-manager:v1.0.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'longhorn-manager',
                          'ports': [{'container_port': 9500,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'manager',
                                     'protocol': 'TCP'}],
                          'readiness_probe': {'_exec': None,
                                              'failure_threshold': 3,
                                              'http_get': None,
                                              'initial_delay_seconds': None,
                                              'period_seconds': 10,
                                              'success_threshold': 1,
                                              'tcp_socket': {'host': None,
                                                             'port': 9500},
                                              'timeout_seconds': 1},
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/host/dev/',
                                             'mount_propagation': None,
                                             'name': 'dev',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/host/proc/',
                                             'mount_propagation': None,
                                             'name': 'proc',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/',
                                             'mount_propagation': 'Bidirectional',
                                             'name': 'varrun',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/lib/longhorn/',
                                             'mount_propagation': 'Bidirectional',
                                             'name': 'longhorn',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/lib/longhorn-setting/',
                                             'mount_propagation': None,
                                             'name': 'longhorn-default-setting',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/dev/', 'type': ''},
                       'iscsi': None,
                       'name': 'dev',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/proc/', 'type': ''},
                       'iscsi': None,
                       'name': 'proc',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/run/', 'type': ''},
                       'iscsi': None,
                       'name': 'varrun',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/longhorn/', 'type': ''},
                       'iscsi': None,
                       'name': 'longhorn',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'longhorn-default-setting',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-default-setting',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 1, 4, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 21, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 21, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 1, 4, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://bc8fb3cd6ebaa961d89ca1f236eee37ec2a231041b43bafd8d6242baae556c9a',
                                    'image': 'longhornio/longhorn-manager:v1.0.2',
                                    'image_id': 'docker-pullable://longhornio/longhorn-manager@sha256:a0ef6144f543000ff7c6ca2a7aa095e788467fe5e1aafc3f774fbfde752a7042',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://c7d65241e25d2c4c2b1fe4f1d6c16198cb06802d1a12114ddf718e3014692602',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 13, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'longhorn-manager',
                                    'ready': True,
                                    'restart_count': 11,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 13, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.153'}],
            'pod_ip': '10.244.1.153',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 1, 4, tzinfo=tzutc())}}

longhorn-system:::::::::::longhorn-manager-r88zs
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 1, 4, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'longhorn-manager-',
              'generation': None,
              'labels': {'app': 'longhorn-manager',
                         'app.kubernetes.io/instance': 'longhorn-system',
                         'app.kubernetes.io/managed-by': 'Tiller',
                         'app.kubernetes.io/name': 'longhorn',
                         'app.kubernetes.io/version': 'v1.0.2',
                         'controller-revision-hash': 'c5959f4d',
                         'helm.sh/chart': 'longhorn-1.0.2',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:app.kubernetes.io/instance': {},
                                                                            'f:app.kubernetes.io/managed-by': {},
                                                                            'f:app.kubernetes.io/name': {},
                                                                            'f:app.kubernetes.io/version': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:helm.sh/chart': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"fbd4bde2-4bf8-442c-8583-3bf6ce5dbf8b"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"longhorn-manager"}': {'.': {},
                                                                                                              'f:command': {},
                                                                                                              'f:env': {'.': {},
                                                                                                                        'k:{"name":"DEFAULT_SETTING_PATH"}': {'.': {},
                                                                                                                                                              'f:name': {},
                                                                                                                                                              'f:value': {}},
                                                                                                                        'k:{"name":"NODE_NAME"}': {'.': {},
                                                                                                                                                   'f:name': {},
                                                                                                                                                   'f:valueFrom': {'.': {},
                                                                                                                                                                   'f:fieldRef': {'.': {},
                                                                                                                                                                                  'f:apiVersion': {},
                                                                                                                                                                                  'f:fieldPath': {}}}},
                                                                                                                        'k:{"name":"POD_IP"}': {'.': {},
                                                                                                                                                'f:name': {},
                                                                                                                                                'f:valueFrom': {'.': {},
                                                                                                                                                                'f:fieldRef': {'.': {},
                                                                                                                                                                               'f:apiVersion': {},
                                                                                                                                                                               'f:fieldPath': {}}}},
                                                                                                                        'k:{"name":"POD_NAMESPACE"}': {'.': {},
                                                                                                                                                       'f:name': {},
                                                                                                                                                       'f:valueFrom': {'.': {},
                                                                                                                                                                       'f:fieldRef': {'.': {},
                                                                                                                                                                                      'f:apiVersion': {},
                                                                                                                                                                                      'f:fieldPath': {}}}}},
                                                                                                              'f:image': {},
                                                                                                              'f:imagePullPolicy': {},
                                                                                                              'f:name': {},
                                                                                                              'f:ports': {'.': {},
                                                                                                                          'k:{"containerPort":9500,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                        'f:containerPort': {},
                                                                                                                                                                        'f:name': {},
                                                                                                                                                                        'f:protocol': {}}},
                                                                                                              'f:readinessProbe': {'.': {},
                                                                                                                                   'f:failureThreshold': {},
                                                                                                                                   'f:periodSeconds': {},
                                                                                                                                   'f:successThreshold': {},
                                                                                                                                   'f:tcpSocket': {'.': {},
                                                                                                                                                   'f:port': {}},
                                                                                                                                   'f:timeoutSeconds': {}},
                                                                                                              'f:resources': {},
                                                                                                              'f:securityContext': {'.': {},
                                                                                                                                    'f:privileged': {}},
                                                                                                              'f:terminationMessagePath': {},
                                                                                                              'f:terminationMessagePolicy': {},
                                                                                                              'f:volumeMounts': {'.': {},
                                                                                                                                 'k:{"mountPath":"/host/dev/"}': {'.': {},
                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                  'f:name': {}},
                                                                                                                                 'k:{"mountPath":"/host/proc/"}': {'.': {},
                                                                                                                                                                   'f:mountPath': {},
                                                                                                                                                                   'f:name': {}},
                                                                                                                                 'k:{"mountPath":"/var/lib/longhorn-setting/"}': {'.': {},
                                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                                  'f:name': {}},
                                                                                                                                 'k:{"mountPath":"/var/lib/longhorn/"}': {'.': {},
                                                                                                                                                                          'f:mountPath': {},
                                                                                                                                                                          'f:mountPropagation': {},
                                                                                                                                                                          'f:name': {}},
                                                                                                                                 'k:{"mountPath":"/var/run/"}': {'.': {},
                                                                                                                                                                 'f:mountPath': {},
                                                                                                                                                                 'f:mountPropagation': {},
                                                                                                                                                                 'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"dev"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}},
                                                                         'k:{"name":"longhorn"}': {'.': {},
                                                                                                   'f:hostPath': {'.': {},
                                                                                                                  'f:path': {},
                                                                                                                  'f:type': {}},
                                                                                                   'f:name': {}},
                                                                         'k:{"name":"longhorn-default-setting"}': {'.': {},
                                                                                                                   'f:configMap': {'.': {},
                                                                                                                                   'f:defaultMode': {},
                                                                                                                                   'f:name': {}},
                                                                                                                   'f:name': {}},
                                                                         'k:{"name":"proc"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}},
                                                                         'k:{"name":"varrun"}': {'.': {},
                                                                                                 'f:hostPath': {'.': {},
                                                                                                                'f:path': {},
                                                                                                                'f:type': {}},
                                                                                                 'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 25, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.183"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 50, tzinfo=tzutc())}],
              'name': 'longhorn-manager-r88zs',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'longhorn-manager',
                                    'uid': 'fbd4bde2-4bf8-442c-8583-3bf6ce5dbf8b'}],
              'resource_version': '1814407',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/longhorn-manager-r88zs',
              'uid': '2c200c29-b871-4710-8d66-9b0b97e0c3db'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node2']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': ['longhorn-manager',
                                      '-d',
                                      'daemon',
                                      '--engine-image',
                                      'longhornio/longhorn-engine:v1.0.2',
                                      '--instance-manager-image',
                                      'longhornio/longhorn-instance-manager:v1_20200514',
                                      '--manager-image',
                                      'longhornio/longhorn-manager:v1.0.2',
                                      '--service-account',
                                      'longhorn-service-account'],
                          'env': [{'name': 'POD_NAMESPACE',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.namespace'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'POD_IP',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'status.podIP'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'NODE_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'spec.nodeName'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}},
                                  {'name': 'DEFAULT_SETTING_PATH',
                                   'value': '/var/lib/longhorn-setting/default-setting.yaml',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'longhornio/longhorn-manager:v1.0.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'longhorn-manager',
                          'ports': [{'container_port': 9500,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'manager',
                                     'protocol': 'TCP'}],
                          'readiness_probe': {'_exec': None,
                                              'failure_threshold': 3,
                                              'http_get': None,
                                              'initial_delay_seconds': None,
                                              'period_seconds': 10,
                                              'success_threshold': 1,
                                              'tcp_socket': {'host': None,
                                                             'port': 9500},
                                              'timeout_seconds': 1},
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': True,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/host/dev/',
                                             'mount_propagation': None,
                                             'name': 'dev',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/host/proc/',
                                             'mount_propagation': None,
                                             'name': 'proc',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/',
                                             'mount_propagation': 'Bidirectional',
                                             'name': 'varrun',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/lib/longhorn/',
                                             'mount_propagation': 'Bidirectional',
                                             'name': 'longhorn',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/lib/longhorn-setting/',
                                             'mount_propagation': None,
                                             'name': 'longhorn-default-setting',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'longhorn-service-account-token-dj78d',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'longhorn-service-account',
          'service_account_name': 'longhorn-service-account',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/dev/', 'type': ''},
                       'iscsi': None,
                       'name': 'dev',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/proc/', 'type': ''},
                       'iscsi': None,
                       'name': 'proc',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/run/', 'type': ''},
                       'iscsi': None,
                       'name': 'varrun',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/var/lib/longhorn/', 'type': ''},
                       'iscsi': None,
                       'name': 'longhorn',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'longhorn-default-setting',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-default-setting',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'longhorn-service-account-token-dj78d',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'longhorn-service-account-token-dj78d'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 0, 59, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 16, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 1, 4, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://88e1ab8d102ea7b82064844b73cad679c6e1835a1f1872a131c4d131d92e7d52',
                                    'image': 'longhornio/longhorn-manager:v1.0.2',
                                    'image_id': 'docker-pullable://longhornio/longhorn-manager@sha256:a0ef6144f543000ff7c6ca2a7aa095e788467fe5e1aafc3f774fbfde752a7042',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://3d0f7c14d5e8a7123e27f5c505eeaa4df81601b0178f6b080b65d686860d82d2',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 20, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'longhorn-manager',
                                    'ready': True,
                                    'restart_count': 11,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 3, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.183'}],
            'pod_ip': '10.244.2.183',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 0, 59, tzinfo=tzutc())}}

longhorn-system:::::::::::longhorn-ui-6fcc8fcb7c-czfq7
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 10, 10, 3, 1, 4, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'longhorn-ui-6fcc8fcb7c-',
              'generation': None,
              'labels': {'app': 'longhorn-ui',
                         'app.kubernetes.io/instance': 'longhorn-system',
                         'app.kubernetes.io/managed-by': 'Tiller',
                         'app.kubernetes.io/name': 'longhorn',
                         'app.kubernetes.io/version': 'v1.0.2',
                         'helm.sh/chart': 'longhorn-1.0.2',
                         'pod-template-hash': '6fcc8fcb7c'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:app.kubernetes.io/instance': {},
                                                                            'f:app.kubernetes.io/managed-by': {},
                                                                            'f:app.kubernetes.io/name': {},
                                                                            'f:app.kubernetes.io/version': {},
                                                                            'f:helm.sh/chart': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"7749a140-5426-47c3-8e9d-5ed2f07298f7"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"longhorn-ui"}': {'.': {},
                                                                                                         'f:env': {'.': {},
                                                                                                                   'k:{"name":"LONGHORN_MANAGER_IP"}': {'.': {},
                                                                                                                                                        'f:name': {},
                                                                                                                                                        'f:value': {}}},
                                                                                                         'f:image': {},
                                                                                                         'f:imagePullPolicy': {},
                                                                                                         'f:name': {},
                                                                                                         'f:ports': {'.': {},
                                                                                                                     'k:{"containerPort":8000,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                   'f:containerPort': {},
                                                                                                                                                                   'f:name': {},
                                                                                                                                                                   'f:protocol': {}}},
                                                                                                         'f:resources': {},
                                                                                                         'f:securityContext': {'.': {},
                                                                                                                               'f:runAsUser': {}},
                                                                                                         'f:terminationMessagePath': {},
                                                                                                         'f:terminationMessagePolicy': {}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:terminationGracePeriodSeconds': {}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 25, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.180"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 50, tzinfo=tzutc())}],
              'name': 'longhorn-ui-6fcc8fcb7c-czfq7',
              'namespace': 'longhorn-system',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'longhorn-ui-6fcc8fcb7c',
                                    'uid': '7749a140-5426-47c3-8e9d-5ed2f07298f7'}],
              'resource_version': '1814394',
              'self_link': '/api/v1/namespaces/longhorn-system/pods/longhorn-ui-6fcc8fcb7c-czfq7',
              'uid': 'c6d4266b-a2e7-46b1-9d35-ad2b193ca548'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': None,
                          'env': [{'name': 'LONGHORN_MANAGER_IP',
                                   'value': 'http://longhorn-backend:9500',
                                   'value_from': None}],
                          'env_from': None,
                          'image': 'longhornio/longhorn-ui:v1.0.2',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'longhorn-ui',
                          'ports': [{'container_port': 8000,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'http',
                                     'protocol': 'TCP'}],
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': None,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': 0,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'default-token-fkmvx',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': None,
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'default',
          'service_account_name': 'default',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'default-token-fkmvx',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'default-token-fkmvx'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 0, 59, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 7, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 7, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 10, 3, 1, 5, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://d6f9806a06ff0a90e031dbf9c348475918a7ac5e54ca28e8728c1613cd65de00',
                                    'image': 'longhornio/longhorn-ui:v1.0.2',
                                    'image_id': 'docker-pullable://longhornio/longhorn-ui@sha256:0658ded0055674e843ee81b5014c25e12e95c8cda89ca8bb565708cdee322ff4',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://7ce9de282a692cfae110f150b695f0af94982d964f75223892afffaea1a0c518',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 24, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'longhorn-ui',
                                    'ready': True,
                                    'restart_count': 4,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 4, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.180'}],
            'pod_ip': '10.244.2.180',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 10, 10, 3, 0, 59, tzinfo=tzutc())}}

monitoring:::::::::::alertmanager-main-0
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'alertmanager-main-',
              'generation': None,
              'labels': {'alertmanager': 'main',
                         'app': 'alertmanager',
                         'controller-revision-hash': 'alertmanager-main-5f85479f76',
                         'statefulset.kubernetes.io/pod-name': 'alertmanager-main-0'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:alertmanager': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:statefulset.kubernetes.io/pod-name': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"05314deb-949a-4bb8-adc5-c640400c59d8"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"alertmanager"}': {'.': {},
                                                                                                          'f:args': {},
                                                                                                          'f:env': {'.': {},
                                                                                                                    'k:{"name":"POD_IP"}': {'.': {},
                                                                                                                                            'f:name': {},
                                                                                                                                            'f:valueFrom': {'.': {},
                                                                                                                                                            'f:fieldRef': {'.': {},
                                                                                                                                                                           'f:apiVersion': {},
                                                                                                                                                                           'f:fieldPath': {}}}}},
                                                                                                          'f:image': {},
                                                                                                          'f:imagePullPolicy': {},
                                                                                                          'f:livenessProbe': {'.': {},
                                                                                                                              'f:failureThreshold': {},
                                                                                                                              'f:httpGet': {'.': {},
                                                                                                                                            'f:path': {},
                                                                                                                                            'f:port': {},
                                                                                                                                            'f:scheme': {}},
                                                                                                                              'f:periodSeconds': {},
                                                                                                                              'f:successThreshold': {},
                                                                                                                              'f:timeoutSeconds': {}},
                                                                                                          'f:name': {},
                                                                                                          'f:ports': {'.': {},
                                                                                                                      'k:{"containerPort":9093,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                    'f:containerPort': {},
                                                                                                                                                                    'f:name': {},
                                                                                                                                                                    'f:protocol': {}},
                                                                                                                      'k:{"containerPort":9094,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                    'f:containerPort': {},
                                                                                                                                                                    'f:name': {},
                                                                                                                                                                    'f:protocol': {}},
                                                                                                                      'k:{"containerPort":9094,"protocol":"UDP"}': {'.': {},
                                                                                                                                                                    'f:containerPort': {},
                                                                                                                                                                    'f:name': {},
                                                                                                                                                                    'f:protocol': {}}},
                                                                                                          'f:readinessProbe': {'.': {},
                                                                                                                               'f:failureThreshold': {},
                                                                                                                               'f:httpGet': {'.': {},
                                                                                                                                             'f:path': {},
                                                                                                                                             'f:port': {},
                                                                                                                                             'f:scheme': {}},
                                                                                                                               'f:initialDelaySeconds': {},
                                                                                                                               'f:periodSeconds': {},
                                                                                                                               'f:successThreshold': {},
                                                                                                                               'f:timeoutSeconds': {}},
                                                                                                          'f:resources': {'.': {},
                                                                                                                          'f:requests': {'.': {},
                                                                                                                                         'f:memory': {}}},
                                                                                                          'f:terminationMessagePath': {},
                                                                                                          'f:terminationMessagePolicy': {},
                                                                                                          'f:volumeMounts': {'.': {},
                                                                                                                             'k:{"mountPath":"/alertmanager"}': {'.': {},
                                                                                                                                                                 'f:mountPath': {},
                                                                                                                                                                 'f:name': {}},
                                                                                                                             'k:{"mountPath":"/etc/alertmanager/config"}': {'.': {},
                                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                                            'f:name': {}}}},
                                                                            'k:{"name":"config-reloader"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:resources': {'.': {},
                                                                                                                             'f:limits': {'.': {},
                                                                                                                                          'f:cpu': {},
                                                                                                                                          'f:memory': {}},
                                                                                                                             'f:requests': {'.': {},
                                                                                                                                            'f:cpu': {},
                                                                                                                                            'f:memory': {}}},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {},
                                                                                                             'f:volumeMounts': {'.': {},
                                                                                                                                'k:{"mountPath":"/etc/alertmanager/config"}': {'.': {},
                                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                                               'f:name': {},
                                                                                                                                                                               'f:readOnly': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostname': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {'.': {},
                                                                                 'f:fsGroup': {},
                                                                                 'f:runAsNonRoot': {},
                                                                                 'f:runAsUser': {}},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:subdomain': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"alertmanager-main-db"}': {'.': {},
                                                                                                               'f:emptyDir': {},
                                                                                                               'f:name': {}},
                                                                         'k:{"name":"config-volume"}': {'.': {},
                                                                                                        'f:name': {},
                                                                                                        'f:secret': {'.': {},
                                                                                                                     'f:defaultMode': {},
                                                                                                                     'f:secretName': {}}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 54, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.157"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 49, tzinfo=tzutc())}],
              'name': 'alertmanager-main-0',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'StatefulSet',
                                    'name': 'alertmanager-main',
                                    'uid': '05314deb-949a-4bb8-adc5-c640400c59d8'}],
              'resource_version': '1814379',
              'self_link': '/api/v1/namespaces/monitoring/pods/alertmanager-main-0',
              'uid': '664f1dfd-5e6a-449a-8520-380f253b0628'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--config.file=/etc/alertmanager/config/alertmanager.yaml',
                                   '--storage.path=/alertmanager',
                                   '--data.retention=120h',
                                   '--cluster.listen-address=[$(POD_IP)]:9094',
                                   '--web.listen-address=:9093',
                                   '--web.route-prefix=/',
                                   '--cluster.peer=alertmanager-main-0.alertmanager-operated:9094',
                                   '--cluster.peer=alertmanager-main-1.alertmanager-operated:9094',
                                   '--cluster.peer=alertmanager-main-2.alertmanager-operated:9094',
                                   '--cluster.reconnect-timeout=5m'],
                          'command': None,
                          'env': [{'name': 'POD_IP',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'status.podIP'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/prometheus/alertmanager:v0.21.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': None,
                                             'failure_threshold': 10,
                                             'http_get': {'host': None,
                                                          'http_headers': None,
                                                          'path': '/-/healthy',
                                                          'port': 'web',
                                                          'scheme': 'HTTP'},
                                             'initial_delay_seconds': None,
                                             'period_seconds': 10,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 3},
                          'name': 'alertmanager',
                          'ports': [{'container_port': 9093,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'web',
                                     'protocol': 'TCP'},
                                    {'container_port': 9094,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'mesh-tcp',
                                     'protocol': 'TCP'},
                                    {'container_port': 9094,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'mesh-udp',
                                     'protocol': 'UDP'}],
                          'readiness_probe': {'_exec': None,
                                              'failure_threshold': 10,
                                              'http_get': {'host': None,
                                                           'http_headers': None,
                                                           'path': '/-/ready',
                                                           'port': 'web',
                                                           'scheme': 'HTTP'},
                                              'initial_delay_seconds': 3,
                                              'period_seconds': 5,
                                              'success_threshold': 1,
                                              'tcp_socket': None,
                                              'timeout_seconds': 3},
                          'resources': {'limits': None,
                                        'requests': {'memory': '200Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/alertmanager/config',
                                             'mount_propagation': None,
                                             'name': 'config-volume',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/alertmanager',
                                             'mount_propagation': None,
                                             'name': 'alertmanager-main-db',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'alertmanager-main-token-jjbmh',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['-webhook-url=http://localhost:9093/-/reload',
                                   '-volume-dir=/etc/alertmanager/config'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'jimmidyson/configmap-reload:v0.4.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'config-reloader',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '100m',
                                                   'memory': '25Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '25Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/alertmanager/config',
                                             'mount_propagation': None,
                                             'name': 'config-volume',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'alertmanager-main-token-jjbmh',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': 'alertmanager-main-0',
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': 2000,
                               'run_as_group': None,
                               'run_as_non_root': True,
                               'run_as_user': 1000,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'alertmanager-main',
          'service_account_name': 'alertmanager-main',
          'share_process_namespace': None,
          'subdomain': 'alertmanager-operated',
          'termination_grace_period_seconds': 120,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'config-volume',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'alertmanager-main'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': {'medium': None, 'size_limit': None},
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'alertmanager-main-db',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'alertmanager-main-token-jjbmh',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'alertmanager-main-token-jjbmh'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 17, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 17, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://5f27ef4a085ac7a59bd7bf0cd03a40daaae023e6177f26b785f2c0bb754bafdc',
                                    'image': 'quay.mirrors.ustc.edu.cn/prometheus/alertmanager:v0.21.0',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/prometheus/alertmanager@sha256:24a5204b418e8fa0214cfb628486749003b039c279c56b5bddb5b10cd100d926',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://5fb2da49029187866f0a578b2addb5cd9f454e9728a27df9adae7c9e7d7b5b7f',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:29:51.498Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:29:52.605Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:30:12.259Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:30:27.049Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:30:39.874Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:30:55.988Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 7, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'alertmanager',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 11, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://7191a5e30c0fc6f0cbbc9e76a66ad8a9617128c9226526415b80e67b423c9fb4',
                                    'image': 'jimmidyson/configmap-reload:v0.4.0',
                                    'image_id': 'docker-pullable://jimmidyson/configmap-reload@sha256:17d34fd73f9e8a78ba7da269d96822ce8972391c2838e08d92a990136adb8e4a',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://5e2cc5e210516e5c264ef35d8101ff922067f2b492d6c63d19956c3fa95f1014',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': '2020/10/19 '
                                                                             '02:45:13 '
                                                                             'Watching '
                                                                             'directory: '
                                                                             '"/etc/alertmanager/config"\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 9, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'config-reloader',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 13, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.157'}],
            'pod_ip': '10.244.1.157',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc())}}

monitoring:::::::::::alertmanager-main-1
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'alertmanager-main-',
              'generation': None,
              'labels': {'alertmanager': 'main',
                         'app': 'alertmanager',
                         'controller-revision-hash': 'alertmanager-main-5f85479f76',
                         'statefulset.kubernetes.io/pod-name': 'alertmanager-main-1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:alertmanager': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:statefulset.kubernetes.io/pod-name': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"05314deb-949a-4bb8-adc5-c640400c59d8"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"alertmanager"}': {'.': {},
                                                                                                          'f:args': {},
                                                                                                          'f:env': {'.': {},
                                                                                                                    'k:{"name":"POD_IP"}': {'.': {},
                                                                                                                                            'f:name': {},
                                                                                                                                            'f:valueFrom': {'.': {},
                                                                                                                                                            'f:fieldRef': {'.': {},
                                                                                                                                                                           'f:apiVersion': {},
                                                                                                                                                                           'f:fieldPath': {}}}}},
                                                                                                          'f:image': {},
                                                                                                          'f:imagePullPolicy': {},
                                                                                                          'f:livenessProbe': {'.': {},
                                                                                                                              'f:failureThreshold': {},
                                                                                                                              'f:httpGet': {'.': {},
                                                                                                                                            'f:path': {},
                                                                                                                                            'f:port': {},
                                                                                                                                            'f:scheme': {}},
                                                                                                                              'f:periodSeconds': {},
                                                                                                                              'f:successThreshold': {},
                                                                                                                              'f:timeoutSeconds': {}},
                                                                                                          'f:name': {},
                                                                                                          'f:ports': {'.': {},
                                                                                                                      'k:{"containerPort":9093,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                    'f:containerPort': {},
                                                                                                                                                                    'f:name': {},
                                                                                                                                                                    'f:protocol': {}},
                                                                                                                      'k:{"containerPort":9094,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                    'f:containerPort': {},
                                                                                                                                                                    'f:name': {},
                                                                                                                                                                    'f:protocol': {}},
                                                                                                                      'k:{"containerPort":9094,"protocol":"UDP"}': {'.': {},
                                                                                                                                                                    'f:containerPort': {},
                                                                                                                                                                    'f:name': {},
                                                                                                                                                                    'f:protocol': {}}},
                                                                                                          'f:readinessProbe': {'.': {},
                                                                                                                               'f:failureThreshold': {},
                                                                                                                               'f:httpGet': {'.': {},
                                                                                                                                             'f:path': {},
                                                                                                                                             'f:port': {},
                                                                                                                                             'f:scheme': {}},
                                                                                                                               'f:initialDelaySeconds': {},
                                                                                                                               'f:periodSeconds': {},
                                                                                                                               'f:successThreshold': {},
                                                                                                                               'f:timeoutSeconds': {}},
                                                                                                          'f:resources': {'.': {},
                                                                                                                          'f:requests': {'.': {},
                                                                                                                                         'f:memory': {}}},
                                                                                                          'f:terminationMessagePath': {},
                                                                                                          'f:terminationMessagePolicy': {},
                                                                                                          'f:volumeMounts': {'.': {},
                                                                                                                             'k:{"mountPath":"/alertmanager"}': {'.': {},
                                                                                                                                                                 'f:mountPath': {},
                                                                                                                                                                 'f:name': {}},
                                                                                                                             'k:{"mountPath":"/etc/alertmanager/config"}': {'.': {},
                                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                                            'f:name': {}}}},
                                                                            'k:{"name":"config-reloader"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:resources': {'.': {},
                                                                                                                             'f:limits': {'.': {},
                                                                                                                                          'f:cpu': {},
                                                                                                                                          'f:memory': {}},
                                                                                                                             'f:requests': {'.': {},
                                                                                                                                            'f:cpu': {},
                                                                                                                                            'f:memory': {}}},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {},
                                                                                                             'f:volumeMounts': {'.': {},
                                                                                                                                'k:{"mountPath":"/etc/alertmanager/config"}': {'.': {},
                                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                                               'f:name': {},
                                                                                                                                                                               'f:readOnly': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostname': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {'.': {},
                                                                                 'f:fsGroup': {},
                                                                                 'f:runAsNonRoot': {},
                                                                                 'f:runAsUser': {}},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:subdomain': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"alertmanager-main-db"}': {'.': {},
                                                                                                               'f:emptyDir': {},
                                                                                                               'f:name': {}},
                                                                         'k:{"name":"config-volume"}': {'.': {},
                                                                                                        'f:name': {},
                                                                                                        'f:secret': {'.': {},
                                                                                                                     'f:defaultMode': {},
                                                                                                                     'f:secretName': {}}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 25, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.174"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 4, tzinfo=tzutc())}],
              'name': 'alertmanager-main-1',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'StatefulSet',
                                    'name': 'alertmanager-main',
                                    'uid': '05314deb-949a-4bb8-adc5-c640400c59d8'}],
              'resource_version': '1814520',
              'self_link': '/api/v1/namespaces/monitoring/pods/alertmanager-main-1',
              'uid': 'a4506a09-3333-49a9-afe0-f7570167650f'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--config.file=/etc/alertmanager/config/alertmanager.yaml',
                                   '--storage.path=/alertmanager',
                                   '--data.retention=120h',
                                   '--cluster.listen-address=[$(POD_IP)]:9094',
                                   '--web.listen-address=:9093',
                                   '--web.route-prefix=/',
                                   '--cluster.peer=alertmanager-main-0.alertmanager-operated:9094',
                                   '--cluster.peer=alertmanager-main-1.alertmanager-operated:9094',
                                   '--cluster.peer=alertmanager-main-2.alertmanager-operated:9094',
                                   '--cluster.reconnect-timeout=5m'],
                          'command': None,
                          'env': [{'name': 'POD_IP',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'status.podIP'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/prometheus/alertmanager:v0.21.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': None,
                                             'failure_threshold': 10,
                                             'http_get': {'host': None,
                                                          'http_headers': None,
                                                          'path': '/-/healthy',
                                                          'port': 'web',
                                                          'scheme': 'HTTP'},
                                             'initial_delay_seconds': None,
                                             'period_seconds': 10,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 3},
                          'name': 'alertmanager',
                          'ports': [{'container_port': 9093,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'web',
                                     'protocol': 'TCP'},
                                    {'container_port': 9094,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'mesh-tcp',
                                     'protocol': 'TCP'},
                                    {'container_port': 9094,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'mesh-udp',
                                     'protocol': 'UDP'}],
                          'readiness_probe': {'_exec': None,
                                              'failure_threshold': 10,
                                              'http_get': {'host': None,
                                                           'http_headers': None,
                                                           'path': '/-/ready',
                                                           'port': 'web',
                                                           'scheme': 'HTTP'},
                                              'initial_delay_seconds': 3,
                                              'period_seconds': 5,
                                              'success_threshold': 1,
                                              'tcp_socket': None,
                                              'timeout_seconds': 3},
                          'resources': {'limits': None,
                                        'requests': {'memory': '200Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/alertmanager/config',
                                             'mount_propagation': None,
                                             'name': 'config-volume',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/alertmanager',
                                             'mount_propagation': None,
                                             'name': 'alertmanager-main-db',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'alertmanager-main-token-jjbmh',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['-webhook-url=http://localhost:9093/-/reload',
                                   '-volume-dir=/etc/alertmanager/config'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'jimmidyson/configmap-reload:v0.4.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'config-reloader',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '100m',
                                                   'memory': '25Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '25Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/alertmanager/config',
                                             'mount_propagation': None,
                                             'name': 'config-volume',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'alertmanager-main-token-jjbmh',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': 'alertmanager-main-1',
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': 2000,
                               'run_as_group': None,
                               'run_as_non_root': True,
                               'run_as_user': 1000,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'alertmanager-main',
          'service_account_name': 'alertmanager-main',
          'share_process_namespace': None,
          'subdomain': 'alertmanager-operated',
          'termination_grace_period_seconds': 120,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'config-volume',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'alertmanager-main'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': {'medium': None, 'size_limit': None},
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'alertmanager-main-db',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'alertmanager-main-token-jjbmh',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'alertmanager-main-token-jjbmh'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 6, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 6, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://8234ffb376a5ef984b43cf54b192d1168544cd0236984cf684047f3bba5bf4e6',
                                    'image': 'quay.mirrors.ustc.edu.cn/prometheus/alertmanager:v0.21.0',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/prometheus/alertmanager@sha256:24a5204b418e8fa0214cfb628486749003b039c279c56b5bddb5b10cd100d926',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://0e9eb09eeff371023f2949965e9556d8b7b58484ae5e22194211aedbb211c6b4',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': 'tmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:30:39.164Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:30:53.524Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:31:22.579Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:32:28.461Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=10.244.1.135:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'join '
                                                                             '10.244.1.135: '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.244.1.135:9094: '
                                                                             'i/o '
                                                                             'timeout\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:33:10.614Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'read '
                                                                             'udp '
                                                                             '10.244.2.160:58180->10.1.0.10:53: '
                                                                             'i/o '
                                                                             'timeout\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:33:52.832Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-2.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-2.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-2.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'read '
                                                                             'udp '
                                                                             '10.244.2.160:50252->10.1.0.10:53: '
                                                                             'i/o '
                                                                             'timeout\\n\\n"\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 19, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'alertmanager',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://686e2af50c3aa077988b1baa97f04493a53a4b233a724ac5ea7b804357bf75f7',
                                    'image': 'jimmidyson/configmap-reload:v0.4.0',
                                    'image_id': 'docker-pullable://jimmidyson/configmap-reload@sha256:17d34fd73f9e8a78ba7da269d96822ce8972391c2838e08d92a990136adb8e4a',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://01b9a3e673fa893ac18ae73cc6ceb4e0fca4b9a887aa88672fc270ec7882a699',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': '2020/10/15 '
                                                                             '03:23:20 '
                                                                             'Watching '
                                                                             'directory: '
                                                                             '"/etc/alertmanager/config"\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 20, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'config-reloader',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 1, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.174'}],
            'pod_ip': '10.244.2.174',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc())}}

monitoring:::::::::::alertmanager-main-2
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'alertmanager-main-',
              'generation': None,
              'labels': {'alertmanager': 'main',
                         'app': 'alertmanager',
                         'controller-revision-hash': 'alertmanager-main-5f85479f76',
                         'statefulset.kubernetes.io/pod-name': 'alertmanager-main-2'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:alertmanager': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:statefulset.kubernetes.io/pod-name': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"05314deb-949a-4bb8-adc5-c640400c59d8"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"alertmanager"}': {'.': {},
                                                                                                          'f:args': {},
                                                                                                          'f:env': {'.': {},
                                                                                                                    'k:{"name":"POD_IP"}': {'.': {},
                                                                                                                                            'f:name': {},
                                                                                                                                            'f:valueFrom': {'.': {},
                                                                                                                                                            'f:fieldRef': {'.': {},
                                                                                                                                                                           'f:apiVersion': {},
                                                                                                                                                                           'f:fieldPath': {}}}}},
                                                                                                          'f:image': {},
                                                                                                          'f:imagePullPolicy': {},
                                                                                                          'f:livenessProbe': {'.': {},
                                                                                                                              'f:failureThreshold': {},
                                                                                                                              'f:httpGet': {'.': {},
                                                                                                                                            'f:path': {},
                                                                                                                                            'f:port': {},
                                                                                                                                            'f:scheme': {}},
                                                                                                                              'f:periodSeconds': {},
                                                                                                                              'f:successThreshold': {},
                                                                                                                              'f:timeoutSeconds': {}},
                                                                                                          'f:name': {},
                                                                                                          'f:ports': {'.': {},
                                                                                                                      'k:{"containerPort":9093,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                    'f:containerPort': {},
                                                                                                                                                                    'f:name': {},
                                                                                                                                                                    'f:protocol': {}},
                                                                                                                      'k:{"containerPort":9094,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                    'f:containerPort': {},
                                                                                                                                                                    'f:name': {},
                                                                                                                                                                    'f:protocol': {}},
                                                                                                                      'k:{"containerPort":9094,"protocol":"UDP"}': {'.': {},
                                                                                                                                                                    'f:containerPort': {},
                                                                                                                                                                    'f:name': {},
                                                                                                                                                                    'f:protocol': {}}},
                                                                                                          'f:readinessProbe': {'.': {},
                                                                                                                               'f:failureThreshold': {},
                                                                                                                               'f:httpGet': {'.': {},
                                                                                                                                             'f:path': {},
                                                                                                                                             'f:port': {},
                                                                                                                                             'f:scheme': {}},
                                                                                                                               'f:initialDelaySeconds': {},
                                                                                                                               'f:periodSeconds': {},
                                                                                                                               'f:successThreshold': {},
                                                                                                                               'f:timeoutSeconds': {}},
                                                                                                          'f:resources': {'.': {},
                                                                                                                          'f:requests': {'.': {},
                                                                                                                                         'f:memory': {}}},
                                                                                                          'f:terminationMessagePath': {},
                                                                                                          'f:terminationMessagePolicy': {},
                                                                                                          'f:volumeMounts': {'.': {},
                                                                                                                             'k:{"mountPath":"/alertmanager"}': {'.': {},
                                                                                                                                                                 'f:mountPath': {},
                                                                                                                                                                 'f:name': {}},
                                                                                                                             'k:{"mountPath":"/etc/alertmanager/config"}': {'.': {},
                                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                                            'f:name': {}}}},
                                                                            'k:{"name":"config-reloader"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:resources': {'.': {},
                                                                                                                             'f:limits': {'.': {},
                                                                                                                                          'f:cpu': {},
                                                                                                                                          'f:memory': {}},
                                                                                                                             'f:requests': {'.': {},
                                                                                                                                            'f:cpu': {},
                                                                                                                                            'f:memory': {}}},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {},
                                                                                                             'f:volumeMounts': {'.': {},
                                                                                                                                'k:{"mountPath":"/etc/alertmanager/config"}': {'.': {},
                                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                                               'f:name': {},
                                                                                                                                                                               'f:readOnly': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostname': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {'.': {},
                                                                                 'f:fsGroup': {},
                                                                                 'f:runAsNonRoot': {},
                                                                                 'f:runAsUser': {}},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:subdomain': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"alertmanager-main-db"}': {'.': {},
                                                                                                               'f:emptyDir': {},
                                                                                                               'f:name': {}},
                                                                         'k:{"name":"config-volume"}': {'.': {},
                                                                                                        'f:name': {},
                                                                                                        'f:secret': {'.': {},
                                                                                                                     'f:defaultMode': {},
                                                                                                                     'f:secretName': {}}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.161"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 52, tzinfo=tzutc())}],
              'name': 'alertmanager-main-2',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'StatefulSet',
                                    'name': 'alertmanager-main',
                                    'uid': '05314deb-949a-4bb8-adc5-c640400c59d8'}],
              'resource_version': '1814443',
              'self_link': '/api/v1/namespaces/monitoring/pods/alertmanager-main-2',
              'uid': 'dcebc320-8222-4cd8-bd0c-d839f1e5cb0d'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--config.file=/etc/alertmanager/config/alertmanager.yaml',
                                   '--storage.path=/alertmanager',
                                   '--data.retention=120h',
                                   '--cluster.listen-address=[$(POD_IP)]:9094',
                                   '--web.listen-address=:9093',
                                   '--web.route-prefix=/',
                                   '--cluster.peer=alertmanager-main-0.alertmanager-operated:9094',
                                   '--cluster.peer=alertmanager-main-1.alertmanager-operated:9094',
                                   '--cluster.peer=alertmanager-main-2.alertmanager-operated:9094',
                                   '--cluster.reconnect-timeout=5m'],
                          'command': None,
                          'env': [{'name': 'POD_IP',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'status.podIP'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/prometheus/alertmanager:v0.21.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': None,
                                             'failure_threshold': 10,
                                             'http_get': {'host': None,
                                                          'http_headers': None,
                                                          'path': '/-/healthy',
                                                          'port': 'web',
                                                          'scheme': 'HTTP'},
                                             'initial_delay_seconds': None,
                                             'period_seconds': 10,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 3},
                          'name': 'alertmanager',
                          'ports': [{'container_port': 9093,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'web',
                                     'protocol': 'TCP'},
                                    {'container_port': 9094,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'mesh-tcp',
                                     'protocol': 'TCP'},
                                    {'container_port': 9094,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'mesh-udp',
                                     'protocol': 'UDP'}],
                          'readiness_probe': {'_exec': None,
                                              'failure_threshold': 10,
                                              'http_get': {'host': None,
                                                           'http_headers': None,
                                                           'path': '/-/ready',
                                                           'port': 'web',
                                                           'scheme': 'HTTP'},
                                              'initial_delay_seconds': 3,
                                              'period_seconds': 5,
                                              'success_threshold': 1,
                                              'tcp_socket': None,
                                              'timeout_seconds': 3},
                          'resources': {'limits': None,
                                        'requests': {'memory': '200Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/alertmanager/config',
                                             'mount_propagation': None,
                                             'name': 'config-volume',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/alertmanager',
                                             'mount_propagation': None,
                                             'name': 'alertmanager-main-db',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'alertmanager-main-token-jjbmh',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['-webhook-url=http://localhost:9093/-/reload',
                                   '-volume-dir=/etc/alertmanager/config'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'jimmidyson/configmap-reload:v0.4.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'config-reloader',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '100m',
                                                   'memory': '25Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '25Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/alertmanager/config',
                                             'mount_propagation': None,
                                             'name': 'config-volume',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'alertmanager-main-token-jjbmh',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': 'alertmanager-main-2',
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': 2000,
                               'run_as_group': None,
                               'run_as_non_root': True,
                               'run_as_user': 1000,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'alertmanager-main',
          'service_account_name': 'alertmanager-main',
          'share_process_namespace': None,
          'subdomain': 'alertmanager-operated',
          'termination_grace_period_seconds': 120,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'config-volume',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'alertmanager-main'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': {'medium': None, 'size_limit': None},
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'alertmanager-main-db',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'alertmanager-main-token-jjbmh',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'alertmanager-main-token-jjbmh'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 17, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 17, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://0843f769b73be62905d6ecfc128bef98b48bea052778ba40d144f0c6cb892e31',
                                    'image': 'quay.mirrors.ustc.edu.cn/prometheus/alertmanager:v0.21.0',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/prometheus/alertmanager@sha256:24a5204b418e8fa0214cfb628486749003b039c279c56b5bddb5b10cd100d926',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://e59b4abfc684041eeac2676259d831eae7d0498823c745559995b26613b2c42d',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:29:46.054Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:29:52.129Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:30:11.714Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:30:19.419Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:30:39.567Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n'
                                                                             'level=warn '
                                                                             'ts=2020-10-21T08:30:49.015Z '
                                                                             'caller=cluster.go:438 '
                                                                             'component=cluster '
                                                                             'msg=refresh '
                                                                             'result=failure '
                                                                             'addr=alertmanager-main-1.alertmanager-operated:9094 '
                                                                             'err="1 '
                                                                             'error '
                                                                             'occurred:\\n\\t* '
                                                                             'Failed '
                                                                             'to '
                                                                             'resolve '
                                                                             'alertmanager-main-1.alertmanager-operated:9094: '
                                                                             'lookup '
                                                                             'alertmanager-main-1.alertmanager-operated '
                                                                             'on '
                                                                             '10.1.0.10:53: '
                                                                             'no '
                                                                             'such '
                                                                             'host\\n\\n"\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 14, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'alertmanager',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 13, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://692e736ccd9a4cdd359da1d0d4cdbc114587ebb611ed32862b68ed964ad62d45',
                                    'image': 'jimmidyson/configmap-reload:v0.4.0',
                                    'image_id': 'docker-pullable://jimmidyson/configmap-reload@sha256:17d34fd73f9e8a78ba7da269d96822ce8972391c2838e08d92a990136adb8e4a',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://4c4ddf3ad61c93343f1e08be7830c2422e40a655cf84007f392e42330d91bee9',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': '2020/10/19 '
                                                                             '02:45:15 '
                                                                             'Watching '
                                                                             'directory: '
                                                                             '"/etc/alertmanager/config"\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 15, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'config-reloader',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 13, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.161'}],
            'pod_ip': '10.244.1.161',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 25, 8, 19, 43, tzinfo=tzutc())}}

monitoring:::::::::::grafana-86445dccbb-fhbrb
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': {'checksum/grafana-datasources': '48faab41f579fc8efde6034391496f6a'},
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 25, 8, 19, 45, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'grafana-86445dccbb-',
              'generation': None,
              'labels': {'app': 'grafana', 'pod-template-hash': '86445dccbb'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                 'f:checksum/grafana-datasources': {}},
                                                               'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"995d7b5d-8a58-46a0-a7e5-4d2d3058226a"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"grafana"}': {'.': {},
                                                                                                     'f:image': {},
                                                                                                     'f:imagePullPolicy': {},
                                                                                                     'f:name': {},
                                                                                                     'f:ports': {'.': {},
                                                                                                                 'k:{"containerPort":3000,"protocol":"TCP"}': {'.': {},
                                                                                                                                                               'f:containerPort': {},
                                                                                                                                                               'f:name': {},
                                                                                                                                                               'f:protocol': {}}},
                                                                                                     'f:readinessProbe': {'.': {},
                                                                                                                          'f:failureThreshold': {},
                                                                                                                          'f:httpGet': {'.': {},
                                                                                                                                        'f:path': {},
                                                                                                                                        'f:port': {},
                                                                                                                                        'f:scheme': {}},
                                                                                                                          'f:periodSeconds': {},
                                                                                                                          'f:successThreshold': {},
                                                                                                                          'f:timeoutSeconds': {}},
                                                                                                     'f:resources': {'.': {},
                                                                                                                     'f:limits': {'.': {},
                                                                                                                                  'f:cpu': {},
                                                                                                                                  'f:memory': {}},
                                                                                                                     'f:requests': {'.': {},
                                                                                                                                    'f:cpu': {},
                                                                                                                                    'f:memory': {}}},
                                                                                                     'f:terminationMessagePath': {},
                                                                                                     'f:terminationMessagePolicy': {},
                                                                                                     'f:volumeMounts': {'.': {},
                                                                                                                        'k:{"mountPath":"/etc/grafana/provisioning/dashboards"}': {'.': {},
                                                                                                                                                                                   'f:mountPath': {},
                                                                                                                                                                                   'f:name': {}},
                                                                                                                        'k:{"mountPath":"/etc/grafana/provisioning/datasources"}': {'.': {},
                                                                                                                                                                                    'f:mountPath': {},
                                                                                                                                                                                    'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/apiserver"}': {'.': {},
                                                                                                                                                                                         'f:mountPath': {},
                                                                                                                                                                                         'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/cluster-total"}': {'.': {},
                                                                                                                                                                                             'f:mountPath': {},
                                                                                                                                                                                             'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/controller-manager"}': {'.': {},
                                                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                                                  'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-cluster"}': {'.': {},
                                                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                                                     'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-namespace"}': {'.': {},
                                                                                                                                                                                                       'f:mountPath': {},
                                                                                                                                                                                                       'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-node"}': {'.': {},
                                                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                                                  'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-pod"}': {'.': {},
                                                                                                                                                                                                 'f:mountPath': {},
                                                                                                                                                                                                 'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-workload"}': {'.': {},
                                                                                                                                                                                                      'f:mountPath': {},
                                                                                                                                                                                                      'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-workloads-namespace"}': {'.': {},
                                                                                                                                                                                                                 'f:mountPath': {},
                                                                                                                                                                                                                 'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/kubelet"}': {'.': {},
                                                                                                                                                                                       'f:mountPath': {},
                                                                                                                                                                                       'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/namespace-by-pod"}': {'.': {},
                                                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                                                'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/namespace-by-workload"}': {'.': {},
                                                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                                                     'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/node-cluster-rsrc-use"}': {'.': {},
                                                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                                                     'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/node-rsrc-use"}': {'.': {},
                                                                                                                                                                                             'f:mountPath': {},
                                                                                                                                                                                             'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/nodes"}': {'.': {},
                                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                                     'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/persistentvolumesusage"}': {'.': {},
                                                                                                                                                                                                      'f:mountPath': {},
                                                                                                                                                                                                      'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/pod-total"}': {'.': {},
                                                                                                                                                                                         'f:mountPath': {},
                                                                                                                                                                                         'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/prometheus"}': {'.': {},
                                                                                                                                                                                          'f:mountPath': {},
                                                                                                                                                                                          'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/prometheus-remote-write"}': {'.': {},
                                                                                                                                                                                                       'f:mountPath': {},
                                                                                                                                                                                                       'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/proxy"}': {'.': {},
                                                                                                                                                                                     'f:mountPath': {},
                                                                                                                                                                                     'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/scheduler"}': {'.': {},
                                                                                                                                                                                         'f:mountPath': {},
                                                                                                                                                                                         'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/statefulset"}': {'.': {},
                                                                                                                                                                                           'f:mountPath': {},
                                                                                                                                                                                           'f:name': {}},
                                                                                                                        'k:{"mountPath":"/grafana-dashboard-definitions/0/workload-total"}': {'.': {},
                                                                                                                                                                                              'f:mountPath': {},
                                                                                                                                                                                              'f:name': {}},
                                                                                                                        'k:{"mountPath":"/var/lib/grafana"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:beta.kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {'.': {},
                                                                                 'f:fsGroup': {},
                                                                                 'f:runAsNonRoot': {},
                                                                                 'f:runAsUser': {}},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"grafana-dashboard-apiserver"}': {'.': {},
                                                                                                                      'f:configMap': {'.': {},
                                                                                                                                      'f:defaultMode': {},
                                                                                                                                      'f:name': {}},
                                                                                                                      'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-cluster-total"}': {'.': {},
                                                                                                                          'f:configMap': {'.': {},
                                                                                                                                          'f:defaultMode': {},
                                                                                                                                          'f:name': {}},
                                                                                                                          'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-controller-manager"}': {'.': {},
                                                                                                                               'f:configMap': {'.': {},
                                                                                                                                               'f:defaultMode': {},
                                                                                                                                               'f:name': {}},
                                                                                                                               'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-k8s-resources-cluster"}': {'.': {},
                                                                                                                                  'f:configMap': {'.': {},
                                                                                                                                                  'f:defaultMode': {},
                                                                                                                                                  'f:name': {}},
                                                                                                                                  'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-k8s-resources-namespace"}': {'.': {},
                                                                                                                                    'f:configMap': {'.': {},
                                                                                                                                                    'f:defaultMode': {},
                                                                                                                                                    'f:name': {}},
                                                                                                                                    'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-k8s-resources-node"}': {'.': {},
                                                                                                                               'f:configMap': {'.': {},
                                                                                                                                               'f:defaultMode': {},
                                                                                                                                               'f:name': {}},
                                                                                                                               'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-k8s-resources-pod"}': {'.': {},
                                                                                                                              'f:configMap': {'.': {},
                                                                                                                                              'f:defaultMode': {},
                                                                                                                                              'f:name': {}},
                                                                                                                              'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-k8s-resources-workload"}': {'.': {},
                                                                                                                                   'f:configMap': {'.': {},
                                                                                                                                                   'f:defaultMode': {},
                                                                                                                                                   'f:name': {}},
                                                                                                                                   'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-k8s-resources-workloads-namespace"}': {'.': {},
                                                                                                                                              'f:configMap': {'.': {},
                                                                                                                                                              'f:defaultMode': {},
                                                                                                                                                              'f:name': {}},
                                                                                                                                              'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-kubelet"}': {'.': {},
                                                                                                                    'f:configMap': {'.': {},
                                                                                                                                    'f:defaultMode': {},
                                                                                                                                    'f:name': {}},
                                                                                                                    'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-namespace-by-pod"}': {'.': {},
                                                                                                                             'f:configMap': {'.': {},
                                                                                                                                             'f:defaultMode': {},
                                                                                                                                             'f:name': {}},
                                                                                                                             'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-namespace-by-workload"}': {'.': {},
                                                                                                                                  'f:configMap': {'.': {},
                                                                                                                                                  'f:defaultMode': {},
                                                                                                                                                  'f:name': {}},
                                                                                                                                  'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-node-cluster-rsrc-use"}': {'.': {},
                                                                                                                                  'f:configMap': {'.': {},
                                                                                                                                                  'f:defaultMode': {},
                                                                                                                                                  'f:name': {}},
                                                                                                                                  'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-node-rsrc-use"}': {'.': {},
                                                                                                                          'f:configMap': {'.': {},
                                                                                                                                          'f:defaultMode': {},
                                                                                                                                          'f:name': {}},
                                                                                                                          'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-nodes"}': {'.': {},
                                                                                                                  'f:configMap': {'.': {},
                                                                                                                                  'f:defaultMode': {},
                                                                                                                                  'f:name': {}},
                                                                                                                  'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-persistentvolumesusage"}': {'.': {},
                                                                                                                                   'f:configMap': {'.': {},
                                                                                                                                                   'f:defaultMode': {},
                                                                                                                                                   'f:name': {}},
                                                                                                                                   'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-pod-total"}': {'.': {},
                                                                                                                      'f:configMap': {'.': {},
                                                                                                                                      'f:defaultMode': {},
                                                                                                                                      'f:name': {}},
                                                                                                                      'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-prometheus"}': {'.': {},
                                                                                                                       'f:configMap': {'.': {},
                                                                                                                                       'f:defaultMode': {},
                                                                                                                                       'f:name': {}},
                                                                                                                       'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-prometheus-remote-write"}': {'.': {},
                                                                                                                                    'f:configMap': {'.': {},
                                                                                                                                                    'f:defaultMode': {},
                                                                                                                                                    'f:name': {}},
                                                                                                                                    'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-proxy"}': {'.': {},
                                                                                                                  'f:configMap': {'.': {},
                                                                                                                                  'f:defaultMode': {},
                                                                                                                                  'f:name': {}},
                                                                                                                  'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-scheduler"}': {'.': {},
                                                                                                                      'f:configMap': {'.': {},
                                                                                                                                      'f:defaultMode': {},
                                                                                                                                      'f:name': {}},
                                                                                                                      'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-statefulset"}': {'.': {},
                                                                                                                        'f:configMap': {'.': {},
                                                                                                                                        'f:defaultMode': {},
                                                                                                                                        'f:name': {}},
                                                                                                                        'f:name': {}},
                                                                         'k:{"name":"grafana-dashboard-workload-total"}': {'.': {},
                                                                                                                           'f:configMap': {'.': {},
                                                                                                                                           'f:defaultMode': {},
                                                                                                                                           'f:name': {}},
                                                                                                                           'f:name': {}},
                                                                         'k:{"name":"grafana-dashboards"}': {'.': {},
                                                                                                             'f:configMap': {'.': {},
                                                                                                                             'f:defaultMode': {},
                                                                                                                             'f:name': {}},
                                                                                                             'f:name': {}},
                                                                         'k:{"name":"grafana-datasources"}': {'.': {},
                                                                                                              'f:name': {},
                                                                                                              'f:secret': {'.': {},
                                                                                                                           'f:defaultMode': {},
                                                                                                                           'f:secretName': {}}},
                                                                         'k:{"name":"grafana-storage"}': {'.': {},
                                                                                                          'f:emptyDir': {},
                                                                                                          'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 25, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.171"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 40, tzinfo=tzutc())}],
              'name': 'grafana-86445dccbb-fhbrb',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'grafana-86445dccbb',
                                    'uid': '995d7b5d-8a58-46a0-a7e5-4d2d3058226a'}],
              'resource_version': '1814258',
              'self_link': '/api/v1/namespaces/monitoring/pods/grafana-86445dccbb-fhbrb',
              'uid': '31704fd3-a040-48d6-82ff-478115553bc6'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': None,
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'grafana/grafana:7.1.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'grafana',
                          'ports': [{'container_port': 3000,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'http',
                                     'protocol': 'TCP'}],
                          'readiness_probe': {'_exec': None,
                                              'failure_threshold': 3,
                                              'http_get': {'host': None,
                                                           'http_headers': None,
                                                           'path': '/api/health',
                                                           'port': 'http',
                                                           'scheme': 'HTTP'},
                                              'initial_delay_seconds': None,
                                              'period_seconds': 10,
                                              'success_threshold': 1,
                                              'tcp_socket': None,
                                              'timeout_seconds': 1},
                          'resources': {'limits': {'cpu': '200m',
                                                   'memory': '200Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '100Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/lib/grafana',
                                             'mount_propagation': None,
                                             'name': 'grafana-storage',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/grafana/provisioning/datasources',
                                             'mount_propagation': None,
                                             'name': 'grafana-datasources',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/grafana/provisioning/dashboards',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboards',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/apiserver',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-apiserver',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/cluster-total',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-cluster-total',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/controller-manager',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-controller-manager',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/k8s-resources-cluster',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-k8s-resources-cluster',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/k8s-resources-namespace',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-k8s-resources-namespace',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/k8s-resources-node',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-k8s-resources-node',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/k8s-resources-pod',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-k8s-resources-pod',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/k8s-resources-workload',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-k8s-resources-workload',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/k8s-resources-workloads-namespace',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-k8s-resources-workloads-namespace',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/kubelet',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-kubelet',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/namespace-by-pod',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-namespace-by-pod',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/namespace-by-workload',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-namespace-by-workload',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/node-cluster-rsrc-use',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-node-cluster-rsrc-use',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/node-rsrc-use',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-node-rsrc-use',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/nodes',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-nodes',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/persistentvolumesusage',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-persistentvolumesusage',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/pod-total',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-pod-total',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/prometheus-remote-write',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-prometheus-remote-write',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/prometheus',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-prometheus',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/proxy',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-proxy',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/scheduler',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-scheduler',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/statefulset',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-statefulset',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/grafana-dashboard-definitions/0/workload-total',
                                             'mount_propagation': None,
                                             'name': 'grafana-dashboard-workload-total',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'grafana-token-pq9hl',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': {'beta.kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': 65534,
                               'run_as_group': None,
                               'run_as_non_root': True,
                               'run_as_user': 65534,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'grafana',
          'service_account_name': 'grafana',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': {'medium': None, 'size_limit': None},
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-storage',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-datasources',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'grafana-datasources'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboards',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboards',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-apiserver',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-apiserver',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-cluster-total',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-cluster-total',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-controller-manager',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-controller-manager',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-k8s-resources-cluster',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-k8s-resources-cluster',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-k8s-resources-namespace',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-k8s-resources-namespace',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-k8s-resources-node',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-k8s-resources-node',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-k8s-resources-pod',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-k8s-resources-pod',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-k8s-resources-workload',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-k8s-resources-workload',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-k8s-resources-workloads-namespace',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-k8s-resources-workloads-namespace',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-kubelet',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-kubelet',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-namespace-by-pod',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-namespace-by-pod',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-namespace-by-workload',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-namespace-by-workload',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-node-cluster-rsrc-use',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-node-cluster-rsrc-use',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-node-rsrc-use',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-node-rsrc-use',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-nodes',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-nodes',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-persistentvolumesusage',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-persistentvolumesusage',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-pod-total',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-pod-total',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-prometheus-remote-write',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-prometheus-remote-write',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-prometheus',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-prometheus',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-proxy',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-proxy',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-scheduler',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-scheduler',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-statefulset',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-statefulset',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'grafana-dashboard-workload-total',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-dashboard-workload-total',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'grafana-token-pq9hl',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'grafana-token-pq9hl'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 47, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 35, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 23, 0, 51, 35, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 46, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://921f7d99b24642658d8e252637373273ca52899bb54f7c07281f9320d595943b',
                                    'image': 'grafana/grafana:7.1.0',
                                    'image_id': 'docker-pullable://grafana/grafana@sha256:89304bc2335f4976618548d7b93d165ed67369d3a051d2f627fc4e0aa3d0aff1',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://8ad3ca468c789e8011595d037a44ed2eee3e0b1e65435ac883110823f0ac71db',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 16, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'grafana',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 57, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.171'}],
            'pod_ip': '10.244.2.171',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 25, 8, 19, 47, tzinfo=tzutc())}}

monitoring:::::::::::kube-state-metrics-6cdc84dbd9-jzw28
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 25, 8, 19, 45, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'kube-state-metrics-6cdc84dbd9-',
              'generation': None,
              'labels': {'app.kubernetes.io/name': 'kube-state-metrics',
                         'app.kubernetes.io/version': '1.9.7',
                         'pod-template-hash': '6cdc84dbd9'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app.kubernetes.io/name': {},
                                                                            'f:app.kubernetes.io/version': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"3387f691-8154-4783-aa14-f709e4e97321"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"kube-rbac-proxy-main"}': {'.': {},
                                                                                                                  'f:args': {},
                                                                                                                  'f:image': {},
                                                                                                                  'f:imagePullPolicy': {},
                                                                                                                  'f:name': {},
                                                                                                                  'f:ports': {'.': {},
                                                                                                                              'k:{"containerPort":8443,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                            'f:containerPort': {},
                                                                                                                                                                            'f:name': {},
                                                                                                                                                                            'f:protocol': {}}},
                                                                                                                  'f:resources': {},
                                                                                                                  'f:securityContext': {'.': {},
                                                                                                                                        'f:runAsUser': {}},
                                                                                                                  'f:terminationMessagePath': {},
                                                                                                                  'f:terminationMessagePolicy': {}},
                                                                            'k:{"name":"kube-rbac-proxy-self"}': {'.': {},
                                                                                                                  'f:args': {},
                                                                                                                  'f:image': {},
                                                                                                                  'f:imagePullPolicy': {},
                                                                                                                  'f:name': {},
                                                                                                                  'f:ports': {'.': {},
                                                                                                                              'k:{"containerPort":9443,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                            'f:containerPort': {},
                                                                                                                                                                            'f:name': {},
                                                                                                                                                                            'f:protocol': {}}},
                                                                                                                  'f:resources': {},
                                                                                                                  'f:securityContext': {'.': {},
                                                                                                                                        'f:runAsUser': {}},
                                                                                                                  'f:terminationMessagePath': {},
                                                                                                                  'f:terminationMessagePolicy': {}},
                                                                            'k:{"name":"kube-state-metrics"}': {'.': {},
                                                                                                                'f:args': {},
                                                                                                                'f:image': {},
                                                                                                                'f:imagePullPolicy': {},
                                                                                                                'f:name': {},
                                                                                                                'f:resources': {},
                                                                                                                'f:securityContext': {'.': {},
                                                                                                                                      'f:runAsUser': {}},
                                                                                                                'f:terminationMessagePath': {},
                                                                                                                'f:terminationMessagePolicy': {}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 26, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.186"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 4, tzinfo=tzutc())}],
              'name': 'kube-state-metrics-6cdc84dbd9-jzw28',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'kube-state-metrics-6cdc84dbd9',
                                    'uid': '3387f691-8154-4783-aa14-f709e4e97321'}],
              'resource_version': '1814519',
              'self_link': '/api/v1/namespaces/monitoring/pods/kube-state-metrics-6cdc84dbd9-jzw28',
              'uid': '5f66812f-dbc5-4e68-b515-9e1a7015ace8'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--host=127.0.0.1',
                                   '--port=8081',
                                   '--telemetry-host=127.0.0.1',
                                   '--telemetry-port=8082'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/coreos/kube-state-metrics:v1.9.7',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-state-metrics',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': None,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': 65534,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'kube-state-metrics-token-7bbkx',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['--logtostderr',
                                   '--secure-listen-address=:8443',
                                   '--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305',
                                   '--upstream=http://127.0.0.1:8081/'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-rbac-proxy-main',
                          'ports': [{'container_port': 8443,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'https-main',
                                     'protocol': 'TCP'}],
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': None,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': 65534,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'kube-state-metrics-token-7bbkx',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['--logtostderr',
                                   '--secure-listen-address=:9443',
                                   '--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305',
                                   '--upstream=http://127.0.0.1:8082/'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-rbac-proxy-self',
                          'ports': [{'container_port': 9443,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'https-self',
                                     'protocol': 'TCP'}],
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': None,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': 65534,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'kube-state-metrics-token-7bbkx',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'kube-state-metrics',
          'service_account_name': 'kube-state-metrics',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'kube-state-metrics-token-7bbkx',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'kube-state-metrics-token-7bbkx'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 46, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 7, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 7, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 46, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://c3afd3e1ab61e4e2427df458e47d09393d2b52bfdc9db0ad4377b75bf56bea56',
                                    'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy@sha256:8ca9c9fd1f121126b7d39ea7344beb26b8eb02614b7deee66092caae12ec909f',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://5e9b3cb92a787077cbe20fed48766f9d497f5b02bbddd9e565f8a62b6a4f57ed',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 30, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 19, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-rbac-proxy-main',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 5, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://84497fa046e7882f06405bb5b812175a76f3ec644ded7b10dc3a7ba1b24ebc7e',
                                    'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy@sha256:8ca9c9fd1f121126b7d39ea7344beb26b8eb02614b7deee66092caae12ec909f',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://9a3890aef5ff98eba0a32547fa50176f157da4712e1331267547b64c43340b45',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 20, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-rbac-proxy-self',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 7, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://09c4c0c0731ca90a5b07d8fb0d89e466e893c16122c91ebf2647773eda9fb11d',
                                    'image': 'quay.mirrors.ustc.edu.cn/coreos/kube-state-metrics:v1.9.7',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/coreos/kube-state-metrics@sha256:2f82f0da199c60a7699c43c63a295c44e673242de0b7ee1b17c2d5a23bec34cb',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://be529f76907e9eb2b65780ead3900306801ddcbe95178fcb106c2ab885950026',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 30, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 16, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-state-metrics',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 4, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.186'}],
            'pod_ip': '10.244.2.186',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 25, 8, 19, 46, tzinfo=tzutc())}}

monitoring:::::::::::node-exporter-cd9fv
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 25, 8, 19, 45, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'node-exporter-',
              'generation': None,
              'labels': {'app.kubernetes.io/name': 'node-exporter',
                         'app.kubernetes.io/version': 'v0.18.1',
                         'controller-revision-hash': '76dfb9b669',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app.kubernetes.io/name': {},
                                                                            'f:app.kubernetes.io/version': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"be4485c0-bfdb-42e7-8833-fbb674f318cc"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"kube-rbac-proxy"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:env': {'.': {},
                                                                                                                       'k:{"name":"IP"}': {'.': {},
                                                                                                                                           'f:name': {},
                                                                                                                                           'f:valueFrom': {'.': {},
                                                                                                                                                           'f:fieldRef': {'.': {},
                                                                                                                                                                          'f:apiVersion': {},
                                                                                                                                                                          'f:fieldPath': {}}}}},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:ports': {'.': {},
                                                                                                                         'k:{"containerPort":9100,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                       'f:containerPort': {},
                                                                                                                                                                       'f:hostPort': {},
                                                                                                                                                                       'f:name': {},
                                                                                                                                                                       'f:protocol': {}}},
                                                                                                             'f:resources': {'.': {},
                                                                                                                             'f:limits': {'.': {},
                                                                                                                                          'f:cpu': {},
                                                                                                                                          'f:memory': {}},
                                                                                                                             'f:requests': {'.': {},
                                                                                                                                            'f:cpu': {},
                                                                                                                                            'f:memory': {}}},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {}},
                                                                            'k:{"name":"node-exporter"}': {'.': {},
                                                                                                           'f:args': {},
                                                                                                           'f:image': {},
                                                                                                           'f:imagePullPolicy': {},
                                                                                                           'f:name': {},
                                                                                                           'f:resources': {'.': {},
                                                                                                                           'f:limits': {'.': {},
                                                                                                                                        'f:cpu': {},
                                                                                                                                        'f:memory': {}},
                                                                                                                           'f:requests': {'.': {},
                                                                                                                                          'f:cpu': {},
                                                                                                                                          'f:memory': {}}},
                                                                                                           'f:terminationMessagePath': {},
                                                                                                           'f:terminationMessagePolicy': {},
                                                                                                           'f:volumeMounts': {'.': {},
                                                                                                                              'k:{"mountPath":"/host/proc"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:name': {}},
                                                                                                                              'k:{"mountPath":"/host/root"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:mountPropagation': {},
                                                                                                                                                               'f:name': {},
                                                                                                                                                               'f:readOnly': {}},
                                                                                                                              'k:{"mountPath":"/host/sys"}': {'.': {},
                                                                                                                                                              'f:mountPath': {},
                                                                                                                                                              'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:hostPID': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {'.': {},
                                                                                 'f:runAsNonRoot': {},
                                                                                 'f:runAsUser': {}},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"proc"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}},
                                                                         'k:{"name":"root"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}},
                                                                         'k:{"name":"sys"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 15, 5, 48, 58, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.100"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 22, 1, 19, 42, tzinfo=tzutc())}],
              'name': 'node-exporter-cd9fv',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'node-exporter',
                                    'uid': 'be4485c0-bfdb-42e7-8833-fbb674f318cc'}],
              'resource_version': '1686088',
              'self_link': '/api/v1/namespaces/monitoring/pods/node-exporter-cd9fv',
              'uid': 'c72289fc-a5e6-40cb-b219-d3439040176e'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['master']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': ['--web.listen-address=127.0.0.1:9100',
                                   '--path.procfs=/host/proc',
                                   '--path.sysfs=/host/sys',
                                   '--path.rootfs=/host/root',
                                   '--no-collector.wifi',
                                   '--no-collector.hwmon',
                                   '--collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/prometheus/node-exporter:v0.18.1',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'node-exporter',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '250m',
                                                   'memory': '180Mi'},
                                        'requests': {'cpu': '102m',
                                                     'memory': '180Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/host/proc',
                                             'mount_propagation': None,
                                             'name': 'proc',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/host/sys',
                                             'mount_propagation': None,
                                             'name': 'sys',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/host/root',
                                             'mount_propagation': 'HostToContainer',
                                             'name': 'root',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'node-exporter-token-5wv2s',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['--logtostderr',
                                   '--secure-listen-address=[$(IP)]:9100',
                                   '--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305',
                                   '--upstream=http://127.0.0.1:9100/'],
                          'command': None,
                          'env': [{'name': 'IP',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'status.podIP'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-rbac-proxy',
                          'ports': [{'container_port': 9100,
                                     'host_ip': None,
                                     'host_port': 9100,
                                     'name': 'https',
                                     'protocol': 'TCP'}],
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '20m',
                                                   'memory': '40Mi'},
                                        'requests': {'cpu': '10m',
                                                     'memory': '20Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'node-exporter-token-5wv2s',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': True,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'master',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': True,
                               'run_as_user': 65534,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'node-exporter',
          'service_account_name': 'node-exporter',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/proc', 'type': ''},
                       'iscsi': None,
                       'name': 'proc',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/sys', 'type': ''},
                       'iscsi': None,
                       'name': 'sys',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/', 'type': ''},
                       'iscsi': None,
                       'name': 'root',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'node-exporter-token-5wv2s',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'node-exporter-token-5wv2s'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 45, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 42, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 19, 42, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 45, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://7ac2229468a8f9d01086e3ec9b6bec5a1b7785fc7537388a046ab9ae81dfc767',
                                    'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy@sha256:8ca9c9fd1f121126b7d39ea7344beb26b8eb02614b7deee66092caae12ec909f',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://32f2546b3fe41eb55fd9d1a18c3fc55329cffef38b2487a71fd461def64fbcda',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 28, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 22, 1, 19, 23, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-rbac-proxy',
                                    'ready': True,
                                    'restart_count': 9,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 19, 41, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://f5c7ab48e7460efbf98f762425d7425937cdc79f9db01e9868f9734bb6210318',
                                    'image': 'quay.mirrors.ustc.edu.cn/prometheus/node-exporter:v0.18.1',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/prometheus/node-exporter@sha256:a2f29256e53cc3e0b64d7a472512600b2e9410347d53cdc85b49f659c17e02ee',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://6eb5fc52a314c58535db4a5ae9f569f49af7ea961905dbf5de3f727c68022d8f',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 18, 47, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 5, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'node-exporter',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 19, 21, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.100',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.100'}],
            'pod_ip': '192.168.242.100',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 25, 8, 19, 45, tzinfo=tzutc())}}

monitoring:::::::::::node-exporter-vhmwg
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 25, 8, 19, 45, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'node-exporter-',
              'generation': None,
              'labels': {'app.kubernetes.io/name': 'node-exporter',
                         'app.kubernetes.io/version': 'v0.18.1',
                         'controller-revision-hash': '76dfb9b669',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app.kubernetes.io/name': {},
                                                                            'f:app.kubernetes.io/version': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"be4485c0-bfdb-42e7-8833-fbb674f318cc"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"kube-rbac-proxy"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:env': {'.': {},
                                                                                                                       'k:{"name":"IP"}': {'.': {},
                                                                                                                                           'f:name': {},
                                                                                                                                           'f:valueFrom': {'.': {},
                                                                                                                                                           'f:fieldRef': {'.': {},
                                                                                                                                                                          'f:apiVersion': {},
                                                                                                                                                                          'f:fieldPath': {}}}}},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:ports': {'.': {},
                                                                                                                         'k:{"containerPort":9100,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                       'f:containerPort': {},
                                                                                                                                                                       'f:hostPort': {},
                                                                                                                                                                       'f:name': {},
                                                                                                                                                                       'f:protocol': {}}},
                                                                                                             'f:resources': {'.': {},
                                                                                                                             'f:limits': {'.': {},
                                                                                                                                          'f:cpu': {},
                                                                                                                                          'f:memory': {}},
                                                                                                                             'f:requests': {'.': {},
                                                                                                                                            'f:cpu': {},
                                                                                                                                            'f:memory': {}}},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {}},
                                                                            'k:{"name":"node-exporter"}': {'.': {},
                                                                                                           'f:args': {},
                                                                                                           'f:image': {},
                                                                                                           'f:imagePullPolicy': {},
                                                                                                           'f:name': {},
                                                                                                           'f:resources': {'.': {},
                                                                                                                           'f:limits': {'.': {},
                                                                                                                                        'f:cpu': {},
                                                                                                                                        'f:memory': {}},
                                                                                                                           'f:requests': {'.': {},
                                                                                                                                          'f:cpu': {},
                                                                                                                                          'f:memory': {}}},
                                                                                                           'f:terminationMessagePath': {},
                                                                                                           'f:terminationMessagePolicy': {},
                                                                                                           'f:volumeMounts': {'.': {},
                                                                                                                              'k:{"mountPath":"/host/proc"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:name': {}},
                                                                                                                              'k:{"mountPath":"/host/root"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:mountPropagation': {},
                                                                                                                                                               'f:name': {},
                                                                                                                                                               'f:readOnly': {}},
                                                                                                                              'k:{"mountPath":"/host/sys"}': {'.': {},
                                                                                                                                                              'f:mountPath': {},
                                                                                                                                                              'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:hostPID': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {'.': {},
                                                                                 'f:runAsNonRoot': {},
                                                                                 'f:runAsUser': {}},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"proc"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}},
                                                                         'k:{"name":"root"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}},
                                                                         'k:{"name":"sys"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 26, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.102"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 4, tzinfo=tzutc())}],
              'name': 'node-exporter-vhmwg',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'node-exporter',
                                    'uid': 'be4485c0-bfdb-42e7-8833-fbb674f318cc'}],
              'resource_version': '1814522',
              'self_link': '/api/v1/namespaces/monitoring/pods/node-exporter-vhmwg',
              'uid': 'fcf199d9-a270-4a45-942e-d95ddce7f9e5'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node2']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': ['--web.listen-address=127.0.0.1:9100',
                                   '--path.procfs=/host/proc',
                                   '--path.sysfs=/host/sys',
                                   '--path.rootfs=/host/root',
                                   '--no-collector.wifi',
                                   '--no-collector.hwmon',
                                   '--collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/prometheus/node-exporter:v0.18.1',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'node-exporter',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '250m',
                                                   'memory': '180Mi'},
                                        'requests': {'cpu': '102m',
                                                     'memory': '180Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/host/proc',
                                             'mount_propagation': None,
                                             'name': 'proc',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/host/sys',
                                             'mount_propagation': None,
                                             'name': 'sys',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/host/root',
                                             'mount_propagation': 'HostToContainer',
                                             'name': 'root',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'node-exporter-token-5wv2s',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['--logtostderr',
                                   '--secure-listen-address=[$(IP)]:9100',
                                   '--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305',
                                   '--upstream=http://127.0.0.1:9100/'],
                          'command': None,
                          'env': [{'name': 'IP',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'status.podIP'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-rbac-proxy',
                          'ports': [{'container_port': 9100,
                                     'host_ip': None,
                                     'host_port': 9100,
                                     'name': 'https',
                                     'protocol': 'TCP'}],
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '20m',
                                                   'memory': '40Mi'},
                                        'requests': {'cpu': '10m',
                                                     'memory': '20Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'node-exporter-token-5wv2s',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': True,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': True,
                               'run_as_user': 65534,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'node-exporter',
          'service_account_name': 'node-exporter',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/proc', 'type': ''},
                       'iscsi': None,
                       'name': 'proc',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/sys', 'type': ''},
                       'iscsi': None,
                       'name': 'sys',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/', 'type': ''},
                       'iscsi': None,
                       'name': 'root',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'node-exporter-token-5wv2s',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'node-exporter-token-5wv2s'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 45, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 56, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 56, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 45, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://1f463019b39194cbf45fd8eea4a412efd1b1ad87762e379100a934aa61fce25a',
                                    'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy@sha256:8ca9c9fd1f121126b7d39ea7344beb26b8eb02614b7deee66092caae12ec909f',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://889a347eeba31905eb93711e125663e593875c91a58d7a63507e2acfa554ab9b',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 15, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-rbac-proxy',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 54, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://b45e4d474e0521463b8de5e8fa0bc368f06d9ea46204b9d9b4740c525fe0c617',
                                    'image': 'quay.mirrors.ustc.edu.cn/prometheus/node-exporter:v0.18.1',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/prometheus/node-exporter@sha256:a2f29256e53cc3e0b64d7a472512600b2e9410347d53cdc85b49f659c17e02ee',
                                    'last_state': {'running': None,
                                                   'terminated': None,
                                                   'waiting': None},
                                    'name': 'node-exporter',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 51, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.102'}],
            'pod_ip': '192.168.242.102',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 25, 8, 19, 45, tzinfo=tzutc())}}

monitoring:::::::::::node-exporter-xl4zr
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 25, 8, 19, 44, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'node-exporter-',
              'generation': None,
              'labels': {'app.kubernetes.io/name': 'node-exporter',
                         'app.kubernetes.io/version': 'v0.18.1',
                         'controller-revision-hash': '76dfb9b669',
                         'pod-template-generation': '1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app.kubernetes.io/name': {},
                                                                            'f:app.kubernetes.io/version': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:pod-template-generation': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"be4485c0-bfdb-42e7-8833-fbb674f318cc"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:affinity': {'.': {},
                                                                          'f:nodeAffinity': {'.': {},
                                                                                             'f:requiredDuringSchedulingIgnoredDuringExecution': {'.': {},
                                                                                                                                                  'f:nodeSelectorTerms': {}}}},
                                                           'f:containers': {'k:{"name":"kube-rbac-proxy"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:env': {'.': {},
                                                                                                                       'k:{"name":"IP"}': {'.': {},
                                                                                                                                           'f:name': {},
                                                                                                                                           'f:valueFrom': {'.': {},
                                                                                                                                                           'f:fieldRef': {'.': {},
                                                                                                                                                                          'f:apiVersion': {},
                                                                                                                                                                          'f:fieldPath': {}}}}},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:ports': {'.': {},
                                                                                                                         'k:{"containerPort":9100,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                       'f:containerPort': {},
                                                                                                                                                                       'f:hostPort': {},
                                                                                                                                                                       'f:name': {},
                                                                                                                                                                       'f:protocol': {}}},
                                                                                                             'f:resources': {'.': {},
                                                                                                                             'f:limits': {'.': {},
                                                                                                                                          'f:cpu': {},
                                                                                                                                          'f:memory': {}},
                                                                                                                             'f:requests': {'.': {},
                                                                                                                                            'f:cpu': {},
                                                                                                                                            'f:memory': {}}},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {}},
                                                                            'k:{"name":"node-exporter"}': {'.': {},
                                                                                                           'f:args': {},
                                                                                                           'f:image': {},
                                                                                                           'f:imagePullPolicy': {},
                                                                                                           'f:name': {},
                                                                                                           'f:resources': {'.': {},
                                                                                                                           'f:limits': {'.': {},
                                                                                                                                        'f:cpu': {},
                                                                                                                                        'f:memory': {}},
                                                                                                                           'f:requests': {'.': {},
                                                                                                                                          'f:cpu': {},
                                                                                                                                          'f:memory': {}}},
                                                                                                           'f:terminationMessagePath': {},
                                                                                                           'f:terminationMessagePolicy': {},
                                                                                                           'f:volumeMounts': {'.': {},
                                                                                                                              'k:{"mountPath":"/host/proc"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:name': {}},
                                                                                                                              'k:{"mountPath":"/host/root"}': {'.': {},
                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                               'f:mountPropagation': {},
                                                                                                                                                               'f:name': {},
                                                                                                                                                               'f:readOnly': {}},
                                                                                                                              'k:{"mountPath":"/host/sys"}': {'.': {},
                                                                                                                                                              'f:mountPath': {},
                                                                                                                                                              'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostNetwork': {},
                                                           'f:hostPID': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {'.': {},
                                                                                 'f:runAsNonRoot': {},
                                                                                 'f:runAsUser': {}},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:tolerations': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"proc"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}},
                                                                         'k:{"name":"root"}': {'.': {},
                                                                                               'f:hostPath': {'.': {},
                                                                                                              'f:path': {},
                                                                                                              'f:type': {}},
                                                                                               'f:name': {}},
                                                                         'k:{"name":"sys"}': {'.': {},
                                                                                              'f:hostPath': {'.': {},
                                                                                                             'f:path': {},
                                                                                                             'f:type': {}},
                                                                                              'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"192.168.242.101"}': {'.': {},
                                                                                                         'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 50, tzinfo=tzutc())}],
              'name': 'node-exporter-xl4zr',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'DaemonSet',
                                    'name': 'node-exporter',
                                    'uid': 'be4485c0-bfdb-42e7-8833-fbb674f318cc'}],
              'resource_version': '1814406',
              'self_link': '/api/v1/namespaces/monitoring/pods/node-exporter-xl4zr',
              'uid': '5eba8410-bb5e-45a8-8503-7b3119bac91f'},
 'spec': {'active_deadline_seconds': None,
          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,
                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,
                                                                                                                          'match_fields': [{'key': 'metadata.name',
                                                                                                                                            'operator': 'In',
                                                                                                                                            'values': ['node1']}]}]}},
                       'pod_affinity': None,
                       'pod_anti_affinity': None},
          'automount_service_account_token': None,
          'containers': [{'args': ['--web.listen-address=127.0.0.1:9100',
                                   '--path.procfs=/host/proc',
                                   '--path.sysfs=/host/sys',
                                   '--path.rootfs=/host/root',
                                   '--no-collector.wifi',
                                   '--no-collector.hwmon',
                                   '--collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/prometheus/node-exporter:v0.18.1',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'node-exporter',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '250m',
                                                   'memory': '180Mi'},
                                        'requests': {'cpu': '102m',
                                                     'memory': '180Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/host/proc',
                                             'mount_propagation': None,
                                             'name': 'proc',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/host/sys',
                                             'mount_propagation': None,
                                             'name': 'sys',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/host/root',
                                             'mount_propagation': 'HostToContainer',
                                             'name': 'root',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'node-exporter-token-5wv2s',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['--logtostderr',
                                   '--secure-listen-address=[$(IP)]:9100',
                                   '--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305',
                                   '--upstream=http://127.0.0.1:9100/'],
                          'command': None,
                          'env': [{'name': 'IP',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'status.podIP'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-rbac-proxy',
                          'ports': [{'container_port': 9100,
                                     'host_ip': None,
                                     'host_port': 9100,
                                     'name': 'https',
                                     'protocol': 'TCP'}],
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '20m',
                                                   'memory': '40Mi'},
                                        'requests': {'cpu': '10m',
                                                     'memory': '20Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'node-exporter-token-5wv2s',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': True,
          'host_pid': True,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': True,
                               'run_as_user': 65534,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'node-exporter',
          'service_account_name': 'node-exporter',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': None,
                           'key': None,
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/disk-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/memory-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/pid-pressure',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/unschedulable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None},
                          {'effect': 'NoSchedule',
                           'key': 'node.kubernetes.io/network-unavailable',
                           'operator': 'Exists',
                           'toleration_seconds': None,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/proc', 'type': ''},
                       'iscsi': None,
                       'name': 'proc',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/sys', 'type': ''},
                       'iscsi': None,
                       'name': 'sys',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': {'path': '/', 'type': ''},
                       'iscsi': None,
                       'name': 'root',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'node-exporter-token-5wv2s',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'node-exporter-token-5wv2s'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 47, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 1, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 1, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 19, 45, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://44637596cb107e7f95d4c13a0141de0e6c9be5790966db73367ee801e99d11a5',
                                    'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy@sha256:8ca9c9fd1f121126b7d39ea7344beb26b8eb02614b7deee66092caae12ec909f',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://ad5d881ee3148b339863ed8fa2a1880622db7c127b72e3f210c87a4564baa97a',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 33, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-rbac-proxy',
                                    'ready': True,
                                    'restart_count': 8,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://3524338b1bdec0214e7e75b1644e64ff49df52abd8608485118463b6f88d0681',
                                    'image': 'quay.mirrors.ustc.edu.cn/prometheus/node-exporter:v0.18.1',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/prometheus/node-exporter@sha256:a2f29256e53cc3e0b64d7a472512600b2e9410347d53cdc85b49f659c17e02ee',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://d863036cf874b8bd75acb825fe07cbe65916e22e7d0c975e936b1da91bc403a6',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 44, 25, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'node-exporter',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 19, 53, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '192.168.242.101'}],
            'pod_ip': '192.168.242.101',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 25, 8, 19, 47, tzinfo=tzutc())}}

monitoring:::::::::::prometheus-adapter-66b855f564-qqt9l
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 25, 8, 21, 11, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'prometheus-adapter-66b855f564-',
              'generation': None,
              'labels': {'name': 'prometheus-adapter',
                         'pod-template-hash': '66b855f564'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:name': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"1b5c8d2a-3594-42bd-972b-00c9862a7c7b"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"prometheus-adapter"}': {'.': {},
                                                                                                                'f:args': {},
                                                                                                                'f:image': {},
                                                                                                                'f:imagePullPolicy': {},
                                                                                                                'f:name': {},
                                                                                                                'f:ports': {'.': {},
                                                                                                                            'k:{"containerPort":6443,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                          'f:containerPort': {},
                                                                                                                                                                          'f:protocol': {}}},
                                                                                                                'f:resources': {},
                                                                                                                'f:terminationMessagePath': {},
                                                                                                                'f:terminationMessagePolicy': {},
                                                                                                                'f:volumeMounts': {'.': {},
                                                                                                                                   'k:{"mountPath":"/etc/adapter"}': {'.': {},
                                                                                                                                                                      'f:mountPath': {},
                                                                                                                                                                      'f:name': {}},
                                                                                                                                   'k:{"mountPath":"/tmp"}': {'.': {},
                                                                                                                                                              'f:mountPath': {},
                                                                                                                                                              'f:name': {}},
                                                                                                                                   'k:{"mountPath":"/var/run/serving-cert"}': {'.': {},
                                                                                                                                                                               'f:mountPath': {},
                                                                                                                                                                               'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"config"}': {'.': {},
                                                                                                 'f:configMap': {'.': {},
                                                                                                                 'f:defaultMode': {},
                                                                                                                 'f:name': {}},
                                                                                                 'f:name': {}},
                                                                         'k:{"name":"tmpfs"}': {'.': {},
                                                                                                'f:emptyDir': {},
                                                                                                'f:name': {}},
                                                                         'k:{"name":"volume-serving-cert"}': {'.': {},
                                                                                                              'f:emptyDir': {},
                                                                                                              'f:name': {}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 55, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.155"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 46, tzinfo=tzutc())}],
              'name': 'prometheus-adapter-66b855f564-qqt9l',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'prometheus-adapter-66b855f564',
                                    'uid': '1b5c8d2a-3594-42bd-972b-00c9862a7c7b'}],
              'resource_version': '1814329',
              'self_link': '/api/v1/namespaces/monitoring/pods/prometheus-adapter-66b855f564-qqt9l',
              'uid': 'ba1af8fc-2327-41e0-a1a4-00118933c3c3'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--cert-dir=/var/run/serving-cert',
                                   '--config=/etc/adapter/config.yaml',
                                   '--logtostderr=true',
                                   '--metrics-relist-interval=1m',
                                   '--prometheus-url=http://prometheus-k8s.monitoring.svc.cluster.local:9090/',
                                   '--secure-port=6443'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'directxman12/k8s-prometheus-adapter:v0.7.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'prometheus-adapter',
                          'ports': [{'container_port': 6443,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': None,
                                     'protocol': 'TCP'}],
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/tmp',
                                             'mount_propagation': None,
                                             'name': 'tmpfs',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/serving-cert',
                                             'mount_propagation': None,
                                             'name': 'volume-serving-cert',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/adapter',
                                             'mount_propagation': None,
                                             'name': 'config',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'prometheus-adapter-token-vxmf8',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': None,
                               'run_as_user': None,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'prometheus-adapter',
          'service_account_name': 'prometheus-adapter',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': {'medium': None, 'size_limit': None},
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'tmpfs',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': {'medium': None, 'size_limit': None},
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'volume-serving-cert',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'adapter-config',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'config',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'prometheus-adapter-token-vxmf8',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'prometheus-adapter-token-vxmf8'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 22, 29, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 14, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 14, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 22, 28, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://077140a035a2f0f075c689fdb108f6c1dbb53983e3c934006a1a1411694c4ef5',
                                    'image': 'directxman12/k8s-prometheus-adapter:v0.7.0',
                                    'image_id': 'docker-pullable://directxman12/k8s-prometheus-adapter@sha256:44558d3ae98467e44fee72ebc3948ce59630996013a51d49cf925682a7b87c18',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://74e06f97b0f1eb79989e6b4a4ffdb2e4220d3ecdd4951eef4e529e8ba9ab4ea6',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 1, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'prometheus-adapter',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 10, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.155'}],
            'pod_ip': '10.244.1.155',
            'qos_class': 'BestEffort',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 25, 8, 22, 29, tzinfo=tzutc())}}

monitoring:::::::::::prometheus-k8s-0
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 27, 6, 45, 49, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'prometheus-k8s-',
              'generation': None,
              'labels': {'app': 'prometheus',
                         'controller-revision-hash': 'prometheus-k8s-5647f9c545',
                         'prometheus': 'k8s',
                         'statefulset.kubernetes.io/pod-name': 'prometheus-k8s-0'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:prometheus': {},
                                                                            'f:statefulset.kubernetes.io/pod-name': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"9abcd468-0ad6-4b76-9f79-4cf8dd938e73"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"prometheus"}': {'.': {},
                                                                                                        'f:args': {},
                                                                                                        'f:image': {},
                                                                                                        'f:imagePullPolicy': {},
                                                                                                        'f:livenessProbe': {'.': {},
                                                                                                                            'f:failureThreshold': {},
                                                                                                                            'f:httpGet': {'.': {},
                                                                                                                                          'f:path': {},
                                                                                                                                          'f:port': {},
                                                                                                                                          'f:scheme': {}},
                                                                                                                            'f:periodSeconds': {},
                                                                                                                            'f:successThreshold': {},
                                                                                                                            'f:timeoutSeconds': {}},
                                                                                                        'f:name': {},
                                                                                                        'f:ports': {'.': {},
                                                                                                                    'k:{"containerPort":9090,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                  'f:containerPort': {},
                                                                                                                                                                  'f:name': {},
                                                                                                                                                                  'f:protocol': {}}},
                                                                                                        'f:readinessProbe': {'.': {},
                                                                                                                             'f:failureThreshold': {},
                                                                                                                             'f:httpGet': {'.': {},
                                                                                                                                           'f:path': {},
                                                                                                                                           'f:port': {},
                                                                                                                                           'f:scheme': {}},
                                                                                                                             'f:periodSeconds': {},
                                                                                                                             'f:successThreshold': {},
                                                                                                                             'f:timeoutSeconds': {}},
                                                                                                        'f:resources': {'.': {},
                                                                                                                        'f:requests': {'.': {},
                                                                                                                                       'f:memory': {}}},
                                                                                                        'f:terminationMessagePath': {},
                                                                                                        'f:terminationMessagePolicy': {},
                                                                                                        'f:volumeMounts': {'.': {},
                                                                                                                           'k:{"mountPath":"/etc/prometheus/certs"}': {'.': {},
                                                                                                                                                                       'f:mountPath': {},
                                                                                                                                                                       'f:name': {},
                                                                                                                                                                       'f:readOnly': {}},
                                                                                                                           'k:{"mountPath":"/etc/prometheus/config_out"}': {'.': {},
                                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                                            'f:name': {},
                                                                                                                                                                            'f:readOnly': {}},
                                                                                                                           'k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}': {'.': {},
                                                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                                                  'f:name': {}},
                                                                                                                           'k:{"mountPath":"/prometheus"}': {'.': {},
                                                                                                                                                             'f:mountPath': {},
                                                                                                                                                             'f:name': {}}}},
                                                                            'k:{"name":"prometheus-config-reloader"}': {'.': {},
                                                                                                                        'f:args': {},
                                                                                                                        'f:command': {},
                                                                                                                        'f:env': {'.': {},
                                                                                                                                  'k:{"name":"POD_NAME"}': {'.': {},
                                                                                                                                                            'f:name': {},
                                                                                                                                                            'f:valueFrom': {'.': {},
                                                                                                                                                                            'f:fieldRef': {'.': {},
                                                                                                                                                                                           'f:apiVersion': {},
                                                                                                                                                                                           'f:fieldPath': {}}}}},
                                                                                                                        'f:image': {},
                                                                                                                        'f:imagePullPolicy': {},
                                                                                                                        'f:name': {},
                                                                                                                        'f:resources': {'.': {},
                                                                                                                                        'f:limits': {'.': {},
                                                                                                                                                     'f:cpu': {},
                                                                                                                                                     'f:memory': {}},
                                                                                                                                        'f:requests': {'.': {},
                                                                                                                                                       'f:cpu': {},
                                                                                                                                                       'f:memory': {}}},
                                                                                                                        'f:terminationMessagePath': {},
                                                                                                                        'f:terminationMessagePolicy': {},
                                                                                                                        'f:volumeMounts': {'.': {},
                                                                                                                                           'k:{"mountPath":"/etc/prometheus/config"}': {'.': {},
                                                                                                                                                                                        'f:mountPath': {},
                                                                                                                                                                                        'f:name': {}},
                                                                                                                                           'k:{"mountPath":"/etc/prometheus/config_out"}': {'.': {},
                                                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                                                            'f:name': {}}}},
                                                                            'k:{"name":"rules-configmap-reloader"}': {'.': {},
                                                                                                                      'f:args': {},
                                                                                                                      'f:image': {},
                                                                                                                      'f:imagePullPolicy': {},
                                                                                                                      'f:name': {},
                                                                                                                      'f:resources': {'.': {},
                                                                                                                                      'f:limits': {'.': {},
                                                                                                                                                   'f:cpu': {},
                                                                                                                                                   'f:memory': {}},
                                                                                                                                      'f:requests': {'.': {},
                                                                                                                                                     'f:cpu': {},
                                                                                                                                                     'f:memory': {}}},
                                                                                                                      'f:terminationMessagePath': {},
                                                                                                                      'f:terminationMessagePolicy': {},
                                                                                                                      'f:volumeMounts': {'.': {},
                                                                                                                                         'k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}': {'.': {},
                                                                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                                                                'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostname': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {'.': {},
                                                                                 'f:fsGroup': {},
                                                                                 'f:runAsNonRoot': {},
                                                                                 'f:runAsUser': {}},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:subdomain': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"config"}': {'.': {},
                                                                                                 'f:name': {},
                                                                                                 'f:secret': {'.': {},
                                                                                                              'f:defaultMode': {},
                                                                                                              'f:secretName': {}}},
                                                                         'k:{"name":"config-out"}': {'.': {},
                                                                                                     'f:emptyDir': {},
                                                                                                     'f:name': {}},
                                                                         'k:{"name":"prometheus-k8s-db"}': {'.': {},
                                                                                                            'f:emptyDir': {},
                                                                                                            'f:name': {}},
                                                                         'k:{"name":"prometheus-k8s-rulefiles-0"}': {'.': {},
                                                                                                                     'f:configMap': {'.': {},
                                                                                                                                     'f:defaultMode': {},
                                                                                                                                     'f:name': {}},
                                                                                                                     'f:name': {}},
                                                                         'k:{"name":"tls-assets"}': {'.': {},
                                                                                                     'f:name': {},
                                                                                                     'f:secret': {'.': {},
                                                                                                                  'f:defaultMode': {},
                                                                                                                  'f:secretName': {}}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 48, 54, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.1.156"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 51, tzinfo=tzutc())}],
              'name': 'prometheus-k8s-0',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'StatefulSet',
                                    'name': 'prometheus-k8s',
                                    'uid': '9abcd468-0ad6-4b76-9f79-4cf8dd938e73'}],
              'resource_version': '1814426',
              'self_link': '/api/v1/namespaces/monitoring/pods/prometheus-k8s-0',
              'uid': 'e9e95e04-f6e8-4cc8-8a59-bf9bdfe2db74'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--web.console.templates=/etc/prometheus/consoles',
                                   '--web.console.libraries=/etc/prometheus/console_libraries',
                                   '--config.file=/etc/prometheus/config_out/prometheus.env.yaml',
                                   '--storage.tsdb.path=/prometheus',
                                   '--storage.tsdb.retention.time=24h',
                                   '--web.enable-lifecycle',
                                   '--storage.tsdb.no-lockfile',
                                   '--web.route-prefix=/'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'quay.io/prometheus/prometheus:v2.20.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': None,
                                             'failure_threshold': 6,
                                             'http_get': {'host': None,
                                                          'http_headers': None,
                                                          'path': '/-/healthy',
                                                          'port': 'web',
                                                          'scheme': 'HTTP'},
                                             'initial_delay_seconds': None,
                                             'period_seconds': 5,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 3},
                          'name': 'prometheus',
                          'ports': [{'container_port': 9090,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'web',
                                     'protocol': 'TCP'}],
                          'readiness_probe': {'_exec': None,
                                              'failure_threshold': 120,
                                              'http_get': {'host': None,
                                                           'http_headers': None,
                                                           'path': '/-/ready',
                                                           'port': 'web',
                                                           'scheme': 'HTTP'},
                                              'initial_delay_seconds': None,
                                              'period_seconds': 5,
                                              'success_threshold': 1,
                                              'tcp_socket': None,
                                              'timeout_seconds': 3},
                          'resources': {'limits': None,
                                        'requests': {'memory': '400Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/prometheus/config_out',
                                             'mount_propagation': None,
                                             'name': 'config-out',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/prometheus/certs',
                                             'mount_propagation': None,
                                             'name': 'tls-assets',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/prometheus',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-db',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/prometheus/rules/prometheus-k8s-rulefiles-0',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-rulefiles-0',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-token-vz5vz',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['--log-format=logfmt',
                                   '--reload-url=http://localhost:9090/-/reload',
                                   '--config-file=/etc/prometheus/config/prometheus.yaml.gz',
                                   '--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml'],
                          'command': ['/bin/prometheus-config-reloader'],
                          'env': [{'name': 'POD_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.name'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/prometheus-operator/prometheus-config-reloader:v0.42.1',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'prometheus-config-reloader',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '100m',
                                                   'memory': '25Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '25Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/prometheus/config',
                                             'mount_propagation': None,
                                             'name': 'config',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/prometheus/config_out',
                                             'mount_propagation': None,
                                             'name': 'config-out',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-token-vz5vz',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['--webhook-url=http://localhost:9090/-/reload',
                                   '--volume-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'jimmidyson/configmap-reload:v0.4.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'rules-configmap-reloader',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '100m',
                                                   'memory': '25Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '25Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/prometheus/rules/prometheus-k8s-rulefiles-0',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-rulefiles-0',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-token-vz5vz',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': 'prometheus-k8s-0',
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node1',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': 2000,
                               'run_as_group': None,
                               'run_as_non_root': True,
                               'run_as_user': 1000,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'prometheus-k8s',
          'service_account_name': 'prometheus-k8s',
          'share_process_namespace': None,
          'subdomain': 'prometheus-operated',
          'termination_grace_period_seconds': 600,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'config',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'prometheus-k8s'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'tls-assets',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'prometheus-k8s-tls-assets'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': {'medium': None, 'size_limit': None},
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'config-out',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'prometheus-k8s-rulefiles-0',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'prometheus-k8s-rulefiles-0',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': {'medium': None, 'size_limit': None},
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'prometheus-k8s-db',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'prometheus-k8s-token-vz5vz',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'prometheus-k8s-token-vz5vz'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 27, 6, 45, 46, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 28, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 20, 28, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 27, 6, 45, 49, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://cd985dfb3f725f55164d0f1a2b1f706d7b3c3754bdbc677731bded90720a634e',
                                    'image': 'quay.io/prometheus/prometheus:v2.20.0',
                                    'image_id': 'docker-pullable://quay.io/prometheus/prometheus@sha256:d4ba4dd1a9ebb90916d0bfed3c204adcb118ed24546bf8dd2e6b30fc0fd2009e',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://9911cc8792a31007b27d7fb76a12a08ba86dbb43943495312d557267592b8ffc',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': '=8m46s&timeoutSeconds=526&watch=true\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.1.0.1:443: '
                                                                             'connect: '
                                                                             'connection '
                                                                             'refused"\n'
                                                                             'level=error '
                                                                             'ts=2020-10-21T08:31:15.398Z '
                                                                             'caller=klog.go:94 '
                                                                             'component=k8s_client_runtime '
                                                                             'func=ErrorDepth '
                                                                             'msg="/app/discovery/kubernetes/kubernetes.go:363: '
                                                                             'Failed '
                                                                             'to '
                                                                             'watch '
                                                                             '*v1.Pod: '
                                                                             'Get '
                                                                             '\\"https://10.1.0.1:443/api/v1/namespaces/kube-system/pods?allowWatchBookmarks=true&resourceVersion=1685949&timeout=5m7s&timeoutSeconds=307&watch=true\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.1.0.1:443: '
                                                                             'connect: '
                                                                             'connection '
                                                                             'refused"\n'
                                                                             'level=error '
                                                                             'ts=2020-10-21T08:31:15.398Z '
                                                                             'caller=klog.go:94 '
                                                                             'component=k8s_client_runtime '
                                                                             'func=ErrorDepth '
                                                                             'msg="/app/discovery/kubernetes/kubernetes.go:362: '
                                                                             'Failed '
                                                                             'to '
                                                                             'watch '
                                                                             '*v1.Service: '
                                                                             'Get '
                                                                             '\\"https://10.1.0.1:443/api/v1/namespaces/kube-system/services?allowWatchBookmarks=true&resourceVersion=1685929&timeout=5m17s&timeoutSeconds=317&watch=true\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.1.0.1:443: '
                                                                             'connect: '
                                                                             'connection '
                                                                             'refused"\n'
                                                                             'level=error '
                                                                             'ts=2020-10-21T08:31:15.398Z '
                                                                             'caller=klog.go:94 '
                                                                             'component=k8s_client_runtime '
                                                                             'func=ErrorDepth '
                                                                             'msg="/app/discovery/kubernetes/kubernetes.go:362: '
                                                                             'Failed '
                                                                             'to '
                                                                             'watch '
                                                                             '*v1.Service: '
                                                                             'Get '
                                                                             '\\"https://10.1.0.1:443/api/v1/namespaces/monitoring/services?allowWatchBookmarks=true&resourceVersion=1685929&timeout=8m39s&timeoutSeconds=519&watch=true\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.1.0.1:443: '
                                                                             'connect: '
                                                                             'connection '
                                                                             'refused"\n'
                                                                             'level=error '
                                                                             'ts=2020-10-21T08:31:15.398Z '
                                                                             'caller=klog.go:94 '
                                                                             'component=k8s_client_runtime '
                                                                             'func=ErrorDepth '
                                                                             'msg="/app/discovery/kubernetes/kubernetes.go:362: '
                                                                             'Failed '
                                                                             'to '
                                                                             'watch '
                                                                             '*v1.Service: '
                                                                             'Get '
                                                                             '\\"https://10.1.0.1:443/api/v1/namespaces/monitoring/services?allowWatchBookmarks=true&resourceVersion=1685929&timeout=9m33s&timeoutSeconds=573&watch=true\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.1.0.1:443: '
                                                                             'connect: '
                                                                             'connection '
                                                                             'refused"\n'
                                                                             'level=error '
                                                                             'ts=2020-10-21T08:31:16.314Z '
                                                                             'caller=klog.go:94 '
                                                                             'component=k8s_client_runtime '
                                                                             'func=ErrorDepth '
                                                                             'msg="/app/discovery/kubernetes/kubernetes.go:363: '
                                                                             'Failed '
                                                                             'to '
                                                                             'watch '
                                                                             '*v1.Pod: '
                                                                             'Get '
                                                                             '\\"https://10.1.0.1:443/api/v1/namespaces/default/pods?allowWatchBookmarks=true&resourceVersion=1685929&timeout=5m0s&timeoutSeconds=300&watch=true\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.1.0.1:443: '
                                                                             'connect: '
                                                                             'connection '
                                                                             'refused"\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 9, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'prometheus',
                                    'ready': True,
                                    'restart_count': 8,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 11, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://0e4f45451c1cfb8ebe47982fadf8720c4eabcd748e01a918b6e25085741000ba',
                                    'image': 'quay.mirrors.ustc.edu.cn/prometheus-operator/prometheus-config-reloader:v0.42.1',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/prometheus-operator/prometheus-config-reloader@sha256:d78d10ef97738d1d2944c3ea38d87fee014eb9a994e08799a05b481ab34196b0',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://1c91cd777da5ef70c54019e4c195a5762c598d076e98f2bd75e3adae1c905ccc',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': 'ts=2020-10-19T02:45:12.917112214Z '
                                                                             'caller=main.go:87 '
                                                                             'msg="Starting '
                                                                             'prometheus-config-reloader '
                                                                             'version '
                                                                             '\'0.42.1\'."\n'
                                                                             'level=info '
                                                                             'ts=2020-10-19T02:45:15.998860548Z '
                                                                             'caller=reloader.go:289 '
                                                                             'msg="Prometheus '
                                                                             'reload '
                                                                             'triggered" '
                                                                             'cfg_in=/etc/prometheus/config/prometheus.yaml.gz '
                                                                             'cfg_out=/etc/prometheus/config_out/prometheus.env.yaml '
                                                                             'rule_dirs=\n'
                                                                             'level=info '
                                                                             'ts=2020-10-19T02:45:15.998995389Z '
                                                                             'caller=reloader.go:157 '
                                                                             'msg="started '
                                                                             'watching '
                                                                             'config '
                                                                             'file '
                                                                             'and '
                                                                             'non-recursively '
                                                                             'rule '
                                                                             'dirs '
                                                                             'for '
                                                                             'changes" '
                                                                             'cfg=/etc/prometheus/config/prometheus.yaml.gz '
                                                                             'out=/etc/prometheus/config_out/prometheus.env.yaml '
                                                                             'dirs=\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 12, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'prometheus-config-reloader',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 13, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://2366d5255d9280bdef2d4b0832243ef078e07c61634e73cfd0c99705fcbc08ad',
                                    'image': 'jimmidyson/configmap-reload:v0.4.0',
                                    'image_id': 'docker-pullable://jimmidyson/configmap-reload@sha256:17d34fd73f9e8a78ba7da269d96822ce8972391c2838e08d92a990136adb8e4a',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://3c8c1bf1cb35da91168376915bfde25e96ce18fcb7cc6b6fdd7b4fdee7c4e0e3',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 19, 36, tzinfo=tzutc()),
                                                                  'message': '2020/10/19 '
                                                                             '02:45:13 '
                                                                             'Watching '
                                                                             'directory: '
                                                                             '"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 19, 2, 45, 13, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'rules-configmap-reloader',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 20, 13, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.101',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.1.156'}],
            'pod_ip': '10.244.1.156',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 27, 6, 45, 46, tzinfo=tzutc())}}

monitoring:::::::::::prometheus-k8s-1
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 27, 6, 31, 2, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'prometheus-k8s-',
              'generation': None,
              'labels': {'app': 'prometheus',
                         'controller-revision-hash': 'prometheus-k8s-5647f9c545',
                         'prometheus': 'k8s',
                         'statefulset.kubernetes.io/pod-name': 'prometheus-k8s-1'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app': {},
                                                                            'f:controller-revision-hash': {},
                                                                            'f:prometheus': {},
                                                                            'f:statefulset.kubernetes.io/pod-name': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"9abcd468-0ad6-4b76-9f79-4cf8dd938e73"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"prometheus"}': {'.': {},
                                                                                                        'f:args': {},
                                                                                                        'f:image': {},
                                                                                                        'f:imagePullPolicy': {},
                                                                                                        'f:livenessProbe': {'.': {},
                                                                                                                            'f:failureThreshold': {},
                                                                                                                            'f:httpGet': {'.': {},
                                                                                                                                          'f:path': {},
                                                                                                                                          'f:port': {},
                                                                                                                                          'f:scheme': {}},
                                                                                                                            'f:periodSeconds': {},
                                                                                                                            'f:successThreshold': {},
                                                                                                                            'f:timeoutSeconds': {}},
                                                                                                        'f:name': {},
                                                                                                        'f:ports': {'.': {},
                                                                                                                    'k:{"containerPort":9090,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                  'f:containerPort': {},
                                                                                                                                                                  'f:name': {},
                                                                                                                                                                  'f:protocol': {}}},
                                                                                                        'f:readinessProbe': {'.': {},
                                                                                                                             'f:failureThreshold': {},
                                                                                                                             'f:httpGet': {'.': {},
                                                                                                                                           'f:path': {},
                                                                                                                                           'f:port': {},
                                                                                                                                           'f:scheme': {}},
                                                                                                                             'f:periodSeconds': {},
                                                                                                                             'f:successThreshold': {},
                                                                                                                             'f:timeoutSeconds': {}},
                                                                                                        'f:resources': {'.': {},
                                                                                                                        'f:requests': {'.': {},
                                                                                                                                       'f:memory': {}}},
                                                                                                        'f:terminationMessagePath': {},
                                                                                                        'f:terminationMessagePolicy': {},
                                                                                                        'f:volumeMounts': {'.': {},
                                                                                                                           'k:{"mountPath":"/etc/prometheus/certs"}': {'.': {},
                                                                                                                                                                       'f:mountPath': {},
                                                                                                                                                                       'f:name': {},
                                                                                                                                                                       'f:readOnly': {}},
                                                                                                                           'k:{"mountPath":"/etc/prometheus/config_out"}': {'.': {},
                                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                                            'f:name': {},
                                                                                                                                                                            'f:readOnly': {}},
                                                                                                                           'k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}': {'.': {},
                                                                                                                                                                                                  'f:mountPath': {},
                                                                                                                                                                                                  'f:name': {}},
                                                                                                                           'k:{"mountPath":"/prometheus"}': {'.': {},
                                                                                                                                                             'f:mountPath': {},
                                                                                                                                                             'f:name': {}}}},
                                                                            'k:{"name":"prometheus-config-reloader"}': {'.': {},
                                                                                                                        'f:args': {},
                                                                                                                        'f:command': {},
                                                                                                                        'f:env': {'.': {},
                                                                                                                                  'k:{"name":"POD_NAME"}': {'.': {},
                                                                                                                                                            'f:name': {},
                                                                                                                                                            'f:valueFrom': {'.': {},
                                                                                                                                                                            'f:fieldRef': {'.': {},
                                                                                                                                                                                           'f:apiVersion': {},
                                                                                                                                                                                           'f:fieldPath': {}}}}},
                                                                                                                        'f:image': {},
                                                                                                                        'f:imagePullPolicy': {},
                                                                                                                        'f:name': {},
                                                                                                                        'f:resources': {'.': {},
                                                                                                                                        'f:limits': {'.': {},
                                                                                                                                                     'f:cpu': {},
                                                                                                                                                     'f:memory': {}},
                                                                                                                                        'f:requests': {'.': {},
                                                                                                                                                       'f:cpu': {},
                                                                                                                                                       'f:memory': {}}},
                                                                                                                        'f:terminationMessagePath': {},
                                                                                                                        'f:terminationMessagePolicy': {},
                                                                                                                        'f:volumeMounts': {'.': {},
                                                                                                                                           'k:{"mountPath":"/etc/prometheus/config"}': {'.': {},
                                                                                                                                                                                        'f:mountPath': {},
                                                                                                                                                                                        'f:name': {}},
                                                                                                                                           'k:{"mountPath":"/etc/prometheus/config_out"}': {'.': {},
                                                                                                                                                                                            'f:mountPath': {},
                                                                                                                                                                                            'f:name': {}}}},
                                                                            'k:{"name":"rules-configmap-reloader"}': {'.': {},
                                                                                                                      'f:args': {},
                                                                                                                      'f:image': {},
                                                                                                                      'f:imagePullPolicy': {},
                                                                                                                      'f:name': {},
                                                                                                                      'f:resources': {'.': {},
                                                                                                                                      'f:limits': {'.': {},
                                                                                                                                                   'f:cpu': {},
                                                                                                                                                   'f:memory': {}},
                                                                                                                                      'f:requests': {'.': {},
                                                                                                                                                     'f:cpu': {},
                                                                                                                                                     'f:memory': {}}},
                                                                                                                      'f:terminationMessagePath': {},
                                                                                                                      'f:terminationMessagePolicy': {},
                                                                                                                      'f:volumeMounts': {'.': {},
                                                                                                                                         'k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}': {'.': {},
                                                                                                                                                                                                                'f:mountPath': {},
                                                                                                                                                                                                                'f:name': {}}}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:hostname': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {'.': {},
                                                                                 'f:fsGroup': {},
                                                                                 'f:runAsNonRoot': {},
                                                                                 'f:runAsUser': {}},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:subdomain': {},
                                                           'f:terminationGracePeriodSeconds': {},
                                                           'f:volumes': {'.': {},
                                                                         'k:{"name":"config"}': {'.': {},
                                                                                                 'f:name': {},
                                                                                                 'f:secret': {'.': {},
                                                                                                              'f:defaultMode': {},
                                                                                                              'f:secretName': {}}},
                                                                         'k:{"name":"config-out"}': {'.': {},
                                                                                                     'f:emptyDir': {},
                                                                                                     'f:name': {}},
                                                                         'k:{"name":"prometheus-k8s-db"}': {'.': {},
                                                                                                            'f:emptyDir': {},
                                                                                                            'f:name': {}},
                                                                         'k:{"name":"prometheus-k8s-rulefiles-0"}': {'.': {},
                                                                                                                     'f:configMap': {'.': {},
                                                                                                                                     'f:defaultMode': {},
                                                                                                                                     'f:name': {}},
                                                                                                                     'f:name': {}},
                                                                         'k:{"name":"tls-assets"}': {'.': {},
                                                                                                     'f:name': {},
                                                                                                     'f:secret': {'.': {},
                                                                                                                  'f:defaultMode': {},
                                                                                                                  'f:secretName': {}}}}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 26, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.181"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 52, 2, tzinfo=tzutc())}],
              'name': 'prometheus-k8s-1',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'StatefulSet',
                                    'name': 'prometheus-k8s',
                                    'uid': '9abcd468-0ad6-4b76-9f79-4cf8dd938e73'}],
              'resource_version': '1814515',
              'self_link': '/api/v1/namespaces/monitoring/pods/prometheus-k8s-1',
              'uid': '07050783-1721-409c-947c-caa8522f4aba'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--web.console.templates=/etc/prometheus/consoles',
                                   '--web.console.libraries=/etc/prometheus/console_libraries',
                                   '--config.file=/etc/prometheus/config_out/prometheus.env.yaml',
                                   '--storage.tsdb.path=/prometheus',
                                   '--storage.tsdb.retention.time=24h',
                                   '--web.enable-lifecycle',
                                   '--storage.tsdb.no-lockfile',
                                   '--web.route-prefix=/'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'quay.io/prometheus/prometheus:v2.20.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': {'_exec': None,
                                             'failure_threshold': 6,
                                             'http_get': {'host': None,
                                                          'http_headers': None,
                                                          'path': '/-/healthy',
                                                          'port': 'web',
                                                          'scheme': 'HTTP'},
                                             'initial_delay_seconds': None,
                                             'period_seconds': 5,
                                             'success_threshold': 1,
                                             'tcp_socket': None,
                                             'timeout_seconds': 3},
                          'name': 'prometheus',
                          'ports': [{'container_port': 9090,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'web',
                                     'protocol': 'TCP'}],
                          'readiness_probe': {'_exec': None,
                                              'failure_threshold': 120,
                                              'http_get': {'host': None,
                                                           'http_headers': None,
                                                           'path': '/-/ready',
                                                           'port': 'web',
                                                           'scheme': 'HTTP'},
                                              'initial_delay_seconds': None,
                                              'period_seconds': 5,
                                              'success_threshold': 1,
                                              'tcp_socket': None,
                                              'timeout_seconds': 3},
                          'resources': {'limits': None,
                                        'requests': {'memory': '400Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/prometheus/config_out',
                                             'mount_propagation': None,
                                             'name': 'config-out',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/prometheus/certs',
                                             'mount_propagation': None,
                                             'name': 'tls-assets',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/prometheus',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-db',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/prometheus/rules/prometheus-k8s-rulefiles-0',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-rulefiles-0',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-token-vz5vz',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['--log-format=logfmt',
                                   '--reload-url=http://localhost:9090/-/reload',
                                   '--config-file=/etc/prometheus/config/prometheus.yaml.gz',
                                   '--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml'],
                          'command': ['/bin/prometheus-config-reloader'],
                          'env': [{'name': 'POD_NAME',
                                   'value': None,
                                   'value_from': {'config_map_key_ref': None,
                                                  'field_ref': {'api_version': 'v1',
                                                                'field_path': 'metadata.name'},
                                                  'resource_field_ref': None,
                                                  'secret_key_ref': None}}],
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/prometheus-operator/prometheus-config-reloader:v0.42.1',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'prometheus-config-reloader',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '100m',
                                                   'memory': '25Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '25Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/prometheus/config',
                                             'mount_propagation': None,
                                             'name': 'config',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/etc/prometheus/config_out',
                                             'mount_propagation': None,
                                             'name': 'config-out',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-token-vz5vz',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['--webhook-url=http://localhost:9090/-/reload',
                                   '--volume-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'jimmidyson/configmap-reload:v0.4.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'rules-configmap-reloader',
                          'ports': None,
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '100m',
                                                   'memory': '25Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '25Mi'}},
                          'security_context': None,
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'FallbackToLogsOnError',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/etc/prometheus/rules/prometheus-k8s-rulefiles-0',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-rulefiles-0',
                                             'read_only': None,
                                             'sub_path': None,
                                             'sub_path_expr': None},
                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'prometheus-k8s-token-vz5vz',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': 'prometheus-k8s-1',
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': {'kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': 2000,
                               'run_as_group': None,
                               'run_as_non_root': True,
                               'run_as_user': 1000,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'prometheus-k8s',
          'service_account_name': 'prometheus-k8s',
          'share_process_namespace': None,
          'subdomain': 'prometheus-operated',
          'termination_grace_period_seconds': 600,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'config',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'prometheus-k8s'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'tls-assets',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'prometheus-k8s-tls-assets'},
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': {'medium': None, 'size_limit': None},
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'config-out',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': {'default_mode': 420,
                                      'items': None,
                                      'name': 'prometheus-k8s-rulefiles-0',
                                      'optional': None},
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'prometheus-k8s-rulefiles-0',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': {'medium': None, 'size_limit': None},
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'prometheus-k8s-db',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': None,
                       'storageos': None,
                       'vsphere_volume': None},
                      {'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'prometheus-k8s-token-vz5vz',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'prometheus-k8s-token-vz5vz'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 27, 6, 31, 1, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 17, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 17, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 27, 6, 31, 2, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://0b0485b7034e33d472d01ed7f6bb2474f8e3de0b7637e9ba716689f4a3d90389',
                                    'image': 'quay.io/prometheus/prometheus:v2.20.0',
                                    'image_id': 'docker-pullable://quay.io/prometheus/prometheus@sha256:d4ba4dd1a9ebb90916d0bfed3c204adcb118ed24546bf8dd2e6b30fc0fd2009e',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://ba80e76b0837d1b9cca85054d70bb287c4a92c5d5d2b4779ed1104f80fc1ab21',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': 'tps://10.1.0.1:443/api/v1/namespaces/default/pods?resourceVersion=1685929\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.1.0.1:443: '
                                                                             'i/o '
                                                                             'timeout"\n'
                                                                             'level=error '
                                                                             'ts=2020-10-21T08:35:40.685Z '
                                                                             'caller=klog.go:94 '
                                                                             'component=k8s_client_runtime '
                                                                             'func=ErrorDepth '
                                                                             'msg="/app/discovery/kubernetes/kubernetes.go:363: '
                                                                             'Failed '
                                                                             'to '
                                                                             'list '
                                                                             '*v1.Pod: '
                                                                             'Get '
                                                                             '\\"https://10.1.0.1:443/api/v1/namespaces/monitoring/pods?resourceVersion=1685929\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.1.0.1:443: '
                                                                             'connect: '
                                                                             'no '
                                                                             'route '
                                                                             'to '
                                                                             'host"\n'
                                                                             'level=error '
                                                                             'ts=2020-10-21T08:35:41.924Z '
                                                                             'caller=notifier.go:527 '
                                                                             'component=notifier '
                                                                             'alertmanager=http://10.244.1.140:9093/api/v1/alerts '
                                                                             'count=1 '
                                                                             'msg="Error '
                                                                             'sending '
                                                                             'alert" '
                                                                             'err="Post '
                                                                             '\\"http://10.244.1.140:9093/api/v1/alerts\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.244.1.140:9093: '
                                                                             'i/o '
                                                                             'timeout"\n'
                                                                             'level=error '
                                                                             'ts=2020-10-21T08:35:41.920Z '
                                                                             'caller=notifier.go:527 '
                                                                             'component=notifier '
                                                                             'alertmanager=http://10.244.1.135:9093/api/v1/alerts '
                                                                             'count=1 '
                                                                             'msg="Error '
                                                                             'sending '
                                                                             'alert" '
                                                                             'err="Post '
                                                                             '\\"http://10.244.1.135:9093/api/v1/alerts\\": '
                                                                             'context '
                                                                             'deadline '
                                                                             'exceeded"\n'
                                                                             'I1021 '
                                                                             '08:35:46.335856       '
                                                                             '1 '
                                                                             'trace.go:116] '
                                                                             'Trace[133753080]: '
                                                                             '"Reflector '
                                                                             'ListAndWatch" '
                                                                             'name:/app/discovery/kubernetes/kubernetes.go:361 '
                                                                             '(started: '
                                                                             '2020-10-21 '
                                                                             '08:35:16.311825482 '
                                                                             '+0000 '
                                                                             'UTC '
                                                                             'm=+144091.785567564) '
                                                                             '(total '
                                                                             'time: '
                                                                             '30.02100919s):\n'
                                                                             'Trace[133753080]: '
                                                                             '[30.02100919s] '
                                                                             '[30.02100919s] '
                                                                             'END\n'
                                                                             'level=error '
                                                                             'ts=2020-10-21T08:35:46.335Z '
                                                                             'caller=klog.go:94 '
                                                                             'component=k8s_client_runtime '
                                                                             'func=ErrorDepth '
                                                                             'msg="/app/discovery/kubernetes/kubernetes.go:361: '
                                                                             'Failed '
                                                                             'to '
                                                                             'list '
                                                                             '*v1.Endpoints: '
                                                                             'Get '
                                                                             '\\"https://10.1.0.1:443/api/v1/namespaces/default/endpoints?resourceVersion=1685929\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.1.0.1:443: '
                                                                             'i/o '
                                                                             'timeout"\n'
                                                                             'level=error '
                                                                             'ts=2020-10-21T08:35:53.401Z '
                                                                             'caller=notifier.go:527 '
                                                                             'component=notifier '
                                                                             'alertmanager=http://10.244.1.140:9093/api/v1/alerts '
                                                                             'count=1 '
                                                                             'msg="Error '
                                                                             'sending '
                                                                             'alert" '
                                                                             'err="Post '
                                                                             '\\"http://10.244.1.140:9093/api/v1/alerts\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '10.244.1.140:9093: '
                                                                             'i/o '
                                                                             'timeout"\n'
                                                                             'level=error '
                                                                             'ts=2020-10-21T08:35:53.402Z '
                                                                             'caller=notifier.go:527 '
                                                                             'component=notifier '
                                                                             'alertmanager=http://10.244.1.135:9093/api/v1/alerts '
                                                                             'count=1 '
                                                                             'msg="Error '
                                                                             'sending '
                                                                             'alert" '
                                                                             'err="Post '
                                                                             '\\"http://10.244.1.135:9093/api/v1/alerts\\": '
                                                                             'context '
                                                                             'deadline '
                                                                             'exceeded"\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 14, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'prometheus',
                                    'ready': True,
                                    'restart_count': 8,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 2, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://2bf934a6467709a69c73688f52c7457ef07098dd1ec0fce53f55e910e9f6d155',
                                    'image': 'quay.mirrors.ustc.edu.cn/prometheus-operator/prometheus-config-reloader:v0.42.1',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/prometheus-operator/prometheus-config-reloader@sha256:d78d10ef97738d1d2944c3ea38d87fee014eb9a994e08799a05b481ab34196b0',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://ec25dc9249d99db3359a9d322feefcd5f937febbe24719c3e3233316c37ff00d',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': 'ts=2020-10-15T03:23:16.533164361Z '
                                                                             'caller=main.go:87 '
                                                                             'msg="Starting '
                                                                             'prometheus-config-reloader '
                                                                             'version '
                                                                             '\'0.42.1\'."\n'
                                                                             'level=error '
                                                                             'ts=2020-10-15T03:23:17.027068928Z '
                                                                             'caller=runutil.go:98 '
                                                                             'msg="function '
                                                                             'failed. '
                                                                             'Retrying '
                                                                             'in '
                                                                             'next '
                                                                             'tick" '
                                                                             'err="trigger '
                                                                             'reload: '
                                                                             'reload '
                                                                             'request '
                                                                             'failed: '
                                                                             'Post '
                                                                             '\\"http://localhost:9090/-/reload\\": '
                                                                             'dial '
                                                                             'tcp '
                                                                             '127.0.0.1:9090: '
                                                                             'connect: '
                                                                             'connection '
                                                                             'refused"\n'
                                                                             'level=info '
                                                                             'ts=2020-10-15T03:23:26.035601158Z '
                                                                             'caller=reloader.go:289 '
                                                                             'msg="Prometheus '
                                                                             'reload '
                                                                             'triggered" '
                                                                             'cfg_in=/etc/prometheus/config/prometheus.yaml.gz '
                                                                             'cfg_out=/etc/prometheus/config_out/prometheus.env.yaml '
                                                                             'rule_dirs=\n'
                                                                             'level=info '
                                                                             'ts=2020-10-15T03:23:26.111488011Z '
                                                                             'caller=reloader.go:157 '
                                                                             'msg="started '
                                                                             'watching '
                                                                             'config '
                                                                             'file '
                                                                             'and '
                                                                             'non-recursively '
                                                                             'rule '
                                                                             'dirs '
                                                                             'for '
                                                                             'changes" '
                                                                             'cfg=/etc/prometheus/config/prometheus.yaml.gz '
                                                                             'out=/etc/prometheus/config_out/prometheus.env.yaml '
                                                                             'dirs=\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 16, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'prometheus-config-reloader',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 3, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://cd015820e00e14527e5a66f9ebfdb87077873c317cd96e14e5262918415d6645',
                                    'image': 'jimmidyson/configmap-reload:v0.4.0',
                                    'image_id': 'docker-pullable://jimmidyson/configmap-reload@sha256:17d34fd73f9e8a78ba7da269d96822ce8972391c2838e08d92a990136adb8e4a',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://ac1953dcd5a96976dbb36524e9427d57d5f2ec87eab87c8379e816ac410ef9a9',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': '2020/10/15 '
                                                                             '03:23:20 '
                                                                             'Watching '
                                                                             'directory: '
                                                                             '"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"\n',
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 19, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'rules-configmap-reloader',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 3, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.181'}],
            'pod_ip': '10.244.2.181',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 27, 6, 31, 1, tzinfo=tzutc())}}

monitoring:::::::::::prometheus-operator-57d498c64c-dgtnv
{'api_version': None,
 'kind': None,
 'metadata': {'annotations': None,
              'cluster_name': None,
              'creation_timestamp': datetime.datetime(2020, 9, 25, 8, 12, 19, tzinfo=tzutc()),
              'deletion_grace_period_seconds': None,
              'deletion_timestamp': None,
              'finalizers': None,
              'generate_name': 'prometheus-operator-57d498c64c-',
              'generation': None,
              'labels': {'app.kubernetes.io/component': 'controller',
                         'app.kubernetes.io/name': 'prometheus-operator',
                         'app.kubernetes.io/version': 'v0.42.1',
                         'pod-template-hash': '57d498c64c'},
              'managed_fields': [{'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:metadata': {'f:generateName': {},
                                                               'f:labels': {'.': {},
                                                                            'f:app.kubernetes.io/component': {},
                                                                            'f:app.kubernetes.io/name': {},
                                                                            'f:app.kubernetes.io/version': {},
                                                                            'f:pod-template-hash': {}},
                                                               'f:ownerReferences': {'.': {},
                                                                                     'k:{"uid":"8d432fdf-b9db-4d27-8465-c4367f29d4da"}': {'.': {},
                                                                                                                                          'f:apiVersion': {},
                                                                                                                                          'f:blockOwnerDeletion': {},
                                                                                                                                          'f:controller': {},
                                                                                                                                          'f:kind': {},
                                                                                                                                          'f:name': {},
                                                                                                                                          'f:uid': {}}}},
                                                'f:spec': {'f:containers': {'k:{"name":"kube-rbac-proxy"}': {'.': {},
                                                                                                             'f:args': {},
                                                                                                             'f:image': {},
                                                                                                             'f:imagePullPolicy': {},
                                                                                                             'f:name': {},
                                                                                                             'f:ports': {'.': {},
                                                                                                                         'k:{"containerPort":8443,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                       'f:containerPort': {},
                                                                                                                                                                       'f:name': {},
                                                                                                                                                                       'f:protocol': {}}},
                                                                                                             'f:resources': {},
                                                                                                             'f:securityContext': {'.': {},
                                                                                                                                   'f:runAsUser': {}},
                                                                                                             'f:terminationMessagePath': {},
                                                                                                             'f:terminationMessagePolicy': {}},
                                                                            'k:{"name":"prometheus-operator"}': {'.': {},
                                                                                                                 'f:args': {},
                                                                                                                 'f:image': {},
                                                                                                                 'f:imagePullPolicy': {},
                                                                                                                 'f:name': {},
                                                                                                                 'f:ports': {'.': {},
                                                                                                                             'k:{"containerPort":8080,"protocol":"TCP"}': {'.': {},
                                                                                                                                                                           'f:containerPort': {},
                                                                                                                                                                           'f:name': {},
                                                                                                                                                                           'f:protocol': {}}},
                                                                                                                 'f:resources': {'.': {},
                                                                                                                                 'f:limits': {'.': {},
                                                                                                                                              'f:cpu': {},
                                                                                                                                              'f:memory': {}},
                                                                                                                                 'f:requests': {'.': {},
                                                                                                                                                'f:cpu': {},
                                                                                                                                                'f:memory': {}}},
                                                                                                                 'f:securityContext': {'.': {},
                                                                                                                                       'f:allowPrivilegeEscalation': {}},
                                                                                                                 'f:terminationMessagePath': {},
                                                                                                                 'f:terminationMessagePolicy': {}}},
                                                           'f:dnsPolicy': {},
                                                           'f:enableServiceLinks': {},
                                                           'f:nodeSelector': {'.': {},
                                                                              'f:beta.kubernetes.io/os': {}},
                                                           'f:restartPolicy': {},
                                                           'f:schedulerName': {},
                                                           'f:securityContext': {'.': {},
                                                                                 'f:runAsNonRoot': {},
                                                                                 'f:runAsUser': {}},
                                                           'f:serviceAccount': {},
                                                           'f:serviceAccountName': {},
                                                           'f:terminationGracePeriodSeconds': {}}},
                                  'manager': 'kube-controller-manager',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 49, 25, tzinfo=tzutc())},
                                 {'api_version': 'v1',
                                  'fields_type': 'FieldsV1',
                                  'fields_v1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {},
                                                                                                               'f:lastProbeTime': {},
                                                                                                               'f:lastTransitionTime': {},
                                                                                                               'f:status': {},
                                                                                                               'f:type': {}},
                                                                              'k:{"type":"Initialized"}': {'.': {},
                                                                                                           'f:lastProbeTime': {},
                                                                                                           'f:lastTransitionTime': {},
                                                                                                           'f:status': {},
                                                                                                           'f:type': {}},
                                                                              'k:{"type":"Ready"}': {'.': {},
                                                                                                     'f:lastProbeTime': {},
                                                                                                     'f:lastTransitionTime': {},
                                                                                                     'f:status': {},
                                                                                                     'f:type': {}}},
                                                             'f:containerStatuses': {},
                                                             'f:hostIP': {},
                                                             'f:phase': {},
                                                             'f:podIP': {},
                                                             'f:podIPs': {'.': {},
                                                                          'k:{"ip":"10.244.2.175"}': {'.': {},
                                                                                                      'f:ip': {}}},
                                                             'f:startTime': {}}},
                                  'manager': 'kubelet',
                                  'operation': 'Update',
                                  'time': datetime.datetime(2020, 10, 23, 0, 51, 50, tzinfo=tzutc())}],
              'name': 'prometheus-operator-57d498c64c-dgtnv',
              'namespace': 'monitoring',
              'owner_references': [{'api_version': 'apps/v1',
                                    'block_owner_deletion': True,
                                    'controller': True,
                                    'kind': 'ReplicaSet',
                                    'name': 'prometheus-operator-57d498c64c',
                                    'uid': '8d432fdf-b9db-4d27-8465-c4367f29d4da'}],
              'resource_version': '1814398',
              'self_link': '/api/v1/namespaces/monitoring/pods/prometheus-operator-57d498c64c-dgtnv',
              'uid': '80f6c210-7c80-4bdd-831d-f961e2acbdb5'},
 'spec': {'active_deadline_seconds': None,
          'affinity': None,
          'automount_service_account_token': None,
          'containers': [{'args': ['--kubelet-service=kube-system/kubelet',
                                   '--logtostderr=true',
                                   '--config-reloader-image=jimmidyson/configmap-reload:v0.4.0',
                                   '--prometheus-config-reloader=quay.mirrors.ustc.edu.cn/prometheus-operator/prometheus-config-reloader:v0.42.1'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/prometheus-operator/prometheus-operator:v0.42.1',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'prometheus-operator',
                          'ports': [{'container_port': 8080,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'http',
                                     'protocol': 'TCP'}],
                          'readiness_probe': None,
                          'resources': {'limits': {'cpu': '200m',
                                                   'memory': '200Mi'},
                                        'requests': {'cpu': '100m',
                                                     'memory': '100Mi'}},
                          'security_context': {'allow_privilege_escalation': False,
                                               'capabilities': None,
                                               'privileged': None,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': None,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'prometheus-operator-token-qllr4',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None},
                         {'args': ['--logtostderr',
                                   '--secure-listen-address=:8443',
                                   '--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305',
                                   '--upstream=http://127.0.0.1:8080/'],
                          'command': None,
                          'env': None,
                          'env_from': None,
                          'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                          'image_pull_policy': 'IfNotPresent',
                          'lifecycle': None,
                          'liveness_probe': None,
                          'name': 'kube-rbac-proxy',
                          'ports': [{'container_port': 8443,
                                     'host_ip': None,
                                     'host_port': None,
                                     'name': 'https',
                                     'protocol': 'TCP'}],
                          'readiness_probe': None,
                          'resources': {'limits': None, 'requests': None},
                          'security_context': {'allow_privilege_escalation': None,
                                               'capabilities': None,
                                               'privileged': None,
                                               'proc_mount': None,
                                               'read_only_root_filesystem': None,
                                               'run_as_group': None,
                                               'run_as_non_root': None,
                                               'run_as_user': 65534,
                                               'se_linux_options': None,
                                               'windows_options': None},
                          'startup_probe': None,
                          'stdin': None,
                          'stdin_once': None,
                          'termination_message_path': '/dev/termination-log',
                          'termination_message_policy': 'File',
                          'tty': None,
                          'volume_devices': None,
                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                             'mount_propagation': None,
                                             'name': 'prometheus-operator-token-qllr4',
                                             'read_only': True,
                                             'sub_path': None,
                                             'sub_path_expr': None}],
                          'working_dir': None}],
          'dns_config': None,
          'dns_policy': 'ClusterFirst',
          'enable_service_links': True,
          'ephemeral_containers': None,
          'host_aliases': None,
          'host_ipc': None,
          'host_network': None,
          'host_pid': None,
          'hostname': None,
          'image_pull_secrets': None,
          'init_containers': None,
          'node_name': 'node2',
          'node_selector': {'beta.kubernetes.io/os': 'linux'},
          'overhead': None,
          'preemption_policy': None,
          'priority': 0,
          'priority_class_name': None,
          'readiness_gates': None,
          'restart_policy': 'Always',
          'runtime_class_name': None,
          'scheduler_name': 'default-scheduler',
          'security_context': {'fs_group': None,
                               'run_as_group': None,
                               'run_as_non_root': True,
                               'run_as_user': 65534,
                               'se_linux_options': None,
                               'supplemental_groups': None,
                               'sysctls': None,
                               'windows_options': None},
          'service_account': 'prometheus-operator',
          'service_account_name': 'prometheus-operator',
          'share_process_namespace': None,
          'subdomain': None,
          'termination_grace_period_seconds': 30,
          'tolerations': [{'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/not-ready',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None},
                          {'effect': 'NoExecute',
                           'key': 'node.kubernetes.io/unreachable',
                           'operator': 'Exists',
                           'toleration_seconds': 300,
                           'value': None}],
          'topology_spread_constraints': None,
          'volumes': [{'aws_elastic_block_store': None,
                       'azure_disk': None,
                       'azure_file': None,
                       'cephfs': None,
                       'cinder': None,
                       'config_map': None,
                       'csi': None,
                       'downward_api': None,
                       'empty_dir': None,
                       'fc': None,
                       'flex_volume': None,
                       'flocker': None,
                       'gce_persistent_disk': None,
                       'git_repo': None,
                       'glusterfs': None,
                       'host_path': None,
                       'iscsi': None,
                       'name': 'prometheus-operator-token-qllr4',
                       'nfs': None,
                       'persistent_volume_claim': None,
                       'photon_persistent_disk': None,
                       'portworx_volume': None,
                       'projected': None,
                       'quobyte': None,
                       'rbd': None,
                       'scale_io': None,
                       'secret': {'default_mode': 420,
                                  'items': None,
                                  'optional': None,
                                  'secret_name': 'prometheus-operator-token-qllr4'},
                       'storageos': None,
                       'vsphere_volume': None}]},
 'status': {'conditions': [{'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 12, 20, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Initialized'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 2, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'Ready'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 10, 22, 1, 21, 2, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'ContainersReady'},
                           {'last_probe_time': None,
                            'last_transition_time': datetime.datetime(2020, 9, 25, 8, 12, 19, tzinfo=tzutc()),
                            'message': None,
                            'reason': None,
                            'status': 'True',
                            'type': 'PodScheduled'}],
            'container_statuses': [{'container_id': 'docker://0dabee329add80a359b457f02b513433e00c6ff09e07cf0520f1b9a42ff4d3d8',
                                    'image': 'quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy:v0.6.0',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/brancz/kube-rbac-proxy@sha256:8ca9c9fd1f121126b7d39ea7344beb26b8eb02614b7deee66092caae12ec909f',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://5953bf1cd18fdea033de33a44f8c0f05df7604fc3b3e62777af0dd277ed801ec',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 31, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 16, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'kube-rbac-proxy',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, 1, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}},
                                   {'container_id': 'docker://f6735ee1ae29b885123c8f3fccb8e0e3c4835098acc0c408dc6e282a93cc7019',
                                    'image': 'quay.mirrors.ustc.edu.cn/prometheus-operator/prometheus-operator:v0.42.1',
                                    'image_id': 'docker-pullable://quay.mirrors.ustc.edu.cn/prometheus-operator/prometheus-operator@sha256:0fb57ddfd656b3ac43beaa339b05ae9b3d8f89553cf16df66fbbba2f947560c0',
                                    'last_state': {'running': None,
                                                   'terminated': {'container_id': 'docker://07eb03abb90104ea653fe2a2142c6b327c84734a14034fa0e0fb9926d09c9ba5',
                                                                  'exit_code': 255,
                                                                  'finished_at': datetime.datetime(2020, 10, 22, 1, 20, 30, tzinfo=tzutc()),
                                                                  'message': None,
                                                                  'reason': 'Error',
                                                                  'signal': None,
                                                                  'started_at': datetime.datetime(2020, 10, 15, 3, 23, 15, tzinfo=tzutc())},
                                                   'waiting': None},
                                    'name': 'prometheus-operator',
                                    'ready': True,
                                    'restart_count': 7,
                                    'started': True,
                                    'state': {'running': {'started_at': datetime.datetime(2020, 10, 22, 1, 21, tzinfo=tzutc())},
                                              'terminated': None,
                                              'waiting': None}}],
            'ephemeral_container_statuses': None,
            'host_ip': '192.168.242.102',
            'init_container_statuses': None,
            'message': None,
            'nominated_node_name': None,
            'phase': 'Running',
            'pod_i_ps': [{'ip': '10.244.2.175'}],
            'pod_ip': '10.244.2.175',
            'qos_class': 'Burstable',
            'reason': None,
            'start_time': datetime.datetime(2020, 9, 25, 8, 12, 20, tzinfo=tzutc())}}
